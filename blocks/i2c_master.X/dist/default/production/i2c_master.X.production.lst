

Microchip Technology PIC LITE Macro Assembler V1.41 build -162212810 
                                                                                               Thu Jul 13 20:52:05 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	16F1829
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK2,global,class=CODE,delta=2
     5                           	psect	stringtext,global,class=STRCODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1
     9                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1
    10                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1
    11                           	psect	bssBANK4,global,class=BANK4,space=1,delta=1
    12                           	psect	bssBANK5,global,class=BANK5,space=1,delta=1
    13                           	psect	bssBANK6,global,class=BANK6,space=1,delta=1
    14                           	psect	clrtext,global,class=CODE,delta=2
    15                           	psect	cstackBANK2,global,class=BANK2,space=1,delta=1
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    18                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    19                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2
    20                           	psect	text1,local,class=CODE,merge=1,delta=2
    21                           	psect	text2,local,class=CODE,merge=1,delta=2
    22                           	psect	text3,local,class=CODE,merge=1,delta=2
    23                           	psect	text4,local,class=CODE,merge=1,delta=2
    24                           	psect	text5,local,class=CODE,merge=1,delta=2
    25                           	psect	text6,local,class=CODE,merge=1,delta=2
    26                           	psect	text7,local,class=CODE,merge=1,delta=2
    27                           	psect	text8,local,class=CODE,merge=1,delta=2
    28                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    29                           	psect	text10,local,class=CODE,merge=1,delta=2,group=1
    30                           	psect	text11,local,class=CODE,merge=1,delta=2
    31                           	psect	text12,local,class=CODE,merge=1,delta=2
    32                           	psect	text13,local,class=CODE,merge=1,delta=2
    33                           	psect	text14,local,class=CODE,merge=1,delta=2
    34                           	psect	text15,local,class=CODE,merge=1,delta=2,group=3
    35                           	psect	text16,local,class=CODE,merge=1,delta=2,group=3
    36                           	psect	text17,local,class=CODE,merge=1,delta=2,group=3
    37                           	psect	text18,local,class=CODE,merge=1,delta=2,group=3
    38                           	psect	text19,local,class=CODE,merge=1,delta=2,group=3
    39                           	psect	text20,local,class=CODE,merge=1,delta=2,group=1
    40                           	psect	text21,local,class=CODE,merge=1,delta=2,group=1
    41                           	psect	text22,local,class=CODE,merge=1,delta=2,group=3
    42                           	psect	text23,local,class=CODE,merge=1,delta=2,group=3
    43                           	psect	text24,local,class=CODE,merge=1,delta=2
    44                           	psect	text25,local,class=CODE,merge=1,delta=2
    45                           	psect	text26,local,class=CODE,merge=1,delta=2
    46                           	psect	text27,local,class=CODE,merge=1,delta=2
    47                           	psect	text28,local,class=CODE,merge=1,delta=2,group=1
    48                           	psect	text29,local,class=CODE,merge=1,delta=2,group=1
    49                           	psect	text30,local,class=CODE,merge=1,delta=2,group=1
    50                           	psect	text31,local,class=CODE,merge=1,delta=2
    51                           	psect	text32,local,class=CODE,merge=1,delta=2,group=1
    52                           	psect	text33,local,class=CODE,merge=1,delta=2,group=1
    53                           	psect	text34,local,class=CODE,merge=1,delta=2,group=1
    54                           	psect	text35,local,class=CODE,merge=1,delta=2,group=1
    55                           	psect	text36,local,class=CODE,merge=1,delta=2
    56                           	psect	text37,local,class=CODE,merge=1,delta=2,group=3
    57                           	psect	text38,local,class=CODE,merge=1,delta=2
    58                           	psect	text39,local,class=CODE,merge=1,delta=2,group=3
    59                           	psect	text40,local,class=CODE,merge=1,delta=2
    60                           	psect	text41,local,class=CODE,merge=1,delta=2,group=3
    61                           	psect	text42,local,class=CODE,merge=1,delta=2
    62                           	psect	text43,local,class=CODE,merge=1,delta=2
    63                           	psect	text44,local,class=CODE,merge=1,delta=2
    64                           	psect	text45,local,class=CODE,merge=1,delta=2,group=3
    65                           	psect	text46,local,class=CODE,merge=1,delta=2,group=3
    66                           	psect	text47,local,class=CODE,merge=1,delta=2
    67                           	psect	text48,local,class=CODE,merge=1,delta=2
    68                           	psect	text49,local,class=CODE,merge=1,delta=2
    69                           	psect	text50,local,class=CODE,merge=1,delta=2
    70                           	psect	text51,local,class=CODE,merge=1,delta=2
    71                           	psect	text52,local,class=CODE,merge=1,delta=2
    72                           	psect	text53,local,class=CODE,merge=1,delta=2
    73                           	psect	text54,local,class=CODE,merge=1,delta=2
    74                           	psect	text55,local,class=CODE,merge=1,delta=2,group=3
    75                           	psect	text56,local,class=CODE,merge=1,delta=2
    76                           	psect	text57,local,class=CODE,merge=1,delta=2
    77                           	psect	text58,local,class=CODE,merge=1,delta=2
    78                           	psect	text59,local,class=CODE,merge=1,delta=2
    79                           	psect	text60,local,class=CODE,merge=1,delta=2,group=3
    80                           	psect	text61,local,class=CODE,merge=1,delta=2,group=3
    81                           	psect	text62,local,class=CODE,merge=1,delta=2,group=3
    82                           	psect	text63,local,class=CODE,merge=1,delta=2
    83                           	psect	text64,local,class=CODE,merge=1,delta=2
    84                           	psect	text65,local,class=CODE,merge=1,delta=2,group=1
    85                           	psect	text66,local,class=CODE,merge=1,delta=2
    86                           	psect	text67,local,class=CODE,merge=1,delta=2
    87                           	psect	intentry,global,class=CODE,delta=2
    88                           	psect	text69,local,class=CODE,merge=1,delta=2
    89                           	psect	swtext1,local,class=CONST,delta=2
    90                           	psect	text70,local,class=CODE,merge=1,delta=2
    91                           	psect	text71,local,class=CODE,merge=1,delta=2
    92                           	psect	text72,local,class=CODE,merge=1,delta=2
    93                           	psect	text73,local,class=CODE,merge=1,delta=2
    94                           	psect	text74,local,class=CODE,merge=1,delta=2
    95                           	dabs	1,0x620,48
    96                           	dabs	1,0x5A0,80
    97                           	dabs	1,0x530,64
    98                           	dabs	1,0x2330,0,_cmd_buf
    99                           	dabs	1,0x7E,2
   100  0000                     
   101                           ; Version 1.41 (B)
   102                           ; Generated 21/02/2017 GMT
   103                           ; 
   104                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
   105                           ; All rights reserved.
   106                           ; 
   107                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   108                           ; 
   109                           ; Redistribution and use in source and binary forms, with or without modification, are
   110                           ; permitted provided that the following conditions are met:
   111                           ; 
   112                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   113                           ;        conditions and the following disclaimer.
   114                           ; 
   115                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   116                           ;        of conditions and the following disclaimer in the documentation and/or other
   117                           ;        materials provided with the distribution.
   118                           ; 
   119                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   120                           ;        software without specific prior written permission.
   121                           ; 
   122                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   123                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   124                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   125                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   126                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   127                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   128                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   129                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   130                           ; 
   131                           ; 
   132                           ; Code-generator required, PIC16F1829 Definitions
   133                           ; 
   134                           ; SFR Addresses
   135  0000                     	;# 
   136  0001                     	;# 
   137  0002                     	;# 
   138  0003                     	;# 
   139  0004                     	;# 
   140  0005                     	;# 
   141  0006                     	;# 
   142  0007                     	;# 
   143  0008                     	;# 
   144  0009                     	;# 
   145  000A                     	;# 
   146  000B                     	;# 
   147  000C                     	;# 
   148  000D                     	;# 
   149  000E                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0014                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0016                     	;# 
   157  0017                     	;# 
   158  0018                     	;# 
   159  0019                     	;# 
   160  001A                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001E                     	;# 
   164  001F                     	;# 
   165  008C                     	;# 
   166  008D                     	;# 
   167  008E                     	;# 
   168  0091                     	;# 
   169  0092                     	;# 
   170  0093                     	;# 
   171  0094                     	;# 
   172  0095                     	;# 
   173  0096                     	;# 
   174  0097                     	;# 
   175  0098                     	;# 
   176  0099                     	;# 
   177  009A                     	;# 
   178  009B                     	;# 
   179  009B                     	;# 
   180  009C                     	;# 
   181  009D                     	;# 
   182  009E                     	;# 
   183  010C                     	;# 
   184  010D                     	;# 
   185  010E                     	;# 
   186  0111                     	;# 
   187  0112                     	;# 
   188  0113                     	;# 
   189  0114                     	;# 
   190  0115                     	;# 
   191  0116                     	;# 
   192  0117                     	;# 
   193  0118                     	;# 
   194  0119                     	;# 
   195  011A                     	;# 
   196  011B                     	;# 
   197  011D                     	;# 
   198  011E                     	;# 
   199  018C                     	;# 
   200  018D                     	;# 
   201  018E                     	;# 
   202  0191                     	;# 
   203  0191                     	;# 
   204  0192                     	;# 
   205  0193                     	;# 
   206  0193                     	;# 
   207  0193                     	;# 
   208  0194                     	;# 
   209  0195                     	;# 
   210  0196                     	;# 
   211  0199                     	;# 
   212  019A                     	;# 
   213  019B                     	;# 
   214  019B                     	;# 
   215  019C                     	;# 
   216  019D                     	;# 
   217  019E                     	;# 
   218  019F                     	;# 
   219  020C                     	;# 
   220  020D                     	;# 
   221  020E                     	;# 
   222  0211                     	;# 
   223  0211                     	;# 
   224  0212                     	;# 
   225  0212                     	;# 
   226  0213                     	;# 
   227  0213                     	;# 
   228  0214                     	;# 
   229  0214                     	;# 
   230  0215                     	;# 
   231  0215                     	;# 
   232  0215                     	;# 
   233  0216                     	;# 
   234  0216                     	;# 
   235  0217                     	;# 
   236  0217                     	;# 
   237  0219                     	;# 
   238  021A                     	;# 
   239  021B                     	;# 
   240  021C                     	;# 
   241  021D                     	;# 
   242  021E                     	;# 
   243  021F                     	;# 
   244  0291                     	;# 
   245  0291                     	;# 
   246  0292                     	;# 
   247  0293                     	;# 
   248  0294                     	;# 
   249  0295                     	;# 
   250  0295                     	;# 
   251  0296                     	;# 
   252  0298                     	;# 
   253  0298                     	;# 
   254  0299                     	;# 
   255  029A                     	;# 
   256  029B                     	;# 
   257  029C                     	;# 
   258  029D                     	;# 
   259  029E                     	;# 
   260  0311                     	;# 
   261  0311                     	;# 
   262  0312                     	;# 
   263  0313                     	;# 
   264  0318                     	;# 
   265  0318                     	;# 
   266  0319                     	;# 
   267  031A                     	;# 
   268  038C                     	;# 
   269  038D                     	;# 
   270  038E                     	;# 
   271  0391                     	;# 
   272  0392                     	;# 
   273  0393                     	;# 
   274  0394                     	;# 
   275  0395                     	;# 
   276  0396                     	;# 
   277  039A                     	;# 
   278  039C                     	;# 
   279  039D                     	;# 
   280  039E                     	;# 
   281  039F                     	;# 
   282  0415                     	;# 
   283  0416                     	;# 
   284  0417                     	;# 
   285  041C                     	;# 
   286  041D                     	;# 
   287  041E                     	;# 
   288  0FE4                     	;# 
   289  0FE5                     	;# 
   290  0FE6                     	;# 
   291  0FE7                     	;# 
   292  0FE8                     	;# 
   293  0FE9                     	;# 
   294  0FEA                     	;# 
   295  0FEB                     	;# 
   296  0FED                     	;# 
   297  0FEE                     	;# 
   298  0FEF                     	;# 
   299  0000                     	;# 
   300  0001                     	;# 
   301  0002                     	;# 
   302  0003                     	;# 
   303  0004                     	;# 
   304  0005                     	;# 
   305  0006                     	;# 
   306  0007                     	;# 
   307  0008                     	;# 
   308  0009                     	;# 
   309  000A                     	;# 
   310  000B                     	;# 
   311  000C                     	;# 
   312  000D                     	;# 
   313  000E                     	;# 
   314  0011                     	;# 
   315  0012                     	;# 
   316  0013                     	;# 
   317  0014                     	;# 
   318  0015                     	;# 
   319  0016                     	;# 
   320  0016                     	;# 
   321  0017                     	;# 
   322  0018                     	;# 
   323  0019                     	;# 
   324  001A                     	;# 
   325  001B                     	;# 
   326  001C                     	;# 
   327  001E                     	;# 
   328  001F                     	;# 
   329  008C                     	;# 
   330  008D                     	;# 
   331  008E                     	;# 
   332  0091                     	;# 
   333  0092                     	;# 
   334  0093                     	;# 
   335  0094                     	;# 
   336  0095                     	;# 
   337  0096                     	;# 
   338  0097                     	;# 
   339  0098                     	;# 
   340  0099                     	;# 
   341  009A                     	;# 
   342  009B                     	;# 
   343  009B                     	;# 
   344  009C                     	;# 
   345  009D                     	;# 
   346  009E                     	;# 
   347  010C                     	;# 
   348  010D                     	;# 
   349  010E                     	;# 
   350  0111                     	;# 
   351  0112                     	;# 
   352  0113                     	;# 
   353  0114                     	;# 
   354  0115                     	;# 
   355  0116                     	;# 
   356  0117                     	;# 
   357  0118                     	;# 
   358  0119                     	;# 
   359  011A                     	;# 
   360  011B                     	;# 
   361  011D                     	;# 
   362  011E                     	;# 
   363  018C                     	;# 
   364  018D                     	;# 
   365  018E                     	;# 
   366  0191                     	;# 
   367  0191                     	;# 
   368  0192                     	;# 
   369  0193                     	;# 
   370  0193                     	;# 
   371  0193                     	;# 
   372  0194                     	;# 
   373  0195                     	;# 
   374  0196                     	;# 
   375  0199                     	;# 
   376  019A                     	;# 
   377  019B                     	;# 
   378  019B                     	;# 
   379  019C                     	;# 
   380  019D                     	;# 
   381  019E                     	;# 
   382  019F                     	;# 
   383  020C                     	;# 
   384  020D                     	;# 
   385  020E                     	;# 
   386  0211                     	;# 
   387  0211                     	;# 
   388  0212                     	;# 
   389  0212                     	;# 
   390  0213                     	;# 
   391  0213                     	;# 
   392  0214                     	;# 
   393  0214                     	;# 
   394  0215                     	;# 
   395  0215                     	;# 
   396  0215                     	;# 
   397  0216                     	;# 
   398  0216                     	;# 
   399  0217                     	;# 
   400  0217                     	;# 
   401  0219                     	;# 
   402  021A                     	;# 
   403  021B                     	;# 
   404  021C                     	;# 
   405  021D                     	;# 
   406  021E                     	;# 
   407  021F                     	;# 
   408  0291                     	;# 
   409  0291                     	;# 
   410  0292                     	;# 
   411  0293                     	;# 
   412  0294                     	;# 
   413  0295                     	;# 
   414  0295                     	;# 
   415  0296                     	;# 
   416  0298                     	;# 
   417  0298                     	;# 
   418  0299                     	;# 
   419  029A                     	;# 
   420  029B                     	;# 
   421  029C                     	;# 
   422  029D                     	;# 
   423  029E                     	;# 
   424  0311                     	;# 
   425  0311                     	;# 
   426  0312                     	;# 
   427  0313                     	;# 
   428  0318                     	;# 
   429  0318                     	;# 
   430  0319                     	;# 
   431  031A                     	;# 
   432  038C                     	;# 
   433  038D                     	;# 
   434  038E                     	;# 
   435  0391                     	;# 
   436  0392                     	;# 
   437  0393                     	;# 
   438  0394                     	;# 
   439  0395                     	;# 
   440  0396                     	;# 
   441  039A                     	;# 
   442  039C                     	;# 
   443  039D                     	;# 
   444  039E                     	;# 
   445  039F                     	;# 
   446  0415                     	;# 
   447  0416                     	;# 
   448  0417                     	;# 
   449  041C                     	;# 
   450  041D                     	;# 
   451  041E                     	;# 
   452  0FE4                     	;# 
   453  0FE5                     	;# 
   454  0FE6                     	;# 
   455  0FE7                     	;# 
   456  0FE8                     	;# 
   457  0FE9                     	;# 
   458  0FEA                     	;# 
   459  0FEB                     	;# 
   460  0FED                     	;# 
   461  0FEE                     	;# 
   462  0FEF                     	;# 
   463  0000                     	;# 
   464  0001                     	;# 
   465  0002                     	;# 
   466  0003                     	;# 
   467  0004                     	;# 
   468  0005                     	;# 
   469  0006                     	;# 
   470  0007                     	;# 
   471  0008                     	;# 
   472  0009                     	;# 
   473  000A                     	;# 
   474  000B                     	;# 
   475  000C                     	;# 
   476  000D                     	;# 
   477  000E                     	;# 
   478  0011                     	;# 
   479  0012                     	;# 
   480  0013                     	;# 
   481  0014                     	;# 
   482  0015                     	;# 
   483  0016                     	;# 
   484  0016                     	;# 
   485  0017                     	;# 
   486  0018                     	;# 
   487  0019                     	;# 
   488  001A                     	;# 
   489  001B                     	;# 
   490  001C                     	;# 
   491  001E                     	;# 
   492  001F                     	;# 
   493  008C                     	;# 
   494  008D                     	;# 
   495  008E                     	;# 
   496  0091                     	;# 
   497  0092                     	;# 
   498  0093                     	;# 
   499  0094                     	;# 
   500  0095                     	;# 
   501  0096                     	;# 
   502  0097                     	;# 
   503  0098                     	;# 
   504  0099                     	;# 
   505  009A                     	;# 
   506  009B                     	;# 
   507  009B                     	;# 
   508  009C                     	;# 
   509  009D                     	;# 
   510  009E                     	;# 
   511  010C                     	;# 
   512  010D                     	;# 
   513  010E                     	;# 
   514  0111                     	;# 
   515  0112                     	;# 
   516  0113                     	;# 
   517  0114                     	;# 
   518  0115                     	;# 
   519  0116                     	;# 
   520  0117                     	;# 
   521  0118                     	;# 
   522  0119                     	;# 
   523  011A                     	;# 
   524  011B                     	;# 
   525  011D                     	;# 
   526  011E                     	;# 
   527  018C                     	;# 
   528  018D                     	;# 
   529  018E                     	;# 
   530  0191                     	;# 
   531  0191                     	;# 
   532  0192                     	;# 
   533  0193                     	;# 
   534  0193                     	;# 
   535  0193                     	;# 
   536  0194                     	;# 
   537  0195                     	;# 
   538  0196                     	;# 
   539  0199                     	;# 
   540  019A                     	;# 
   541  019B                     	;# 
   542  019B                     	;# 
   543  019C                     	;# 
   544  019D                     	;# 
   545  019E                     	;# 
   546  019F                     	;# 
   547  020C                     	;# 
   548  020D                     	;# 
   549  020E                     	;# 
   550  0211                     	;# 
   551  0211                     	;# 
   552  0212                     	;# 
   553  0212                     	;# 
   554  0213                     	;# 
   555  0213                     	;# 
   556  0214                     	;# 
   557  0214                     	;# 
   558  0215                     	;# 
   559  0215                     	;# 
   560  0215                     	;# 
   561  0216                     	;# 
   562  0216                     	;# 
   563  0217                     	;# 
   564  0217                     	;# 
   565  0219                     	;# 
   566  021A                     	;# 
   567  021B                     	;# 
   568  021C                     	;# 
   569  021D                     	;# 
   570  021E                     	;# 
   571  021F                     	;# 
   572  0291                     	;# 
   573  0291                     	;# 
   574  0292                     	;# 
   575  0293                     	;# 
   576  0294                     	;# 
   577  0295                     	;# 
   578  0295                     	;# 
   579  0296                     	;# 
   580  0298                     	;# 
   581  0298                     	;# 
   582  0299                     	;# 
   583  029A                     	;# 
   584  029B                     	;# 
   585  029C                     	;# 
   586  029D                     	;# 
   587  029E                     	;# 
   588  0311                     	;# 
   589  0311                     	;# 
   590  0312                     	;# 
   591  0313                     	;# 
   592  0318                     	;# 
   593  0318                     	;# 
   594  0319                     	;# 
   595  031A                     	;# 
   596  038C                     	;# 
   597  038D                     	;# 
   598  038E                     	;# 
   599  0391                     	;# 
   600  0392                     	;# 
   601  0393                     	;# 
   602  0394                     	;# 
   603  0395                     	;# 
   604  0396                     	;# 
   605  039A                     	;# 
   606  039C                     	;# 
   607  039D                     	;# 
   608  039E                     	;# 
   609  039F                     	;# 
   610  0415                     	;# 
   611  0416                     	;# 
   612  0417                     	;# 
   613  041C                     	;# 
   614  041D                     	;# 
   615  041E                     	;# 
   616  0FE4                     	;# 
   617  0FE5                     	;# 
   618  0FE6                     	;# 
   619  0FE7                     	;# 
   620  0FE8                     	;# 
   621  0FE9                     	;# 
   622  0FEA                     	;# 
   623  0FEB                     	;# 
   624  0FED                     	;# 
   625  0FEE                     	;# 
   626  0FEF                     	;# 
   627  0000                     	;# 
   628  0001                     	;# 
   629  0002                     	;# 
   630  0003                     	;# 
   631  0004                     	;# 
   632  0005                     	;# 
   633  0006                     	;# 
   634  0007                     	;# 
   635  0008                     	;# 
   636  0009                     	;# 
   637  000A                     	;# 
   638  000B                     	;# 
   639  000C                     	;# 
   640  000D                     	;# 
   641  000E                     	;# 
   642  0011                     	;# 
   643  0012                     	;# 
   644  0013                     	;# 
   645  0014                     	;# 
   646  0015                     	;# 
   647  0016                     	;# 
   648  0016                     	;# 
   649  0017                     	;# 
   650  0018                     	;# 
   651  0019                     	;# 
   652  001A                     	;# 
   653  001B                     	;# 
   654  001C                     	;# 
   655  001E                     	;# 
   656  001F                     	;# 
   657  008C                     	;# 
   658  008D                     	;# 
   659  008E                     	;# 
   660  0091                     	;# 
   661  0092                     	;# 
   662  0093                     	;# 
   663  0094                     	;# 
   664  0095                     	;# 
   665  0096                     	;# 
   666  0097                     	;# 
   667  0098                     	;# 
   668  0099                     	;# 
   669  009A                     	;# 
   670  009B                     	;# 
   671  009B                     	;# 
   672  009C                     	;# 
   673  009D                     	;# 
   674  009E                     	;# 
   675  010C                     	;# 
   676  010D                     	;# 
   677  010E                     	;# 
   678  0111                     	;# 
   679  0112                     	;# 
   680  0113                     	;# 
   681  0114                     	;# 
   682  0115                     	;# 
   683  0116                     	;# 
   684  0117                     	;# 
   685  0118                     	;# 
   686  0119                     	;# 
   687  011A                     	;# 
   688  011B                     	;# 
   689  011D                     	;# 
   690  011E                     	;# 
   691  018C                     	;# 
   692  018D                     	;# 
   693  018E                     	;# 
   694  0191                     	;# 
   695  0191                     	;# 
   696  0192                     	;# 
   697  0193                     	;# 
   698  0193                     	;# 
   699  0193                     	;# 
   700  0194                     	;# 
   701  0195                     	;# 
   702  0196                     	;# 
   703  0199                     	;# 
   704  019A                     	;# 
   705  019B                     	;# 
   706  019B                     	;# 
   707  019C                     	;# 
   708  019D                     	;# 
   709  019E                     	;# 
   710  019F                     	;# 
   711  020C                     	;# 
   712  020D                     	;# 
   713  020E                     	;# 
   714  0211                     	;# 
   715  0211                     	;# 
   716  0212                     	;# 
   717  0212                     	;# 
   718  0213                     	;# 
   719  0213                     	;# 
   720  0214                     	;# 
   721  0214                     	;# 
   722  0215                     	;# 
   723  0215                     	;# 
   724  0215                     	;# 
   725  0216                     	;# 
   726  0216                     	;# 
   727  0217                     	;# 
   728  0217                     	;# 
   729  0219                     	;# 
   730  021A                     	;# 
   731  021B                     	;# 
   732  021C                     	;# 
   733  021D                     	;# 
   734  021E                     	;# 
   735  021F                     	;# 
   736  0291                     	;# 
   737  0291                     	;# 
   738  0292                     	;# 
   739  0293                     	;# 
   740  0294                     	;# 
   741  0295                     	;# 
   742  0295                     	;# 
   743  0296                     	;# 
   744  0298                     	;# 
   745  0298                     	;# 
   746  0299                     	;# 
   747  029A                     	;# 
   748  029B                     	;# 
   749  029C                     	;# 
   750  029D                     	;# 
   751  029E                     	;# 
   752  0311                     	;# 
   753  0311                     	;# 
   754  0312                     	;# 
   755  0313                     	;# 
   756  0318                     	;# 
   757  0318                     	;# 
   758  0319                     	;# 
   759  031A                     	;# 
   760  038C                     	;# 
   761  038D                     	;# 
   762  038E                     	;# 
   763  0391                     	;# 
   764  0392                     	;# 
   765  0393                     	;# 
   766  0394                     	;# 
   767  0395                     	;# 
   768  0396                     	;# 
   769  039A                     	;# 
   770  039C                     	;# 
   771  039D                     	;# 
   772  039E                     	;# 
   773  039F                     	;# 
   774  0415                     	;# 
   775  0416                     	;# 
   776  0417                     	;# 
   777  041C                     	;# 
   778  041D                     	;# 
   779  041E                     	;# 
   780  0FE4                     	;# 
   781  0FE5                     	;# 
   782  0FE6                     	;# 
   783  0FE7                     	;# 
   784  0FE8                     	;# 
   785  0FE9                     	;# 
   786  0FEA                     	;# 
   787  0FEB                     	;# 
   788  0FED                     	;# 
   789  0FEE                     	;# 
   790  0FEF                     	;# 
   791  0000                     	;# 
   792  0001                     	;# 
   793  0002                     	;# 
   794  0003                     	;# 
   795  0004                     	;# 
   796  0005                     	;# 
   797  0006                     	;# 
   798  0007                     	;# 
   799  0008                     	;# 
   800  0009                     	;# 
   801  000A                     	;# 
   802  000B                     	;# 
   803  000C                     	;# 
   804  000D                     	;# 
   805  000E                     	;# 
   806  0011                     	;# 
   807  0012                     	;# 
   808  0013                     	;# 
   809  0014                     	;# 
   810  0015                     	;# 
   811  0016                     	;# 
   812  0016                     	;# 
   813  0017                     	;# 
   814  0018                     	;# 
   815  0019                     	;# 
   816  001A                     	;# 
   817  001B                     	;# 
   818  001C                     	;# 
   819  001E                     	;# 
   820  001F                     	;# 
   821  008C                     	;# 
   822  008D                     	;# 
   823  008E                     	;# 
   824  0091                     	;# 
   825  0092                     	;# 
   826  0093                     	;# 
   827  0094                     	;# 
   828  0095                     	;# 
   829  0096                     	;# 
   830  0097                     	;# 
   831  0098                     	;# 
   832  0099                     	;# 
   833  009A                     	;# 
   834  009B                     	;# 
   835  009B                     	;# 
   836  009C                     	;# 
   837  009D                     	;# 
   838  009E                     	;# 
   839  010C                     	;# 
   840  010D                     	;# 
   841  010E                     	;# 
   842  0111                     	;# 
   843  0112                     	;# 
   844  0113                     	;# 
   845  0114                     	;# 
   846  0115                     	;# 
   847  0116                     	;# 
   848  0117                     	;# 
   849  0118                     	;# 
   850  0119                     	;# 
   851  011A                     	;# 
   852  011B                     	;# 
   853  011D                     	;# 
   854  011E                     	;# 
   855  018C                     	;# 
   856  018D                     	;# 
   857  018E                     	;# 
   858  0191                     	;# 
   859  0191                     	;# 
   860  0192                     	;# 
   861  0193                     	;# 
   862  0193                     	;# 
   863  0193                     	;# 
   864  0194                     	;# 
   865  0195                     	;# 
   866  0196                     	;# 
   867  0199                     	;# 
   868  019A                     	;# 
   869  019B                     	;# 
   870  019B                     	;# 
   871  019C                     	;# 
   872  019D                     	;# 
   873  019E                     	;# 
   874  019F                     	;# 
   875  020C                     	;# 
   876  020D                     	;# 
   877  020E                     	;# 
   878  0211                     	;# 
   879  0211                     	;# 
   880  0212                     	;# 
   881  0212                     	;# 
   882  0213                     	;# 
   883  0213                     	;# 
   884  0214                     	;# 
   885  0214                     	;# 
   886  0215                     	;# 
   887  0215                     	;# 
   888  0215                     	;# 
   889  0216                     	;# 
   890  0216                     	;# 
   891  0217                     	;# 
   892  0217                     	;# 
   893  0219                     	;# 
   894  021A                     	;# 
   895  021B                     	;# 
   896  021C                     	;# 
   897  021D                     	;# 
   898  021E                     	;# 
   899  021F                     	;# 
   900  0291                     	;# 
   901  0291                     	;# 
   902  0292                     	;# 
   903  0293                     	;# 
   904  0294                     	;# 
   905  0295                     	;# 
   906  0295                     	;# 
   907  0296                     	;# 
   908  0298                     	;# 
   909  0298                     	;# 
   910  0299                     	;# 
   911  029A                     	;# 
   912  029B                     	;# 
   913  029C                     	;# 
   914  029D                     	;# 
   915  029E                     	;# 
   916  0311                     	;# 
   917  0311                     	;# 
   918  0312                     	;# 
   919  0313                     	;# 
   920  0318                     	;# 
   921  0318                     	;# 
   922  0319                     	;# 
   923  031A                     	;# 
   924  038C                     	;# 
   925  038D                     	;# 
   926  038E                     	;# 
   927  0391                     	;# 
   928  0392                     	;# 
   929  0393                     	;# 
   930  0394                     	;# 
   931  0395                     	;# 
   932  0396                     	;# 
   933  039A                     	;# 
   934  039C                     	;# 
   935  039D                     	;# 
   936  039E                     	;# 
   937  039F                     	;# 
   938  0415                     	;# 
   939  0416                     	;# 
   940  0417                     	;# 
   941  041C                     	;# 
   942  041D                     	;# 
   943  041E                     	;# 
   944  0FE4                     	;# 
   945  0FE5                     	;# 
   946  0FE6                     	;# 
   947  0FE7                     	;# 
   948  0FE8                     	;# 
   949  0FE9                     	;# 
   950  0FEA                     	;# 
   951  0FEB                     	;# 
   952  0FED                     	;# 
   953  0FEE                     	;# 
   954  0FEF                     	;# 
   955  0000                     	;# 
   956  0001                     	;# 
   957  0002                     	;# 
   958  0003                     	;# 
   959  0004                     	;# 
   960  0005                     	;# 
   961  0006                     	;# 
   962  0007                     	;# 
   963  0008                     	;# 
   964  0009                     	;# 
   965  000A                     	;# 
   966  000B                     	;# 
   967  000C                     	;# 
   968  000D                     	;# 
   969  000E                     	;# 
   970  0011                     	;# 
   971  0012                     	;# 
   972  0013                     	;# 
   973  0014                     	;# 
   974  0015                     	;# 
   975  0016                     	;# 
   976  0016                     	;# 
   977  0017                     	;# 
   978  0018                     	;# 
   979  0019                     	;# 
   980  001A                     	;# 
   981  001B                     	;# 
   982  001C                     	;# 
   983  001E                     	;# 
   984  001F                     	;# 
   985  008C                     	;# 
   986  008D                     	;# 
   987  008E                     	;# 
   988  0091                     	;# 
   989  0092                     	;# 
   990  0093                     	;# 
   991  0094                     	;# 
   992  0095                     	;# 
   993  0096                     	;# 
   994  0097                     	;# 
   995  0098                     	;# 
   996  0099                     	;# 
   997  009A                     	;# 
   998  009B                     	;# 
   999  009B                     	;# 
  1000  009C                     	;# 
  1001  009D                     	;# 
  1002  009E                     	;# 
  1003  010C                     	;# 
  1004  010D                     	;# 
  1005  010E                     	;# 
  1006  0111                     	;# 
  1007  0112                     	;# 
  1008  0113                     	;# 
  1009  0114                     	;# 
  1010  0115                     	;# 
  1011  0116                     	;# 
  1012  0117                     	;# 
  1013  0118                     	;# 
  1014  0119                     	;# 
  1015  011A                     	;# 
  1016  011B                     	;# 
  1017  011D                     	;# 
  1018  011E                     	;# 
  1019  018C                     	;# 
  1020  018D                     	;# 
  1021  018E                     	;# 
  1022  0191                     	;# 
  1023  0191                     	;# 
  1024  0192                     	;# 
  1025  0193                     	;# 
  1026  0193                     	;# 
  1027  0193                     	;# 
  1028  0194                     	;# 
  1029  0195                     	;# 
  1030  0196                     	;# 
  1031  0199                     	;# 
  1032  019A                     	;# 
  1033  019B                     	;# 
  1034  019B                     	;# 
  1035  019C                     	;# 
  1036  019D                     	;# 
  1037  019E                     	;# 
  1038  019F                     	;# 
  1039  020C                     	;# 
  1040  020D                     	;# 
  1041  020E                     	;# 
  1042  0211                     	;# 
  1043  0211                     	;# 
  1044  0212                     	;# 
  1045  0212                     	;# 
  1046  0213                     	;# 
  1047  0213                     	;# 
  1048  0214                     	;# 
  1049  0214                     	;# 
  1050  0215                     	;# 
  1051  0215                     	;# 
  1052  0215                     	;# 
  1053  0216                     	;# 
  1054  0216                     	;# 
  1055  0217                     	;# 
  1056  0217                     	;# 
  1057  0219                     	;# 
  1058  021A                     	;# 
  1059  021B                     	;# 
  1060  021C                     	;# 
  1061  021D                     	;# 
  1062  021E                     	;# 
  1063  021F                     	;# 
  1064  0291                     	;# 
  1065  0291                     	;# 
  1066  0292                     	;# 
  1067  0293                     	;# 
  1068  0294                     	;# 
  1069  0295                     	;# 
  1070  0295                     	;# 
  1071  0296                     	;# 
  1072  0298                     	;# 
  1073  0298                     	;# 
  1074  0299                     	;# 
  1075  029A                     	;# 
  1076  029B                     	;# 
  1077  029C                     	;# 
  1078  029D                     	;# 
  1079  029E                     	;# 
  1080  0311                     	;# 
  1081  0311                     	;# 
  1082  0312                     	;# 
  1083  0313                     	;# 
  1084  0318                     	;# 
  1085  0318                     	;# 
  1086  0319                     	;# 
  1087  031A                     	;# 
  1088  038C                     	;# 
  1089  038D                     	;# 
  1090  038E                     	;# 
  1091  0391                     	;# 
  1092  0392                     	;# 
  1093  0393                     	;# 
  1094  0394                     	;# 
  1095  0395                     	;# 
  1096  0396                     	;# 
  1097  039A                     	;# 
  1098  039C                     	;# 
  1099  039D                     	;# 
  1100  039E                     	;# 
  1101  039F                     	;# 
  1102  0415                     	;# 
  1103  0416                     	;# 
  1104  0417                     	;# 
  1105  041C                     	;# 
  1106  041D                     	;# 
  1107  041E                     	;# 
  1108  0FE4                     	;# 
  1109  0FE5                     	;# 
  1110  0FE6                     	;# 
  1111  0FE7                     	;# 
  1112  0FE8                     	;# 
  1113  0FE9                     	;# 
  1114  0FEA                     	;# 
  1115  0FEB                     	;# 
  1116  0FED                     	;# 
  1117  0FEE                     	;# 
  1118  0FEF                     	;# 
  1119  0000                     	;# 
  1120  0001                     	;# 
  1121  0002                     	;# 
  1122  0003                     	;# 
  1123  0004                     	;# 
  1124  0005                     	;# 
  1125  0006                     	;# 
  1126  0007                     	;# 
  1127  0008                     	;# 
  1128  0009                     	;# 
  1129  000A                     	;# 
  1130  000B                     	;# 
  1131  000C                     	;# 
  1132  000D                     	;# 
  1133  000E                     	;# 
  1134  0011                     	;# 
  1135  0012                     	;# 
  1136  0013                     	;# 
  1137  0014                     	;# 
  1138  0015                     	;# 
  1139  0016                     	;# 
  1140  0016                     	;# 
  1141  0017                     	;# 
  1142  0018                     	;# 
  1143  0019                     	;# 
  1144  001A                     	;# 
  1145  001B                     	;# 
  1146  001C                     	;# 
  1147  001E                     	;# 
  1148  001F                     	;# 
  1149  008C                     	;# 
  1150  008D                     	;# 
  1151  008E                     	;# 
  1152  0091                     	;# 
  1153  0092                     	;# 
  1154  0093                     	;# 
  1155  0094                     	;# 
  1156  0095                     	;# 
  1157  0096                     	;# 
  1158  0097                     	;# 
  1159  0098                     	;# 
  1160  0099                     	;# 
  1161  009A                     	;# 
  1162  009B                     	;# 
  1163  009B                     	;# 
  1164  009C                     	;# 
  1165  009D                     	;# 
  1166  009E                     	;# 
  1167  010C                     	;# 
  1168  010D                     	;# 
  1169  010E                     	;# 
  1170  0111                     	;# 
  1171  0112                     	;# 
  1172  0113                     	;# 
  1173  0114                     	;# 
  1174  0115                     	;# 
  1175  0116                     	;# 
  1176  0117                     	;# 
  1177  0118                     	;# 
  1178  0119                     	;# 
  1179  011A                     	;# 
  1180  011B                     	;# 
  1181  011D                     	;# 
  1182  011E                     	;# 
  1183  018C                     	;# 
  1184  018D                     	;# 
  1185  018E                     	;# 
  1186  0191                     	;# 
  1187  0191                     	;# 
  1188  0192                     	;# 
  1189  0193                     	;# 
  1190  0193                     	;# 
  1191  0193                     	;# 
  1192  0194                     	;# 
  1193  0195                     	;# 
  1194  0196                     	;# 
  1195  0199                     	;# 
  1196  019A                     	;# 
  1197  019B                     	;# 
  1198  019B                     	;# 
  1199  019C                     	;# 
  1200  019D                     	;# 
  1201  019E                     	;# 
  1202  019F                     	;# 
  1203  020C                     	;# 
  1204  020D                     	;# 
  1205  020E                     	;# 
  1206  0211                     	;# 
  1207  0211                     	;# 
  1208  0212                     	;# 
  1209  0212                     	;# 
  1210  0213                     	;# 
  1211  0213                     	;# 
  1212  0214                     	;# 
  1213  0214                     	;# 
  1214  0215                     	;# 
  1215  0215                     	;# 
  1216  0215                     	;# 
  1217  0216                     	;# 
  1218  0216                     	;# 
  1219  0217                     	;# 
  1220  0217                     	;# 
  1221  0219                     	;# 
  1222  021A                     	;# 
  1223  021B                     	;# 
  1224  021C                     	;# 
  1225  021D                     	;# 
  1226  021E                     	;# 
  1227  021F                     	;# 
  1228  0291                     	;# 
  1229  0291                     	;# 
  1230  0292                     	;# 
  1231  0293                     	;# 
  1232  0294                     	;# 
  1233  0295                     	;# 
  1234  0295                     	;# 
  1235  0296                     	;# 
  1236  0298                     	;# 
  1237  0298                     	;# 
  1238  0299                     	;# 
  1239  029A                     	;# 
  1240  029B                     	;# 
  1241  029C                     	;# 
  1242  029D                     	;# 
  1243  029E                     	;# 
  1244  0311                     	;# 
  1245  0311                     	;# 
  1246  0312                     	;# 
  1247  0313                     	;# 
  1248  0318                     	;# 
  1249  0318                     	;# 
  1250  0319                     	;# 
  1251  031A                     	;# 
  1252  038C                     	;# 
  1253  038D                     	;# 
  1254  038E                     	;# 
  1255  0391                     	;# 
  1256  0392                     	;# 
  1257  0393                     	;# 
  1258  0394                     	;# 
  1259  0395                     	;# 
  1260  0396                     	;# 
  1261  039A                     	;# 
  1262  039C                     	;# 
  1263  039D                     	;# 
  1264  039E                     	;# 
  1265  039F                     	;# 
  1266  0415                     	;# 
  1267  0416                     	;# 
  1268  0417                     	;# 
  1269  041C                     	;# 
  1270  041D                     	;# 
  1271  041E                     	;# 
  1272  0FE4                     	;# 
  1273  0FE5                     	;# 
  1274  0FE6                     	;# 
  1275  0FE7                     	;# 
  1276  0FE8                     	;# 
  1277  0FE9                     	;# 
  1278  0FEA                     	;# 
  1279  0FEB                     	;# 
  1280  0FED                     	;# 
  1281  0FEE                     	;# 
  1282  0FEF                     	;# 
  1283  0000                     	;# 
  1284  0001                     	;# 
  1285  0002                     	;# 
  1286  0003                     	;# 
  1287  0004                     	;# 
  1288  0005                     	;# 
  1289  0006                     	;# 
  1290  0007                     	;# 
  1291  0008                     	;# 
  1292  0009                     	;# 
  1293  000A                     	;# 
  1294  000B                     	;# 
  1295  000C                     	;# 
  1296  000D                     	;# 
  1297  000E                     	;# 
  1298  0011                     	;# 
  1299  0012                     	;# 
  1300  0013                     	;# 
  1301  0014                     	;# 
  1302  0015                     	;# 
  1303  0016                     	;# 
  1304  0016                     	;# 
  1305  0017                     	;# 
  1306  0018                     	;# 
  1307  0019                     	;# 
  1308  001A                     	;# 
  1309  001B                     	;# 
  1310  001C                     	;# 
  1311  001E                     	;# 
  1312  001F                     	;# 
  1313  008C                     	;# 
  1314  008D                     	;# 
  1315  008E                     	;# 
  1316  0091                     	;# 
  1317  0092                     	;# 
  1318  0093                     	;# 
  1319  0094                     	;# 
  1320  0095                     	;# 
  1321  0096                     	;# 
  1322  0097                     	;# 
  1323  0098                     	;# 
  1324  0099                     	;# 
  1325  009A                     	;# 
  1326  009B                     	;# 
  1327  009B                     	;# 
  1328  009C                     	;# 
  1329  009D                     	;# 
  1330  009E                     	;# 
  1331  010C                     	;# 
  1332  010D                     	;# 
  1333  010E                     	;# 
  1334  0111                     	;# 
  1335  0112                     	;# 
  1336  0113                     	;# 
  1337  0114                     	;# 
  1338  0115                     	;# 
  1339  0116                     	;# 
  1340  0117                     	;# 
  1341  0118                     	;# 
  1342  0119                     	;# 
  1343  011A                     	;# 
  1344  011B                     	;# 
  1345  011D                     	;# 
  1346  011E                     	;# 
  1347  018C                     	;# 
  1348  018D                     	;# 
  1349  018E                     	;# 
  1350  0191                     	;# 
  1351  0191                     	;# 
  1352  0192                     	;# 
  1353  0193                     	;# 
  1354  0193                     	;# 
  1355  0193                     	;# 
  1356  0194                     	;# 
  1357  0195                     	;# 
  1358  0196                     	;# 
  1359  0199                     	;# 
  1360  019A                     	;# 
  1361  019B                     	;# 
  1362  019B                     	;# 
  1363  019C                     	;# 
  1364  019D                     	;# 
  1365  019E                     	;# 
  1366  019F                     	;# 
  1367  020C                     	;# 
  1368  020D                     	;# 
  1369  020E                     	;# 
  1370  0211                     	;# 
  1371  0211                     	;# 
  1372  0212                     	;# 
  1373  0212                     	;# 
  1374  0213                     	;# 
  1375  0213                     	;# 
  1376  0214                     	;# 
  1377  0214                     	;# 
  1378  0215                     	;# 
  1379  0215                     	;# 
  1380  0215                     	;# 
  1381  0216                     	;# 
  1382  0216                     	;# 
  1383  0217                     	;# 
  1384  0217                     	;# 
  1385  0219                     	;# 
  1386  021A                     	;# 
  1387  021B                     	;# 
  1388  021C                     	;# 
  1389  021D                     	;# 
  1390  021E                     	;# 
  1391  021F                     	;# 
  1392  0291                     	;# 
  1393  0291                     	;# 
  1394  0292                     	;# 
  1395  0293                     	;# 
  1396  0294                     	;# 
  1397  0295                     	;# 
  1398  0295                     	;# 
  1399  0296                     	;# 
  1400  0298                     	;# 
  1401  0298                     	;# 
  1402  0299                     	;# 
  1403  029A                     	;# 
  1404  029B                     	;# 
  1405  029C                     	;# 
  1406  029D                     	;# 
  1407  029E                     	;# 
  1408  0311                     	;# 
  1409  0311                     	;# 
  1410  0312                     	;# 
  1411  0313                     	;# 
  1412  0318                     	;# 
  1413  0318                     	;# 
  1414  0319                     	;# 
  1415  031A                     	;# 
  1416  038C                     	;# 
  1417  038D                     	;# 
  1418  038E                     	;# 
  1419  0391                     	;# 
  1420  0392                     	;# 
  1421  0393                     	;# 
  1422  0394                     	;# 
  1423  0395                     	;# 
  1424  0396                     	;# 
  1425  039A                     	;# 
  1426  039C                     	;# 
  1427  039D                     	;# 
  1428  039E                     	;# 
  1429  039F                     	;# 
  1430  0415                     	;# 
  1431  0416                     	;# 
  1432  0417                     	;# 
  1433  041C                     	;# 
  1434  041D                     	;# 
  1435  041E                     	;# 
  1436  0FE4                     	;# 
  1437  0FE5                     	;# 
  1438  0FE6                     	;# 
  1439  0FE7                     	;# 
  1440  0FE8                     	;# 
  1441  0FE9                     	;# 
  1442  0FEA                     	;# 
  1443  0FEB                     	;# 
  1444  0FED                     	;# 
  1445  0FEE                     	;# 
  1446  0FEF                     	;# 
  1447  0000                     	;# 
  1448  0001                     	;# 
  1449  0002                     	;# 
  1450  0003                     	;# 
  1451  0004                     	;# 
  1452  0005                     	;# 
  1453  0006                     	;# 
  1454  0007                     	;# 
  1455  0008                     	;# 
  1456  0009                     	;# 
  1457  000A                     	;# 
  1458  000B                     	;# 
  1459  000C                     	;# 
  1460  000D                     	;# 
  1461  000E                     	;# 
  1462  0011                     	;# 
  1463  0012                     	;# 
  1464  0013                     	;# 
  1465  0014                     	;# 
  1466  0015                     	;# 
  1467  0016                     	;# 
  1468  0016                     	;# 
  1469  0017                     	;# 
  1470  0018                     	;# 
  1471  0019                     	;# 
  1472  001A                     	;# 
  1473  001B                     	;# 
  1474  001C                     	;# 
  1475  001E                     	;# 
  1476  001F                     	;# 
  1477  008C                     	;# 
  1478  008D                     	;# 
  1479  008E                     	;# 
  1480  0091                     	;# 
  1481  0092                     	;# 
  1482  0093                     	;# 
  1483  0094                     	;# 
  1484  0095                     	;# 
  1485  0096                     	;# 
  1486  0097                     	;# 
  1487  0098                     	;# 
  1488  0099                     	;# 
  1489  009A                     	;# 
  1490  009B                     	;# 
  1491  009B                     	;# 
  1492  009C                     	;# 
  1493  009D                     	;# 
  1494  009E                     	;# 
  1495  010C                     	;# 
  1496  010D                     	;# 
  1497  010E                     	;# 
  1498  0111                     	;# 
  1499  0112                     	;# 
  1500  0113                     	;# 
  1501  0114                     	;# 
  1502  0115                     	;# 
  1503  0116                     	;# 
  1504  0117                     	;# 
  1505  0118                     	;# 
  1506  0119                     	;# 
  1507  011A                     	;# 
  1508  011B                     	;# 
  1509  011D                     	;# 
  1510  011E                     	;# 
  1511  018C                     	;# 
  1512  018D                     	;# 
  1513  018E                     	;# 
  1514  0191                     	;# 
  1515  0191                     	;# 
  1516  0192                     	;# 
  1517  0193                     	;# 
  1518  0193                     	;# 
  1519  0193                     	;# 
  1520  0194                     	;# 
  1521  0195                     	;# 
  1522  0196                     	;# 
  1523  0199                     	;# 
  1524  019A                     	;# 
  1525  019B                     	;# 
  1526  019B                     	;# 
  1527  019C                     	;# 
  1528  019D                     	;# 
  1529  019E                     	;# 
  1530  019F                     	;# 
  1531  020C                     	;# 
  1532  020D                     	;# 
  1533  020E                     	;# 
  1534  0211                     	;# 
  1535  0211                     	;# 
  1536  0212                     	;# 
  1537  0212                     	;# 
  1538  0213                     	;# 
  1539  0213                     	;# 
  1540  0214                     	;# 
  1541  0214                     	;# 
  1542  0215                     	;# 
  1543  0215                     	;# 
  1544  0215                     	;# 
  1545  0216                     	;# 
  1546  0216                     	;# 
  1547  0217                     	;# 
  1548  0217                     	;# 
  1549  0219                     	;# 
  1550  021A                     	;# 
  1551  021B                     	;# 
  1552  021C                     	;# 
  1553  021D                     	;# 
  1554  021E                     	;# 
  1555  021F                     	;# 
  1556  0291                     	;# 
  1557  0291                     	;# 
  1558  0292                     	;# 
  1559  0293                     	;# 
  1560  0294                     	;# 
  1561  0295                     	;# 
  1562  0295                     	;# 
  1563  0296                     	;# 
  1564  0298                     	;# 
  1565  0298                     	;# 
  1566  0299                     	;# 
  1567  029A                     	;# 
  1568  029B                     	;# 
  1569  029C                     	;# 
  1570  029D                     	;# 
  1571  029E                     	;# 
  1572  0311                     	;# 
  1573  0311                     	;# 
  1574  0312                     	;# 
  1575  0313                     	;# 
  1576  0318                     	;# 
  1577  0318                     	;# 
  1578  0319                     	;# 
  1579  031A                     	;# 
  1580  038C                     	;# 
  1581  038D                     	;# 
  1582  038E                     	;# 
  1583  0391                     	;# 
  1584  0392                     	;# 
  1585  0393                     	;# 
  1586  0394                     	;# 
  1587  0395                     	;# 
  1588  0396                     	;# 
  1589  039A                     	;# 
  1590  039C                     	;# 
  1591  039D                     	;# 
  1592  039E                     	;# 
  1593  039F                     	;# 
  1594  0415                     	;# 
  1595  0416                     	;# 
  1596  0417                     	;# 
  1597  041C                     	;# 
  1598  041D                     	;# 
  1599  041E                     	;# 
  1600  0FE4                     	;# 
  1601  0FE5                     	;# 
  1602  0FE6                     	;# 
  1603  0FE7                     	;# 
  1604  0FE8                     	;# 
  1605  0FE9                     	;# 
  1606  0FEA                     	;# 
  1607  0FEB                     	;# 
  1608  0FED                     	;# 
  1609  0FEE                     	;# 
  1610  0FEF                     	;# 
  1611  0000                     	;# 
  1612  0001                     	;# 
  1613  0002                     	;# 
  1614  0003                     	;# 
  1615  0004                     	;# 
  1616  0005                     	;# 
  1617  0006                     	;# 
  1618  0007                     	;# 
  1619  0008                     	;# 
  1620  0009                     	;# 
  1621  000A                     	;# 
  1622  000B                     	;# 
  1623  000C                     	;# 
  1624  000D                     	;# 
  1625  000E                     	;# 
  1626  0011                     	;# 
  1627  0012                     	;# 
  1628  0013                     	;# 
  1629  0014                     	;# 
  1630  0015                     	;# 
  1631  0016                     	;# 
  1632  0016                     	;# 
  1633  0017                     	;# 
  1634  0018                     	;# 
  1635  0019                     	;# 
  1636  001A                     	;# 
  1637  001B                     	;# 
  1638  001C                     	;# 
  1639  001E                     	;# 
  1640  001F                     	;# 
  1641  008C                     	;# 
  1642  008D                     	;# 
  1643  008E                     	;# 
  1644  0091                     	;# 
  1645  0092                     	;# 
  1646  0093                     	;# 
  1647  0094                     	;# 
  1648  0095                     	;# 
  1649  0096                     	;# 
  1650  0097                     	;# 
  1651  0098                     	;# 
  1652  0099                     	;# 
  1653  009A                     	;# 
  1654  009B                     	;# 
  1655  009B                     	;# 
  1656  009C                     	;# 
  1657  009D                     	;# 
  1658  009E                     	;# 
  1659  010C                     	;# 
  1660  010D                     	;# 
  1661  010E                     	;# 
  1662  0111                     	;# 
  1663  0112                     	;# 
  1664  0113                     	;# 
  1665  0114                     	;# 
  1666  0115                     	;# 
  1667  0116                     	;# 
  1668  0117                     	;# 
  1669  0118                     	;# 
  1670  0119                     	;# 
  1671  011A                     	;# 
  1672  011B                     	;# 
  1673  011D                     	;# 
  1674  011E                     	;# 
  1675  018C                     	;# 
  1676  018D                     	;# 
  1677  018E                     	;# 
  1678  0191                     	;# 
  1679  0191                     	;# 
  1680  0192                     	;# 
  1681  0193                     	;# 
  1682  0193                     	;# 
  1683  0193                     	;# 
  1684  0194                     	;# 
  1685  0195                     	;# 
  1686  0196                     	;# 
  1687  0199                     	;# 
  1688  019A                     	;# 
  1689  019B                     	;# 
  1690  019B                     	;# 
  1691  019C                     	;# 
  1692  019D                     	;# 
  1693  019E                     	;# 
  1694  019F                     	;# 
  1695  020C                     	;# 
  1696  020D                     	;# 
  1697  020E                     	;# 
  1698  0211                     	;# 
  1699  0211                     	;# 
  1700  0212                     	;# 
  1701  0212                     	;# 
  1702  0213                     	;# 
  1703  0213                     	;# 
  1704  0214                     	;# 
  1705  0214                     	;# 
  1706  0215                     	;# 
  1707  0215                     	;# 
  1708  0215                     	;# 
  1709  0216                     	;# 
  1710  0216                     	;# 
  1711  0217                     	;# 
  1712  0217                     	;# 
  1713  0219                     	;# 
  1714  021A                     	;# 
  1715  021B                     	;# 
  1716  021C                     	;# 
  1717  021D                     	;# 
  1718  021E                     	;# 
  1719  021F                     	;# 
  1720  0291                     	;# 
  1721  0291                     	;# 
  1722  0292                     	;# 
  1723  0293                     	;# 
  1724  0294                     	;# 
  1725  0295                     	;# 
  1726  0295                     	;# 
  1727  0296                     	;# 
  1728  0298                     	;# 
  1729  0298                     	;# 
  1730  0299                     	;# 
  1731  029A                     	;# 
  1732  029B                     	;# 
  1733  029C                     	;# 
  1734  029D                     	;# 
  1735  029E                     	;# 
  1736  0311                     	;# 
  1737  0311                     	;# 
  1738  0312                     	;# 
  1739  0313                     	;# 
  1740  0318                     	;# 
  1741  0318                     	;# 
  1742  0319                     	;# 
  1743  031A                     	;# 
  1744  038C                     	;# 
  1745  038D                     	;# 
  1746  038E                     	;# 
  1747  0391                     	;# 
  1748  0392                     	;# 
  1749  0393                     	;# 
  1750  0394                     	;# 
  1751  0395                     	;# 
  1752  0396                     	;# 
  1753  039A                     	;# 
  1754  039C                     	;# 
  1755  039D                     	;# 
  1756  039E                     	;# 
  1757  039F                     	;# 
  1758  0415                     	;# 
  1759  0416                     	;# 
  1760  0417                     	;# 
  1761  041C                     	;# 
  1762  041D                     	;# 
  1763  041E                     	;# 
  1764  0FE4                     	;# 
  1765  0FE5                     	;# 
  1766  0FE6                     	;# 
  1767  0FE7                     	;# 
  1768  0FE8                     	;# 
  1769  0FE9                     	;# 
  1770  0FEA                     	;# 
  1771  0FEB                     	;# 
  1772  0FED                     	;# 
  1773  0FEE                     	;# 
  1774  0FEF                     	;_cmd_buf
  1775                           
  1776                           	psect	idataBANK2
  1777  1A1D                     __pidataBANK2:	
  1778                           
  1779                           ;initializer for _tmr_scaler
  1780  1A1D  3401               	retlw	1
  1781                           
  1782                           ;initializer for put_cmd@idx
  1783  1A1E  34FF               	retlw	-1
  1784                           
  1785                           ;initializer for inv_handler@cmd_next
  1786  1A1F  34FF               	retlw	-1
  1787                           
  1788                           ;initializer for dev_map_iterator@start
  1789  1A20  3401               	retlw	1
  1790                           
  1791                           ;initializer for _BACKPLANE_SLAVE_ADDRESS
  1792  1A21  3401               	retlw	1
  1793                           
  1794                           ;initializer for _type_no_data
  1795  1A22  3406               	retlw	6
  1796                           
  1797                           	psect	stringtext
  1798  1000                     __pstringtext:	
  1799  1000                     _dpowers:	
  1800  1000  3401               	retlw	1
  1801  1001  3400               	retlw	0
  1802  1002  340A               	retlw	10
  1803  1003  3400               	retlw	0
  1804  1004  3464               	retlw	100
  1805  1005  3400               	retlw	0
  1806  1006  34E8               	retlw	232
  1807  1007  3403               	retlw	3
  1808  1008  3410               	retlw	16
  1809  1009  3427               	retlw	39
  1810  100A                     __end_of_dpowers:	
  1811  100A                     _MAX_Y:	
  1812  100A  3404               	retlw	4
  1813  100B                     __end_of_MAX_Y:	
  1814  100B                     _CIRCUMFERENCE:	
  1815  100B  34A7               	retlw	167
  1816  100C  34C5               	retlw	197
  1817  100D  3439               	retlw	57
  1818  100E                     __end_of_CIRCUMFERENCE:	
  1819  100E                     _WHEEL_RADIUS:	
  1820  100E  34A9               	retlw	169
  1821  100F  347B               	retlw	123
  1822  1010  3438               	retlw	56
  1823  1011                     __end_of_WHEEL_RADIUS:	
  1824  0015                     _TMR0	set	21
  1825  0012                     _PIR2bits	set	18
  1826  000B                     _INTCONbits	set	11
  1827  0011                     _PIR1bits	set	17
  1828  005A                     _TMR0IF	set	90
  1829  0095                     _OPTION_REG	set	149
  1830  0097                     _WDTCON	set	151
  1831  0098                     _OSCTUNE	set	152
  1832  0099                     _OSCCON	set	153
  1833  0092                     _PIE2bits	set	146
  1834  0095                     _OPTION_REGbits	set	149
  1835  008E                     _TRISC	set	142
  1836  008D                     _TRISB	set	141
  1837  008C                     _TRISA	set	140
  1838  0091                     _PIE1bits	set	145
  1839  04D6                     _PLLR	set	1238
  1840  010E                     _LATCbits	set	270
  1841  011D                     _APFCON0	set	285
  1842  011E                     _APFCON1	set	286
  1843  010E                     _LATC	set	270
  1844  010D                     _LATB	set	269
  1845  010C                     _LATA	set	268
  1846  018C                     _ANSELA	set	396
  1847  018D                     _ANSELB	set	397
  1848  018E                     _ANSELC	set	398
  1849  0199                     _RCREG	set	409
  1850  019D                     _RCSTAbits	set	413
  1851  019A                     _TXREG	set	410
  1852  019C                     _SPBRGH	set	412
  1853  019B                     _SPBRGL	set	411
  1854  019E                     _TXSTA	set	414
  1855  019D                     _RCSTA	set	413
  1856  019F                     _BAUDCON	set	415
  1857  0196                     _EECON2	set	406
  1858  0193                     _EEDATL	set	403
  1859  0194                     _EEDATH	set	404
  1860  0195                     _EECON1bits	set	405
  1861  0192                     _EEADRH	set	402
  1862  0191                     _EEADRL	set	401
  1863  020E                     _WPUC	set	526
  1864  020C                     _WPUA	set	524
  1865  020D                     _WPUB	set	525
  1866  0211                     _SSP1BUF	set	529
  1867  0216                     _SSP1CON2bits	set	534
  1868  0215                     _SSP1CON1bits	set	533
  1869  0212                     _SSP1ADD	set	530
  1870  0217                     _SSP1CON3	set	535
  1871  0215                     _SSP1CON1	set	533
  1872  0214                     _SSP1STAT	set	532
  1873  1011                     STR_23:	
  1874  1011  3453               	retlw	83	;'S'
  1875  1012  3454               	retlw	84	;'T'
  1876  1013  3452               	retlw	82	;'R'
  1877  1014  343A               	retlw	58	;':'
  1878  1015  3425               	retlw	37	;'%'
  1879  1016  3431               	retlw	49	;'1'
  1880  1017  3464               	retlw	100	;'d'
  1881  1018  342E               	retlw	46	;'.'
  1882  1019  3425               	retlw	37	;'%'
  1883  101A  3431               	retlw	49	;'1'
  1884  101B  3464               	retlw	100	;'d'
  1885  101C  3447               	retlw	71	;'G'
  1886  101D  342C               	retlw	44	;','
  1887  101E  3420               	retlw	32	;' '
  1888  101F  3425               	retlw	37	;'%'
  1889  1020  3431               	retlw	49	;'1'
  1890  1021  3464               	retlw	100	;'d'
  1891  1022  342E               	retlw	46	;'.'
  1892  1023  3425               	retlw	37	;'%'
  1893  1024  3431               	retlw	49	;'1'
  1894  1025  3464               	retlw	100	;'d'
  1895  1026  3447               	retlw	71	;'G'
  1896  1027  342C               	retlw	44	;','
  1897  1028  3420               	retlw	32	;' '
  1898  1029  3425               	retlw	37	;'%'
  1899  102A  3431               	retlw	49	;'1'
  1900  102B  3464               	retlw	100	;'d'
  1901  102C  342E               	retlw	46	;'.'
  1902  102D  3425               	retlw	37	;'%'
  1903  102E  3431               	retlw	49	;'1'
  1904  102F  3464               	retlw	100	;'d'
  1905  1030  3447               	retlw	71	;'G'
  1906  1031  3420               	retlw	32	;' '
  1907  1032  3400               	retlw	0
  1908  1033  3400               	retlw	0
  1909  1034                     STR_39:	
  1910  1034  3421               	retlw	33	;'!'
  1911  1035  343A               	retlw	58	;':'
  1912  1036  3445               	retlw	69	;'E'
  1913  1037  3444               	retlw	68	;'D'
  1914  1038  3447               	retlw	71	;'G'
  1915  1039  343A               	retlw	58	;':'
  1916  103A  3455               	retlw	85	;'U'
  1917  103B  344E               	retlw	78	;'N'
  1918  103C  3452               	retlw	82	;'R'
  1919  103D  3445               	retlw	69	;'E'
  1920  103E  3443               	retlw	67	;'C'
  1921  103F  344F               	retlw	79	;'O'
  1922  1040  3447               	retlw	71	;'G'
  1923  1041  344E               	retlw	78	;'N'
  1924  1042  3449               	retlw	73	;'I'
  1925  1043  345A               	retlw	90	;'Z'
  1926  1044  3445               	retlw	69	;'E'
  1927  1045  3444               	retlw	68	;'D'
  1928  1046  3420               	retlw	32	;' '
  1929  1047  3445               	retlw	69	;'E'
  1930  1048  3444               	retlw	68	;'D'
  1931  1049  3447               	retlw	71	;'G'
  1932  104A  3445               	retlw	69	;'E'
  1933  104B  3420               	retlw	32	;' '
  1934  104C  3446               	retlw	70	;'F'
  1935  104D  3455               	retlw	85	;'U'
  1936  104E  344E               	retlw	78	;'N'
  1937  104F  3443               	retlw	67	;'C'
  1938  1050  340A               	retlw	10
  1939  1051  3400               	retlw	0
  1940  1052                     STR_30:	
  1941  1052  3421               	retlw	33	;'!'
  1942  1053  343A               	retlw	58	;':'
  1943  1054  3457               	retlw	87	;'W'
  1944  1055  3453               	retlw	83	;'S'
  1945  1056  3443               	retlw	67	;'C'
  1946  1057  343A               	retlw	58	;':'
  1947  1058  3450               	retlw	80	;'P'
  1948  1059  344F               	retlw	79	;'O'
  1949  105A  3453               	retlw	83	;'S'
  1950  105B  3420               	retlw	32	;' '
  1951  105C  344C               	retlw	76	;'L'
  1952  105D  3441               	retlw	65	;'A'
  1953  105E  3452               	retlw	82	;'R'
  1954  105F  3447               	retlw	71	;'G'
  1955  1060  3445               	retlw	69	;'E'
  1956  1061  3452               	retlw	82	;'R'
  1957  1062  3420               	retlw	32	;' '
  1958  1063  3454               	retlw	84	;'T'
  1959  1064  3448               	retlw	72	;'H'
  1960  1065  3441               	retlw	65	;'A'
  1961  1066  344E               	retlw	78	;'N'
  1962  1067  3420               	retlw	32	;' '
  1963  1068  3432               	retlw	50	;'2'
  1964  1069  3437               	retlw	55	;'7'
  1965  106A  340A               	retlw	10
  1966  106B  3400               	retlw	0
  1967  106C                     STR_28:	
  1968  106C  3421               	retlw	33	;'!'
  1969  106D  343A               	retlw	58	;':'
  1970  106E  3450               	retlw	80	;'P'
  1971  106F  344F               	retlw	79	;'O'
  1972  1070  3453               	retlw	83	;'S'
  1973  1071  343A               	retlw	58	;':'
  1974  1072  3450               	retlw	80	;'P'
  1975  1073  344F               	retlw	79	;'O'
  1976  1074  3453               	retlw	83	;'S'
  1977  1075  3420               	retlw	32	;' '
  1978  1076  344C               	retlw	76	;'L'
  1979  1077  3441               	retlw	65	;'A'
  1980  1078  3452               	retlw	82	;'R'
  1981  1079  3447               	retlw	71	;'G'
  1982  107A  3445               	retlw	69	;'E'
  1983  107B  3452               	retlw	82	;'R'
  1984  107C  3420               	retlw	32	;' '
  1985  107D  3454               	retlw	84	;'T'
  1986  107E  3448               	retlw	72	;'H'
  1987  107F  3441               	retlw	65	;'A'
  1988  1080  344E               	retlw	78	;'N'
  1989  1081  3420               	retlw	32	;' '
  1990  1082  3432               	retlw	50	;'2'
  1991  1083  3437               	retlw	55	;'7'
  1992  1084  340A               	retlw	10
  1993  1085  3400               	retlw	0
  1994  1086                     STR_12:	
  1995  1086  3421               	retlw	33	;'!'
  1996  1087  343A               	retlw	58	;':'
  1997  1088  344E               	retlw	78	;'N'
  1998  1089  344F               	retlw	79	;'O'
  1999  108A  3420               	retlw	32	;' '
  2000  108B  3441               	retlw	65	;'A'
  2001  108C  3443               	retlw	67	;'C'
  2002  108D  344B               	retlw	75	;'K'
  2003  108E  3420               	retlw	32	;' '
  2004  108F  3446               	retlw	70	;'F'
  2005  1090  3452               	retlw	82	;'R'
  2006  1091  344F               	retlw	79	;'O'
  2007  1092  344D               	retlw	77	;'M'
  2008  1093  3420               	retlw	32	;' '
  2009  1094  3449               	retlw	73	;'I'
  2010  1095  3432               	retlw	50	;'2'
  2011  1096  3443               	retlw	67	;'C'
  2012  1097  3420               	retlw	32	;' '
  2013  1098  3453               	retlw	83	;'S'
  2014  1099  344C               	retlw	76	;'L'
  2015  109A  3441               	retlw	65	;'A'
  2016  109B  3456               	retlw	86	;'V'
  2017  109C  3445               	retlw	69	;'E'
  2018  109D  340A               	retlw	10
  2019  109E  3400               	retlw	0
  2020  109F                     STR_21:	
  2021  109F  3448               	retlw	72	;'H'
  2022  10A0  3453               	retlw	83	;'S'
  2023  10A1  3454               	retlw	84	;'T'
  2024  10A2  343A               	retlw	58	;':'
  2025  10A3  3425               	retlw	37	;'%'
  2026  10A4  3432               	retlw	50	;'2'
  2027  10A5  3464               	retlw	100	;'d'
  2028  10A6  342E               	retlw	46	;'.'
  2029  10A7  3425               	retlw	37	;'%'
  2030  10A8  3464               	retlw	100	;'d'
  2031  10A9  346B               	retlw	107	;'k'
  2032  10AA  346D               	retlw	109	;'m'
  2033  10AB  342F               	retlw	47	;'/'
  2034  10AC  3468               	retlw	104	;'h'
  2035  10AD  342C               	retlw	44	;','
  2036  10AE  3425               	retlw	37	;'%'
  2037  10AF  3434               	retlw	52	;'4'
  2038  10B0  3464               	retlw	100	;'d'
  2039  10B1  3472               	retlw	114	;'r'
  2040  10B2  3470               	retlw	112	;'p'
  2041  10B3  346D               	retlw	109	;'m'
  2042  10B4  3400               	retlw	0
  2043  10B5  3400               	retlw	0
  2044  10B6                     STR_16:	
  2045  10B6  3421               	retlw	33	;'!'
  2046  10B7  343A               	retlw	58	;':'
  2047  10B8  344D               	retlw	77	;'M'
  2048  10B9  3441               	retlw	65	;'A'
  2049  10BA  3450               	retlw	80	;'P'
  2050  10BB  343A               	retlw	58	;':'
  2051  10BC  344E               	retlw	78	;'N'
  2052  10BD  344F               	retlw	79	;'O'
  2053  10BE  3420               	retlw	32	;' '
  2054  10BF  3453               	retlw	83	;'S'
  2055  10C0  344C               	retlw	76	;'L'
  2056  10C1  3441               	retlw	65	;'A'
  2057  10C2  3456               	retlw	86	;'V'
  2058  10C3  3445               	retlw	69	;'E'
  2059  10C4  3420               	retlw	32	;' '
  2060  10C5  3446               	retlw	70	;'F'
  2061  10C6  344F               	retlw	79	;'O'
  2062  10C7  3455               	retlw	85	;'U'
  2063  10C8  344E               	retlw	78	;'N'
  2064  10C9  3444               	retlw	68	;'D'
  2065  10CA  340A               	retlw	10
  2066  10CB  3400               	retlw	0
  2067  10CC                     STR_17:	
  2068  10CC  3421               	retlw	33	;'!'
  2069  10CD  343A               	retlw	58	;':'
  2070  10CE  3425               	retlw	37	;'%'
  2071  10CF  3425               	retlw	37	;'%'
  2072  10D0  3425               	retlw	37	;'%'
  2073  10D1  3464               	retlw	100	;'d'
  2074  10D2  343A               	retlw	58	;':'
  2075  10D3  344E               	retlw	78	;'N'
  2076  10D4  3445               	retlw	69	;'E'
  2077  10D5  3454               	retlw	84	;'T'
  2078  10D6  3457               	retlw	87	;'W'
  2079  10D7  344F               	retlw	79	;'O'
  2080  10D8  3452               	retlw	82	;'R'
  2081  10D9  344B               	retlw	75	;'K'
  2082  10DA  345F               	retlw	95	;'_'
  2083  10DB  3445               	retlw	69	;'E'
  2084  10DC  3452               	retlw	82	;'R'
  2085  10DD  3452               	retlw	82	;'R'
  2086  10DE  344F               	retlw	79	;'O'
  2087  10DF  3452               	retlw	82	;'R'
  2088  10E0  340A               	retlw	10
  2089  10E1  3400               	retlw	0
  2090  10E2                     STR_20:	
  2091  10E2  3448               	retlw	72	;'H'
  2092  10E3  3453               	retlw	83	;'S'
  2093  10E4  3454               	retlw	84	;'T'
  2094  10E5  343A               	retlw	58	;':'
  2095  10E6  3453               	retlw	83	;'S'
  2096  10E7  3454               	retlw	84	;'T'
  2097  10E8  3441               	retlw	65	;'A'
  2098  10E9  3452               	retlw	82	;'R'
  2099  10EA  3454               	retlw	84	;'T'
  2100  10EB  3449               	retlw	73	;'I'
  2101  10EC  344E               	retlw	78	;'N'
  2102  10ED  3447               	retlw	71	;'G'
  2103  10EE  342E               	retlw	46	;'.'
  2104  10EF  342E               	retlw	46	;'.'
  2105  10F0  342E               	retlw	46	;'.'
  2106  10F1  3400               	retlw	0
  2107  10F2  3400               	retlw	0
  2108  10F3                     STR_40:	
  2109  10F3  3442               	retlw	66	;'B'
  2110  10F4  3441               	retlw	65	;'A'
  2111  10F5  3443               	retlw	67	;'C'
  2112  10F6  344B               	retlw	75	;'K'
  2113  10F7  3450               	retlw	80	;'P'
  2114  10F8  344C               	retlw	76	;'L'
  2115  10F9  3441               	retlw	65	;'A'
  2116  10FA  344E               	retlw	78	;'N'
  2117  10FB  3445               	retlw	69	;'E'
  2118  10FC  342D               	retlw	45	;'-'
  2119  10FD  344D               	retlw	77	;'M'
  2120  10FE  3441               	retlw	65	;'A'
  2121  10FF  3453               	retlw	83	;'S'
  2122  1100  3454               	retlw	84	;'T'
  2123  1101  3445               	retlw	69	;'E'
  2124  1102  3452               	retlw	82	;'R'
  2125  1103  3400               	retlw	0
  2126  1104                     STR_75:	
  2127  1104  3449               	retlw	73	;'I'
  2128  1105  344C               	retlw	76	;'L'
  2129  1106  344C               	retlw	76	;'L'
  2130  1107  3445               	retlw	69	;'E'
  2131  1108  3447               	retlw	71	;'G'
  2132  1109  3441               	retlw	65	;'A'
  2133  110A  344C               	retlw	76	;'L'
  2134  110B  345F               	retlw	95	;'_'
  2135  110C  3454               	retlw	84	;'T'
  2136  110D  3459               	retlw	89	;'Y'
  2137  110E  3450               	retlw	80	;'P'
  2138  110F  3445               	retlw	69	;'E'
  2139  1110  340A               	retlw	10
  2140  1111  3400               	retlw	0
  2141  1112                     STR_8:	
  2142  1112  3421               	retlw	33	;'!'
  2143  1113  343A               	retlw	58	;':'
  2144  1114  3453               	retlw	83	;'S'
  2145  1115  3454               	retlw	84	;'T'
  2146  1116  3450               	retlw	80	;'P'
  2147  1117  343A               	retlw	58	;':'
  2148  1118  344E               	retlw	78	;'N'
  2149  1119  3441               	retlw	65	;'A'
  2150  111A  3443               	retlw	67	;'C'
  2151  111B  344B               	retlw	75	;'K'
  2152  111C  340A               	retlw	10
  2153  111D  3400               	retlw	0
  2154  111E                     STR_7:	
  2155  111E  342A               	retlw	42	;'*'
  2156  111F  343A               	retlw	58	;':'
  2157  1120  3453               	retlw	83	;'S'
  2158  1121  3454               	retlw	84	;'T'
  2159  1122  3450               	retlw	80	;'P'
  2160  1123  343A               	retlw	58	;':'
  2161  1124  3441               	retlw	65	;'A'
  2162  1125  3443               	retlw	67	;'C'
  2163  1126  344B               	retlw	75	;'K'
  2164  1127  340A               	retlw	10
  2165  1128  3400               	retlw	0
  2166  1129                     STR_55:	
  2167  1129  3424               	retlw	36	;'$'
  2168  112A  343A               	retlw	58	;':'
  2169  112B  3452               	retlw	82	;'R'
  2170  112C  3444               	retlw	68	;'D'
  2171  112D  3441               	retlw	65	;'A'
  2172  112E  343A               	retlw	58	;':'
  2173  112F  3425               	retlw	37	;'%'
  2174  1130  3464               	retlw	100	;'d'
  2175  1131  340A               	retlw	10
  2176  1132  3400               	retlw	0
  2177  1133                     STR_73:	
  2178  1133  342D               	retlw	45	;'-'
  2179  1134  3425               	retlw	37	;'%'
  2180  1135  3464               	retlw	100	;'d'
  2181  1136  342E               	retlw	46	;'.'
  2182  1137  3425               	retlw	37	;'%'
  2183  1138  3430               	retlw	48	;'0'
  2184  1139  3432               	retlw	50	;'2'
  2185  113A  3464               	retlw	100	;'d'
  2186  113B  340A               	retlw	10
  2187  113C  3400               	retlw	0
  2188  113D                     STR_44:	
  2189  113D  3424               	retlw	36	;'$'
  2190  113E  343A               	retlw	58	;':'
  2191  113F  3457               	retlw	87	;'W'
  2192  1140  3448               	retlw	72	;'H'
  2193  1141  344F               	retlw	79	;'O'
  2194  1142  343A               	retlw	58	;':'
  2195  1143  3425               	retlw	37	;'%'
  2196  1144  3473               	retlw	115	;'s'
  2197  1145  340A               	retlw	10
  2198  1146  3400               	retlw	0
  2199  1147                     STR_48:	
  2200  1147  342A               	retlw	42	;'*'
  2201  1148  343A               	retlw	58	;':'
  2202  1149  3453               	retlw	83	;'S'
  2203  114A  3454               	retlw	84	;'T'
  2204  114B  3450               	retlw	80	;'P'
  2205  114C  343A               	retlw	58	;':'
  2206  114D  3425               	retlw	37	;'%'
  2207  114E  3473               	retlw	115	;'s'
  2208  114F  340A               	retlw	10
  2209  1150  3400               	retlw	0
  2210  1151                     STR_71:	
  2211  1151  342D               	retlw	45	;'-'
  2212  1152  3425               	retlw	37	;'%'
  2213  1153  3464               	retlw	100	;'d'
  2214  1154  342E               	retlw	46	;'.'
  2215  1155  3425               	retlw	37	;'%'
  2216  1156  3430               	retlw	48	;'0'
  2217  1157  3432               	retlw	50	;'2'
  2218  1158  3464               	retlw	100	;'d'
  2219  1159  342C               	retlw	44	;','
  2220  115A  3400               	retlw	0
  2221  115B                     STR_63:	
  2222  115B  3455               	retlw	85	;'U'
  2223  115C  3449               	retlw	73	;'I'
  2224  115D  344E               	retlw	78	;'N'
  2225  115E  3454               	retlw	84	;'T'
  2226  115F  3431               	retlw	49	;'1'
  2227  1160  3436               	retlw	54	;'6'
  2228  1161  345F               	retlw	95	;'_'
  2229  1162  3454               	retlw	84	;'T'
  2230  1163  343A               	retlw	58	;':'
  2231  1164  3400               	retlw	0
  2232  1165                     STR_2:	
  2233  1165  3424               	retlw	36	;'$'
  2234  1166  343A               	retlw	58	;':'
  2235  1167  3457               	retlw	87	;'W'
  2236  1168  3448               	retlw	72	;'H'
  2237  1169  344F               	retlw	79	;'O'
  2238  116A  343A               	retlw	58	;':'
  2239  116B  3425               	retlw	37	;'%'
  2240  116C  3464               	retlw	100	;'d'
  2241  116D  340A               	retlw	10
  2242  116E  3400               	retlw	0
  2243  116F                     STR_11:	
  2244  116F  3424               	retlw	36	;'$'
  2245  1170  343A               	retlw	58	;':'
  2246  1171  3447               	retlw	71	;'G'
  2247  1172  3445               	retlw	69	;'E'
  2248  1173  3454               	retlw	84	;'T'
  2249  1174  343A               	retlw	58	;':'
  2250  1175  3425               	retlw	37	;'%'
  2251  1176  3464               	retlw	100	;'d'
  2252  1177  340A               	retlw	10
  2253  1178  3400               	retlw	0
  2254  1179                     STR_74:	
  2255  1179  344E               	retlw	78	;'N'
  2256  117A  344F               	retlw	79	;'O'
  2257  117B  345F               	retlw	95	;'_'
  2258  117C  3444               	retlw	68	;'D'
  2259  117D  3441               	retlw	65	;'A'
  2260  117E  3454               	retlw	84	;'T'
  2261  117F  3441               	retlw	65	;'A'
  2262  1180  340A               	retlw	10
  2263  1181  3400               	retlw	0
  2264  1182                     STR_57:	
  2265  1182  3455               	retlw	85	;'U'
  2266  1183  3449               	retlw	73	;'I'
  2267  1184  344E               	retlw	78	;'N'
  2268  1185  3454               	retlw	84	;'T'
  2269  1186  3438               	retlw	56	;'8'
  2270  1187  345F               	retlw	95	;'_'
  2271  1188  3454               	retlw	84	;'T'
  2272  1189  343A               	retlw	58	;':'
  2273  118A  3400               	retlw	0
  2274  118B                     STR_18:	
  2275  118B  3449               	retlw	73	;'I'
  2276  118C  3432               	retlw	50	;'2'
  2277  118D  3443               	retlw	67	;'C'
  2278  118E  343A               	retlw	58	;':'
  2279  118F  3425               	retlw	37	;'%'
  2280  1190  3464               	retlw	100	;'d'
  2281  1191  3400               	retlw	0
  2282  1192  3400               	retlw	0
  2283  1193                     STR_69:	
  2284  1193  3446               	retlw	70	;'F'
  2285  1194  344C               	retlw	76	;'L'
  2286  1195  344F               	retlw	79	;'O'
  2287  1196  3441               	retlw	65	;'A'
  2288  1197  3454               	retlw	84	;'T'
  2289  1198  343A               	retlw	58	;':'
  2290  1199  3400               	retlw	0
  2291  119A                     STR_41:	
  2292  119A  3428               	retlw	40	;'('
  2293  119B  346E               	retlw	110	;'n'
  2294  119C  3475               	retlw	117	;'u'
  2295  119D  346C               	retlw	108	;'l'
  2296  119E  346C               	retlw	108	;'l'
  2297  119F  3429               	retlw	41	;')'
  2298  11A0  3400               	retlw	0
  2299  11A1                     STR_32:	
  2300  11A1  3424               	retlw	36	;'$'
  2301  11A2  343A               	retlw	58	;':'
  2302  11A3  3452               	retlw	82	;'R'
  2303  11A4  3453               	retlw	83	;'S'
  2304  11A5  3443               	retlw	67	;'C'
  2305  11A6  343A               	retlw	58	;':'
  2306  11A7  3400               	retlw	0
  2307  11A8                     STR_13:	
  2308  11A8  3424               	retlw	36	;'$'
  2309  11A9  343A               	retlw	58	;':'
  2310  11AA  344D               	retlw	77	;'M'
  2311  11AB  3441               	retlw	65	;'A'
  2312  11AC  3450               	retlw	80	;'P'
  2313  11AD  343A               	retlw	58	;':'
  2314  11AE  3400               	retlw	0
  2315  11AF                     STR_56:	
  2316  11AF  3425               	retlw	37	;'%'
  2317  11B0  3425               	retlw	37	;'%'
  2318  11B1  3425               	retlw	37	;'%'
  2319  11B2  3464               	retlw	100	;'d'
  2320  11B3  343A               	retlw	58	;':'
  2321  11B4  3400               	retlw	0
  2322  11B5                     STR_42:	
  2323  11B5  3423               	retlw	35	;'#'
  2324  11B6  3425               	retlw	37	;'%'
  2325  11B7  3473               	retlw	115	;'s'
  2326  11B8  340A               	retlw	10
  2327  11B9  3400               	retlw	0
  2328  11BA                     STR_22:	
  2329  11BA  344E               	retlw	78	;'N'
  2330  11BB  3457               	retlw	87	;'W'
  2331  11BC  344C               	retlw	76	;'L'
  2332  11BD  3400               	retlw	0
  2333  11BE  3400               	retlw	0
  2334  11BF                     STR_19:	
  2335  11BF  3443               	retlw	67	;'C'
  2336  11C0  344C               	retlw	76	;'L'
  2337  11C1  3452               	retlw	82	;'R'
  2338  11C2  3400               	retlw	0
  2339  11C3  3400               	retlw	0
  2340  11C4                     STR_59:	
  2341  11C4  3425               	retlw	37	;'%'
  2342  11C5  3475               	retlw	117	;'u'
  2343  11C6  340A               	retlw	10
  2344  11C7  3400               	retlw	0
  2345  11C8                     STR_58:	
  2346  11C8  3425               	retlw	37	;'%'
  2347  11C9  3475               	retlw	117	;'u'
  2348  11CA  342C               	retlw	44	;','
  2349  11CB  3400               	retlw	0
  2350  11CC                     STR_54:	
  2351  11CC  3452               	retlw	82	;'R'
  2352  11CD  3444               	retlw	68	;'D'
  2353  11CE  3441               	retlw	65	;'A'
  2354  11CF  3400               	retlw	0
  2355  11D0                     STR_53:	
  2356  11D0  3457               	retlw	87	;'W'
  2357  11D1  3444               	retlw	68	;'D'
  2358  11D2  3441               	retlw	65	;'A'
  2359  11D3  3400               	retlw	0
  2360  11D4                     STR_49:	
  2361  11D4  3441               	retlw	65	;'A'
  2362  11D5  3443               	retlw	67	;'C'
  2363  11D6  344B               	retlw	75	;'K'
  2364  11D7  3400               	retlw	0
  2365  11D8                     STR_14:	
  2366  11D8  3425               	retlw	37	;'%'
  2367  11D9  3464               	retlw	100	;'d'
  2368  11DA  342C               	retlw	44	;','
  2369  11DB  3400               	retlw	0
  2370  11DC                     STR_5:	
  2371  11DC  3453               	retlw	83	;'S'
  2372  11DD  3454               	retlw	84	;'T'
  2373  11DE  3441               	retlw	65	;'A'
  2374  11DF  3400               	retlw	0
  2375  11E0                     STR_24:	
  2376  11E0  3449               	retlw	73	;'I'
  2377  11E1  3432               	retlw	50	;'2'
  2378  11E2  3443               	retlw	67	;'C'
  2379  11E3  3400               	retlw	0
  2380  11E4                     STR_36:	
  2381  11E4  3443               	retlw	67	;'C'
  2382  11E5  3453               	retlw	83	;'S'
  2383  11E6  3443               	retlw	67	;'C'
  2384  11E7  3400               	retlw	0
  2385  11E8                     STR_31:	
  2386  11E8  3452               	retlw	82	;'R'
  2387  11E9  3453               	retlw	83	;'S'
  2388  11EA  3443               	retlw	67	;'C'
  2389  11EB  3400               	retlw	0
  2390  11EC                     STR_29:	
  2391  11EC  3457               	retlw	87	;'W'
  2392  11ED  3453               	retlw	83	;'S'
  2393  11EE  3443               	retlw	67	;'C'
  2394  11EF  3400               	retlw	0
  2395  11F0                     STR_37:	
  2396  11F0  3445               	retlw	69	;'E'
  2397  11F1  3444               	retlw	68	;'D'
  2398  11F2  3447               	retlw	71	;'G'
  2399  11F3  3400               	retlw	0
  2400  11F4                     STR_26:	
  2401  11F4  3453               	retlw	83	;'S'
  2402  11F5  3443               	retlw	67	;'C'
  2403  11F6  344E               	retlw	78	;'N'
  2404  11F7  3400               	retlw	0
  2405  11F8                     STR_1:	
  2406  11F8  3457               	retlw	87	;'W'
  2407  11F9  3448               	retlw	72	;'H'
  2408  11FA  344F               	retlw	79	;'O'
  2409  11FB  3400               	retlw	0
  2410  11FC                     STR_25:	
  2411  11FC  344D               	retlw	77	;'M'
  2412  11FD  3441               	retlw	65	;'A'
  2413  11FE  3450               	retlw	80	;'P'
  2414  11FF  3400               	retlw	0
  2415  1200                     STR_6:	
  2416  1200  3453               	retlw	83	;'S'
  2417  1201  3454               	retlw	84	;'T'
  2418  1202  3450               	retlw	80	;'P'
  2419  1203  3400               	retlw	0
  2420  1204                     STR_38:	
  2421  1204  344D               	retlw	77	;'M'
  2422  1205  3454               	retlw	84	;'T'
  2423  1206  3452               	retlw	82	;'R'
  2424  1207  3400               	retlw	0
  2425  1208                     STR_27:	
  2426  1208  3450               	retlw	80	;'P'
  2427  1209  344F               	retlw	79	;'O'
  2428  120A  3453               	retlw	83	;'S'
  2429  120B  3400               	retlw	0
  2430  120C                     STR_10:	
  2431  120C  3447               	retlw	71	;'G'
  2432  120D  3445               	retlw	69	;'E'
  2433  120E  3454               	retlw	84	;'T'
  2434  120F  3400               	retlw	0
  2435  1210                     STR_9:	
  2436  1210  3453               	retlw	83	;'S'
  2437  1211  3445               	retlw	69	;'E'
  2438  1212  3454               	retlw	84	;'T'
  2439  1213  3400               	retlw	0
  2440  1214                     STR_4:	
  2441  1214  3453               	retlw	83	;'S'
  2442  1215  3441               	retlw	65	;'A'
  2443  1216  3456               	retlw	86	;'V'
  2444  1217  3400               	retlw	0
  2445  1218                     STR_33:	
  2446  1218  3425               	retlw	37	;'%'
  2447  1219  3464               	retlw	100	;'d'
  2448  121A  347C               	retlw	124	;'|'
  2449  121B  3400               	retlw	0
  2450  121C                     STR_3:	
  2451  121C  3421               	retlw	33	;'!'
  2452  121D  340A               	retlw	10
  2453  121E  3400               	retlw	0
  2454  112F                     
  2455                           ; #config settings
  2456  0000                     
  2457                           	psect	cinit
  2458  003E                     start_initialization:	
  2459  003E                     __initialization:		;BIGRAM
  2460                           
  2461                           ; Initialize objects allocated to BANK2
  2462  003E  301D               	movlw	low __pidataBANK2
  2463  003F  0084               	movwf	4
  2464  0040  309A               	movlw	(high __pidataBANK2)| (0+128)
  2465  0041  0085               	movwf	5
  2466  0042  0022               	movlb	2	; select bank2
  2467  0043  0012               	moviw fsr0++
  2468  0044  00E4               	movwf	__pdataBANK2& (0+127)
  2469  0045  0012               	moviw fsr0++
  2470  0046  00E5               	movwf	(__pdataBANK2+1)& (0+127)
  2471  0047  0012               	moviw fsr0++
  2472  0048  00E6               	movwf	(__pdataBANK2+2)& (0+127)
  2473  0049  0012               	moviw fsr0++
  2474  004A  00E7               	movwf	(__pdataBANK2+3)& (0+127)
  2475  004B  0012               	moviw fsr0++
  2476  004C  00E8               	movwf	(__pdataBANK2+4)& (0+127)
  2477  004D  0012               	moviw fsr0++
  2478  004E  00E9               	movwf	(__pdataBANK2+5)& (0+127)
  2479                           
  2480                           ; Clear objects allocated to BIGRAM
  2481  004F  3030               	movlw	low (0+9008)
  2482  0050  0084               	movwf	4
  2483  0051  3023               	movlw	high (0+9008)
  2484  0052  0085               	movwf	5
  2485  0053  30C0               	movlw	192
  2486  0054  00FE               	movwf	btemp
  2487  0055  3000               	movlw	0
  2488  0056  00FF               	movwf	btemp+1
  2489  0057  319A  2249  3180   	fcall	clear_ram0
  2490                           
  2491                           ; Clear objects allocated to COMMON
  2492  005A  01F8               	clrf	__pbssCOMMON& (0+127)
  2493  005B  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
  2494  005C  01FA               	clrf	(__pbssCOMMON+2)& (0+127)
  2495  005D  01FB               	clrf	(__pbssCOMMON+3)& (0+127)
  2496  005E  01FC               	clrf	(__pbssCOMMON+4)& (0+127)
  2497  005F  01FD               	clrf	(__pbssCOMMON+5)& (0+127)
  2498                           
  2499                           ; Clear objects allocated to BANK2
  2500  0060  3020               	movlw	low __pbssBANK2
  2501  0061  0084               	movwf	4
  2502  0062  3001               	movlw	high __pbssBANK2
  2503  0063  0085               	movwf	5
  2504  0064  3044               	movlw	68
  2505  0065  00FE               	movwf	btemp
  2506  0066  3000               	movlw	0
  2507  0067  00FF               	movwf	btemp+1
  2508  0068  319A  2249  3180   	fcall	clear_ram0
  2509                           
  2510                           ; Clear objects allocated to BANK3
  2511  006B  30A0               	movlw	low __pbssBANK3
  2512  006C  0084               	movwf	4
  2513  006D  3001               	movlw	high __pbssBANK3
  2514  006E  0085               	movwf	5
  2515  006F  3043               	movlw	67
  2516  0070  00FE               	movwf	btemp
  2517  0071  3000               	movlw	0
  2518  0072  00FF               	movwf	btemp+1
  2519  0073  319A  2249  3180   	fcall	clear_ram0
  2520                           
  2521                           ; Clear objects allocated to BANK4
  2522  0076  3020               	movlw	low __pbssBANK4
  2523  0077  0084               	movwf	4
  2524  0078  3002               	movlw	high __pbssBANK4
  2525  0079  0085               	movwf	5
  2526  007A  3040               	movlw	64
  2527  007B  00FE               	movwf	btemp
  2528  007C  3000               	movlw	0
  2529  007D  00FF               	movwf	btemp+1
  2530  007E  319A  2249  3180   	fcall	clear_ram0
  2531                           
  2532                           ; Clear objects allocated to BANK5
  2533  0081  30A0               	movlw	low __pbssBANK5
  2534  0082  0084               	movwf	4
  2535  0083  3002               	movlw	high __pbssBANK5
  2536  0084  0085               	movwf	5
  2537  0085  3040               	movlw	64
  2538  0086  00FE               	movwf	btemp
  2539  0087  3000               	movlw	0
  2540  0088  00FF               	movwf	btemp+1
  2541  0089  319A  2249  3180   	fcall	clear_ram0
  2542                           
  2543                           ; Clear objects allocated to BANK6
  2544  008C  3020               	movlw	low __pbssBANK6
  2545  008D  0084               	movwf	4
  2546  008E  3003               	movlw	high __pbssBANK6
  2547  008F  0085               	movwf	5
  2548  0090  3040               	movlw	64
  2549  0091  00FE               	movwf	btemp
  2550  0092  3000               	movlw	0
  2551  0093  00FF               	movwf	btemp+1
  2552  0094  319A  2249         	fcall	clear_ram0
  2553  0096                     end_of_initialization:	
  2554                           ;End of C runtime variable initialization code
  2555                           
  2556  0096                     __end_of__initialization:	
  2557  0096  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  2558  0097  0020               	movlb	0
  2559  0098  319D  2D53         	ljmp	_main	;jump to C main() function
  2560                           
  2561                           	psect	bssCOMMON
  2562  0078                     __pbssCOMMON:	
  2563  0078                     _i:	
  2564  0078                     	ds	1
  2565  0079                     command_handler@pos:	
  2566  0079                     	ds	1
  2567  007A                     _eusartTxTail:	
  2568  007A                     	ds	1
  2569  007B                     _eusartTxHead:	
  2570  007B                     	ds	1
  2571  007C                     I2C1_ISR@i2c_address:	
  2572  007C                     	ds	2
  2573                           
  2574                           	psect	bssBANK2
  2575  0120                     __pbssBANK2:	
  2576  0120                     _i2c1_object:	
  2577  0120                     	ds	5
  2578  0125                     _dev_map:	
  2579  0125                     	ds	4
  2580  0129                     _float100:	
  2581  0129                     	ds	2
  2582  012B                     _device_id_:	
  2583  012B                     	ds	2
  2584  012D                     _PROTOCOL_Inv_Handler:	
  2585  012D                     	ds	2
  2586  012F                     _PROTOCOL_Extension_Handler:	
  2587  012F                     	ds	2
  2588  0131                     _PROTOCOL_Loop_Func:	
  2589  0131                     	ds	2
  2590  0133                     _PROTOCOL_Set_Handler:	
  2591  0133                     	ds	2
  2592  0135                     _PROTOCOL_Stop_Handler:	
  2593  0135                     	ds	2
  2594  0137                     _PROTOCOL_Start_Handler:	
  2595  0137                     	ds	2
  2596  0139                     inv_handler@t:	
  2597  0139                     	ds	2
  2598  013B                     _edge_func:	
  2599  013B                     	ds	2
  2600  013D                     I2C1_ISR@pi2c_buf_ptr:	
  2601  013D                     	ds	2
  2602  013F                     _data:	
  2603  013F                     	ds	1
  2604  0140                     _j:	
  2605  0140                     	ds	1
  2606  0141                     _backplane_slave_enabled:	
  2607  0141                     	ds	1
  2608  0142                     _readbuf_status:	
  2609  0142                     	ds	1
  2610  0143                     _tmr_overflow:	
  2611  0143                     	ds	1
  2612  0144                     _tmr_cnt:	
  2613  0144                     	ds	1
  2614  0145                     _sec_cnt:	
  2615  0145                     	ds	1
  2616  0146                     _invoked:	
  2617  0146                     	ds	1
  2618  0147                     _locked:	
  2619  0147                     	ds	1
  2620  0148                     _value:	
  2621  0148                     	ds	1
  2622  0149                     _cnt:	
  2623  0149                     	ds	1
  2624  014A                     _slave_address:	
  2625  014A                     	ds	1
  2626  014B                     edge_meter@initialized:	
  2627  014B                     	ds	1
  2628  014C                     edge_meter@sec:	
  2629  014C                     	ds	1
  2630  014D                     edge_meter@pulses:	
  2631  014D                     	ds	1
  2632  014E                     dev_map_iterator@yy:	
  2633  014E                     	ds	1
  2634  014F                     dev_map_iterator@xx:	
  2635  014F                     	ds	1
  2636  0150                     _devs:	
  2637  0150                     	ds	1
  2638  0151                     _do_func:	
  2639  0151                     	ds	1
  2640  0152                     _timer_cnt:	
  2641  0152                     	ds	1
  2642  0153                     _running:	
  2643  0153                     	ds	1
  2644  0154                     _timer0ReloadVal:	
  2645  0154                     	ds	1
  2646  0155                     _eusartRxCount:	
  2647  0155                     	ds	1
  2648  0156                     _eusartRxTail:	
  2649  0156                     	ds	1
  2650  0157                     _eusartRxHead:	
  2651  0157                     	ds	1
  2652  0158                     _eusartTxBufferRemaining:	
  2653  0158                     	ds	1
  2654  0159                     I2C1_ISR@i2c_10bit_address_restart:	
  2655  0159                     	ds	1
  2656  015A                     I2C1_ISR@i2c_bytes_left:	
  2657  015A                     	ds	1
  2658  015B                     _p_i2c1_current:	
  2659  015B                     	ds	1
  2660  015C                     _p_i2c1_trb_current:	
  2661  015C                     	ds	1
  2662  015D                     _i2c1_trb_count:	
  2663  015D                     	ds	1
  2664  015E                     _i2c1_state:	
  2665  015E                     	ds	1
  2666  015F                     _i2c1_tr_queue:	
  2667  015F                     	ds	3
  2668  0162                     PROTOCOL_Send_int8_t@pbuf:	
  2669  0162                     	ds	1
  2670  0163                     PROTOCOL_Send_uint8_t@pbuf:	
  2671  0163                     	ds	1
  2672                           
  2673                           	psect	dataBANK2
  2674  0164                     __pdataBANK2:	
  2675  0164                     _tmr_scaler:	
  2676  0164                     	ds	1
  2677  0165                     put_cmd@idx:	
  2678  0165                     	ds	1
  2679  0166                     inv_handler@cmd_next:	
  2680  0166                     	ds	1
  2681  0167                     dev_map_iterator@start:	
  2682  0167                     	ds	1
  2683  0168                     _BACKPLANE_SLAVE_ADDRESS:	
  2684  0168                     	ds	1
  2685  0169                     _type_no_data:	
  2686  0169                     	ds	1
  2687                           
  2688                           	psect	bssBANK3
  2689  01A0                     __pbssBANK3:	
  2690  01A0                     _schedule:	
  2691  01A0                     	ds	28
  2692  01BC                     _read_buf:	
  2693  01BC                     	ds	16
  2694  01CC                     _readbuf:	
  2695  01CC                     	ds	6
  2696  01D2                     I2C1_MasterRead@trBlock:	
  2697  01D2                     	ds	5
  2698  01D7                     I2C1_MasterWrite@trBlock:	
  2699  01D7                     	ds	5
  2700  01DC                     PROTOCOL_Send_float@pbuf:	
  2701  01DC                     	ds	3
  2702  01DF                     PROTOCOL_Send_int16_t@pbuf:	
  2703  01DF                     	ds	2
  2704  01E1                     PROTOCOL_Send_uint16_t@pbuf:	
  2705  01E1                     	ds	2
  2706                           
  2707                           	psect	bssBANK4
  2708  0220                     __pbssBANK4:	
  2709  0220                     _buf:	
  2710  0220                     	ds	48
  2711  0250                     _sendbuf:	
  2712  0250                     	ds	16
  2713                           
  2714                           	psect	bssBANK5
  2715  02A0                     __pbssBANK5:	
  2716  02A0                     _eusartTxBuffer:	
  2717  02A0                     	ds	64
  2718                           
  2719                           	psect	bssBANK6
  2720  0320                     __pbssBANK6:	
  2721  0320                     _eusartRxBuffer:	
  2722  0320                     	ds	64
  2723                           
  2724                           	psect	clrtext
  2725  1A49                     clear_ram0:	
  2726                           ;	Called with FSR0 containing the base address, and
  2727                           ;	btemp/btemp+1 has the size to clear
  2728                           
  2729  1A49  0064               	clrwdt	;clear the watchdog before getting into this loop
  2730  1A4A                     clrloop0:	
  2731  1A4A  0180               	clrf	0	;clear RAM location pointed to by FSR
  2732  1A4B  3101               	addfsr 0,1
  2733  1A4C  3001               	movlw	1
  2734  1A4D  02FE               	subwf	126,f
  2735  1A4E  3000               	movlw	0
  2736  1A4F  3BFF               	subwfb	127,f
  2737  1A50  087F               	movf	127,w
  2738  1A51  047E               	iorwf	126,w
  2739  1A52  1903               	btfsc	3,2
  2740  1A53  3400               	retlw	0	;all done for this memory range, return
  2741  1A54  2A4A               	goto	clrloop0	;have we reached the end yet?
  2742                           
  2743                           	psect	cstackBANK2
  2744  016A                     __pcstackBANK2:	
  2745  016A                     ??_inv_handler:	
  2746                           
  2747                           ; 1 bytes @ 0x0
  2748  016A                     	ds	1
  2749  016B                     ??_PROTOCOL_Loop:	
  2750                           
  2751                           ; 1 bytes @ 0x1
  2752  016B                     	ds	2
  2753  016D                     PROTOCOL_Loop@c:	
  2754                           
  2755                           ; 1 bytes @ 0x3
  2756  016D                     	ds	1
  2757  016E                     PROTOCOL_Loop@device_address:	
  2758                           
  2759                           ; 1 bytes @ 0x4
  2760  016E                     	ds	1
  2761                           
  2762                           	psect	cstackBANK1
  2763  00A0                     __pcstackBANK1:	
  2764  00A0                     edge_meter@buf:	
  2765  00A0                     exec_remote_cmd@send_buf:	
  2766                           ; 48 bytes @ 0x0
  2767                           
  2768                           
  2769                           ; 50 bytes @ 0x0
  2770  00A0                     	ds	48
  2771  00D0                     edge_meter@rms10:	
  2772                           
  2773                           ; 3 bytes @ 0x30
  2774  00D0                     	ds	2
  2775  00D2                     exec_remote_cmd@idx:	
  2776                           
  2777                           ; 1 bytes @ 0x32
  2778  00D2                     	ds	1
  2779  00D3                     exec_remote_cmd@j:	
  2780  00D3                     _edge_meter$1920:	
  2781                           ; 1 bytes @ 0x33
  2782                           
  2783                           
  2784                           ; 3 bytes @ 0x33
  2785  00D3                     	ds	1
  2786  00D4                     exec_remote_cmd@i:	
  2787                           
  2788                           ; 1 bytes @ 0x34
  2789  00D4                     	ds	1
  2790  00D5                     exec_remote_cmd@status:	
  2791                           
  2792                           ; 1 bytes @ 0x35
  2793  00D5                     	ds	1
  2794  00D6                     exec_remote_cmd@data:	
  2795  00D6                     _edge_meter$1923:	
  2796                           ; 1 bytes @ 0x36
  2797                           
  2798                           
  2799                           ; 2 bytes @ 0x36
  2800  00D6                     	ds	1
  2801  00D7                     exec_remote_cmd@buf:	
  2802                           
  2803                           ; 2 bytes @ 0x37
  2804  00D7                     	ds	1
  2805  00D8                     _edge_meter$1924:	
  2806                           
  2807                           ; 2 bytes @ 0x38
  2808  00D8                     	ds	2
  2809  00DA                     _edge_meter$1925:	
  2810                           
  2811                           ; 2 bytes @ 0x3A
  2812  00DA                     	ds	2
  2813  00DC                     _edge_meter$1926:	
  2814                           
  2815                           ; 2 bytes @ 0x3C
  2816  00DC                     	ds	2
  2817  00DE                     edge_meter@rpm:	
  2818                           
  2819                           ; 2 bytes @ 0x3E
  2820  00DE                     	ds	2
  2821  00E0                     edge_meter@x:	
  2822                           
  2823                           ; 2 bytes @ 0x40
  2824  00E0                     	ds	2
  2825  00E2                     edge_meter@y:	
  2826                           
  2827                           ; 2 bytes @ 0x42
  2828  00E2                     	ds	2
  2829  00E4                     edge_meter@z:	
  2830                           
  2831                           ; 2 bytes @ 0x44
  2832  00E4                     	ds	2
  2833  00E6                     edge_meter@speed10:	
  2834                           
  2835                           ; 2 bytes @ 0x46
  2836  00E6                     	ds	2
  2837  00E8                     _edge_meter$1921:	
  2838                           
  2839                           ; 2 bytes @ 0x48
  2840  00E8                     	ds	2
  2841  00EA                     _edge_meter$1922:	
  2842                           
  2843                           ; 2 bytes @ 0x4A
  2844  00EA                     	ds	2
  2845  00EC                     fetch@status:	
  2846                           
  2847                           ; 1 bytes @ 0x4C
  2848  00EC                     	ds	1
  2849  00ED                     fetch@sch:	
  2850                           
  2851                           ; 1 bytes @ 0x4D
  2852  00ED                     	ds	1
  2853  00EE                     fetch@pos:	
  2854                           
  2855                           ; 1 bytes @ 0x4E
  2856  00EE                     	ds	1
  2857  00EF                     fetch@dev_addr:	
  2858                           
  2859                           ; 1 bytes @ 0x4F
  2860  00EF                     	ds	1
  2861                           
  2862                           	psect	cstackCOMMON
  2863  0070                     __pcstackCOMMON:	
  2864  0070                     ?_isdigit:	
  2865  0070                     ?_I2C1_Stop:	
  2866                           ; 1 bit 
  2867                           
  2868  0070                     ??_I2C1_Stop:	
  2869                           ; 1 bytes @ 0x0
  2870                           
  2871  0070                     ?_I2C1_FunctionComplete:	
  2872                           ; 1 bytes @ 0x0
  2873                           
  2874  0070                     ??_I2C1_FunctionComplete:	
  2875                           ; 1 bytes @ 0x0
  2876                           
  2877  0070                     ?_OSCILLATOR_Initialize:	
  2878                           ; 1 bytes @ 0x0
  2879                           
  2880  0070                     ?_WDT_Initialize:	
  2881                           ; 1 bytes @ 0x0
  2882                           
  2883  0070                     ?_TMR0_Initialize:	
  2884                           ; 1 bytes @ 0x0
  2885                           
  2886  0070                     ?_PROTOCOL_Loop:	
  2887                           ; 1 bytes @ 0x0
  2888                           
  2889  0070                     ?_I2C1_Initialize:	
  2890                           ; 1 bytes @ 0x0
  2891                           
  2892  0070                     ?_I2C1_ISR:	
  2893                           ; 1 bytes @ 0x0
  2894                           
  2895  0070                     ?_I2C1_BusCollisionISR:	
  2896                           ; 1 bytes @ 0x0
  2897                           
  2898  0070                     ??_I2C1_BusCollisionISR:	
  2899                           ; 1 bytes @ 0x0
  2900                           
  2901  0070                     ?_DATAEE_ReadByte:	
  2902                           ; 1 bytes @ 0x0
  2903                           
  2904  0070                     ?_EUSART_Initialize:	
  2905                           ; 1 bytes @ 0x0
  2906                           
  2907  0070                     ?_EUSART_Read:	
  2908                           ; 1 bytes @ 0x0
  2909                           
  2910  0070                     ?_EUSART_Write:	
  2911                           ; 1 bytes @ 0x0
  2912                           
  2913  0070                     ?_EUSART_Transmit_ISR:	
  2914                           ; 1 bytes @ 0x0
  2915                           
  2916  0070                     ??_EUSART_Transmit_ISR:	
  2917                           ; 1 bytes @ 0x0
  2918                           
  2919  0070                     ?_EUSART_Receive_ISR:	
  2920                           ; 1 bytes @ 0x0
  2921                           
  2922  0070                     ??_EUSART_Receive_ISR:	
  2923                           ; 1 bytes @ 0x0
  2924                           
  2925  0070                     ?_PIN_MANAGER_Initialize:	
  2926                           ; 1 bytes @ 0x0
  2927                           
  2928  0070                     ?_INTERRUPT_InterruptManager:	
  2929                           ; 1 bytes @ 0x0
  2930                           
  2931  0070                     ?_SYSTEM_Initialize:	
  2932                           ; 1 bytes @ 0x0
  2933                           
  2934  0070                     ?_TMR0_HasOverflowOccured:	
  2935                           ; 1 bytes @ 0x0
  2936                           
  2937  0070                     ?_start_handler:	
  2938                           ; 1 bytes @ 0x0
  2939                           
  2940  0070                     ?_stop_handler:	
  2941                           ; 1 bytes @ 0x0
  2942                           
  2943  0070                     ?_exec_remote_cmd:	
  2944                           ; 1 bytes @ 0x0
  2945                           
  2946  0070                     ?_init:	
  2947                           ; 1 bytes @ 0x0
  2948                           
  2949  0070                     ?_add_dev:	
  2950                           ; 1 bytes @ 0x0
  2951                           
  2952  0070                     ?_del_dev:	
  2953                           ; 1 bytes @ 0x0
  2954                           
  2955  0070                     ?_dev_map_iterator:	
  2956                           ; 1 bytes @ 0x0
  2957                           
  2958  0070                     ?_scan_dev:	
  2959                           ; 1 bytes @ 0x0
  2960                           
  2961  0070                     ?_check_plg:	
  2962                           ; 1 bytes @ 0x0
  2963                           
  2964  0070                     ?_detected:	
  2965                           ; 1 bytes @ 0x0
  2966                           
  2967  0070                     ?_print_dev_map:	
  2968                           ; 1 bytes @ 0x0
  2969                           
  2970  0070                     ?_sen:	
  2971                           ; 1 bytes @ 0x0
  2972                           
  2973  0070                     ?_fetch:	
  2974                           ; 1 bytes @ 0x0
  2975                           
  2976  0070                     ?_inv_handler:	
  2977                           ; 1 bytes @ 0x0
  2978                           
  2979  0070                     ?_main:	
  2980                           ; 1 bytes @ 0x0
  2981                           
  2982  0070                     ?_PROTOCOL_Write_Device_Address:	
  2983                           ; 1 bytes @ 0x0
  2984                           
  2985  0070                     ?_PROTOCOL_Read_Device_Address:	
  2986                           ; 1 bytes @ 0x0
  2987                           
  2988  0070                     ?_PROTOCOL_STA:	
  2989                           ; 1 bytes @ 0x0
  2990                           
  2991  0070                     ?_PROTOCOL_STP:	
  2992                           ; 1 bytes @ 0x0
  2993                           
  2994  0070                     ?_PROTOCOL_SAV:	
  2995                           ; 1 bytes @ 0x0
  2996                           
  2997  0070                     ?_PROTOCOL_SET:	
  2998                           ; 1 bytes @ 0x0
  2999                           
  3000  0070                     ?_PROTOCOL_EXT:	
  3001                           ; 1 bytes @ 0x0
  3002                           
  3003                           
  3004                           ; 1 bytes @ 0x0
  3005  0070                     	ds	2
  3006  0072                     I2C1_Stop@completion_code:	
  3007                           
  3008                           ; 1 bytes @ 0x2
  3009  0072                     	ds	1
  3010  0073                     ??_I2C1_ISR:	
  3011                           
  3012                           ; 1 bytes @ 0x3
  3013  0073                     	ds	4
  3014  0077                     ??_INTERRUPT_InterruptManager:	
  3015                           
  3016                           ; 1 bytes @ 0x7
  3017  0077                     	ds	1
  3018                           
  3019                           	psect	cstackBANK0
  3020  0020                     __pcstackBANK0:	
  3021  0020                     ?_I2C1_MasterWriteTRBBuild:	
  3022  0020                     ?_I2C1_MasterTRBInsert:	
  3023                           ; 1 bytes @ 0x0
  3024                           
  3025  0020                     ?_I2C1_MasterReadTRBBuild:	
  3026                           ; 1 bytes @ 0x0
  3027                           
  3028  0020                     ??_OSCILLATOR_Initialize:	
  3029                           ; 1 bytes @ 0x0
  3030                           
  3031  0020                     ??_WDT_Initialize:	
  3032                           ; 1 bytes @ 0x0
  3033                           
  3034  0020                     ??_TMR0_Initialize:	
  3035                           ; 1 bytes @ 0x0
  3036                           
  3037  0020                     ?_PROTOCOL_Set_Extension_Handler:	
  3038                           ; 1 bytes @ 0x0
  3039                           
  3040  0020                     ??_isdigit:	
  3041                           ; 1 bytes @ 0x0
  3042                           
  3043  0020                     ??_I2C1_Initialize:	
  3044                           ; 1 bytes @ 0x0
  3045                           
  3046  0020                     ?_DATAEE_WriteByte:	
  3047                           ; 1 bytes @ 0x0
  3048                           
  3049  0020                     ??_DATAEE_ReadByte:	
  3050                           ; 1 bytes @ 0x0
  3051                           
  3052  0020                     ??_EUSART_Initialize:	
  3053                           ; 1 bytes @ 0x0
  3054                           
  3055  0020                     ??_EUSART_Read:	
  3056                           ; 1 bytes @ 0x0
  3057                           
  3058  0020                     ??_EUSART_Write:	
  3059                           ; 1 bytes @ 0x0
  3060                           
  3061  0020                     ??_PIN_MANAGER_Initialize:	
  3062                           ; 1 bytes @ 0x0
  3063                           
  3064  0020                     ??_TMR0_HasOverflowOccured:	
  3065                           ; 1 bytes @ 0x0
  3066                           
  3067  0020                     ??_start_handler:	
  3068                           ; 1 bytes @ 0x0
  3069                           
  3070  0020                     ??_stop_handler:	
  3071                           ; 1 bytes @ 0x0
  3072                           
  3073  0020                     ??_dev_map_iterator:	
  3074                           ; 1 bytes @ 0x0
  3075                           
  3076  0020                     ??_PROTOCOL_Read_Device_Address:	
  3077                           ; 1 bytes @ 0x0
  3078                           
  3079  0020                     ??_PROTOCOL_STA:	
  3080                           ; 1 bytes @ 0x0
  3081                           
  3082  0020                     ??_PROTOCOL_STP:	
  3083                           ; 1 bytes @ 0x0
  3084                           
  3085  0020                     ??_PROTOCOL_SET:	
  3086                           ; 1 bytes @ 0x0
  3087                           
  3088  0020                     ?_strncmp:	
  3089                           ; 1 bytes @ 0x0
  3090                           
  3091  0020                     ?_concat:	
  3092                           ; 2 bytes @ 0x0
  3093                           
  3094  0020                     ?___wmul:	
  3095                           ; 2 bytes @ 0x0
  3096                           
  3097  0020                     ?___awmod:	
  3098                           ; 2 bytes @ 0x0
  3099                           
  3100  0020                     ?___lwdiv:	
  3101                           ; 2 bytes @ 0x0
  3102                           
  3103  0020                     ?___ftpack:	
  3104                           ; 2 bytes @ 0x0
  3105                           
  3106  0020                     I2C1_MasterTRBInsert@ptrb_list:	
  3107                           ; 3 bytes @ 0x0
  3108                           
  3109  0020                     I2C1_MasterWriteTRBBuild@pdata:	
  3110                           ; 1 bytes @ 0x0
  3111                           
  3112  0020                     DATAEE_WriteByte@bData:	
  3113                           ; 1 bytes @ 0x0
  3114                           
  3115  0020                     DATAEE_ReadByte@bAdd:	
  3116                           ; 1 bytes @ 0x0
  3117                           
  3118  0020                     concat@lsb:	
  3119                           ; 1 bytes @ 0x0
  3120                           
  3121  0020                     _isdigit$1500:	
  3122                           ; 1 bytes @ 0x0
  3123                           
  3124  0020                     I2C1_MasterReadTRBBuild@pdata:	
  3125                           ; 1 bytes @ 0x0
  3126                           
  3127  0020                     PROTOCOL_Set_Extension_Handler@extension_handler:	
  3128                           ; 2 bytes @ 0x0
  3129                           
  3130  0020                     ___wmul@multiplier:	
  3131                           ; 2 bytes @ 0x0
  3132                           
  3133  0020                     ___awmod@divisor:	
  3134                           ; 2 bytes @ 0x0
  3135                           
  3136  0020                     ___lwdiv@divisor:	
  3137                           ; 2 bytes @ 0x0
  3138                           
  3139  0020                     strncmp@s1:	
  3140                           ; 2 bytes @ 0x0
  3141                           
  3142  0020                     ___ftpack@arg:	
  3143                           ; 2 bytes @ 0x0
  3144                           
  3145                           
  3146                           ; 3 bytes @ 0x0
  3147  0020                     	ds	1
  3148  0021                     ?_PROTOCOL_Initialize:	
  3149  0021                     ??_DATAEE_WriteByte:	
  3150                           ; 1 bytes @ 0x1
  3151                           
  3152  0021                     ??_SYSTEM_Initialize:	
  3153                           ; 1 bytes @ 0x1
  3154                           
  3155  0021                     I2C1_MasterTRBInsert@pflag:	
  3156                           ; 1 bytes @ 0x1
  3157                           
  3158  0021                     I2C1_MasterWriteTRBBuild@length:	
  3159                           ; 1 bytes @ 0x1
  3160                           
  3161  0021                     DATAEE_WriteByte@bAdd:	
  3162                           ; 1 bytes @ 0x1
  3163                           
  3164  0021                     EUSART_Read@readValue:	
  3165                           ; 1 bytes @ 0x1
  3166                           
  3167  0021                     EUSART_Write@txData:	
  3168                           ; 1 bytes @ 0x1
  3169                           
  3170  0021                     PROTOCOL_SET@value_:	
  3171                           ; 1 bytes @ 0x1
  3172                           
  3173  0021                     isdigit@c:	
  3174                           ; 1 bytes @ 0x1
  3175                           
  3176  0021                     PROTOCOL_Initialize@device_id:	
  3177                           ; 1 bytes @ 0x1
  3178                           
  3179                           
  3180                           ; 2 bytes @ 0x1
  3181  0021                     	ds	1
  3182  0022                     ??_I2C1_MasterTRBInsert:	
  3183  0022                     ??_PROTOCOL_Set_Extension_Handler:	
  3184                           ; 1 bytes @ 0x2
  3185                           
  3186  0022                     ?_putch:	
  3187                           ; 1 bytes @ 0x2
  3188                           
  3189  0022                     ??_concat:	
  3190                           ; 1 bytes @ 0x2
  3191                           
  3192  0022                     I2C1_MasterReadTRBBuild@length:	
  3193                           ; 1 bytes @ 0x2
  3194                           
  3195  0022                     DATAEE_WriteByte@GIEBitValue:	
  3196                           ; 1 bytes @ 0x2
  3197                           
  3198  0022                     putch@txData:	
  3199                           ; 1 bytes @ 0x2
  3200                           
  3201  0022                     I2C1_MasterWriteTRBBuild@address:	
  3202                           ; 1 bytes @ 0x2
  3203                           
  3204  0022                     ___wmul@multiplicand:	
  3205                           ; 2 bytes @ 0x2
  3206                           
  3207  0022                     ___awmod@dividend:	
  3208                           ; 2 bytes @ 0x2
  3209                           
  3210  0022                     ___lwdiv@dividend:	
  3211                           ; 2 bytes @ 0x2
  3212                           
  3213  0022                     strncmp@s2:	
  3214                           ; 2 bytes @ 0x2
  3215                           
  3216                           
  3217                           ; 2 bytes @ 0x2
  3218  0022                     	ds	1
  3219  0023                     ??_putch:	
  3220  0023                     ??_PROTOCOL_Write_Device_Address:	
  3221                           ; 1 bytes @ 0x3
  3222                           
  3223  0023                     ??_PROTOCOL_SAV:	
  3224                           ; 1 bytes @ 0x3
  3225                           
  3226  0023                     I2C1_MasterTRBInsert@count:	
  3227                           ; 1 bytes @ 0x3
  3228                           
  3229  0023                     ___ftpack@exp:	
  3230                           ; 1 bytes @ 0x3
  3231                           
  3232  0023                     I2C1_MasterReadTRBBuild@address:	
  3233                           ; 1 bytes @ 0x3
  3234                           
  3235  0023                     PROTOCOL_Initialize@start_handler:	
  3236                           ; 2 bytes @ 0x3
  3237                           
  3238                           
  3239                           ; 2 bytes @ 0x3
  3240  0023                     	ds	1
  3241  0024                     ??_I2C1_MasterWriteTRBBuild:	
  3242  0024                     ??___wmul:	
  3243                           ; 1 bytes @ 0x4
  3244                           
  3245  0024                     ??___awmod:	
  3246                           ; 1 bytes @ 0x4
  3247                           
  3248  0024                     ??___lwdiv:	
  3249                           ; 1 bytes @ 0x4
  3250                           
  3251  0024                     PROTOCOL_Write_Device_Address@device_id_i2c:	
  3252                           ; 1 bytes @ 0x4
  3253                           
  3254  0024                     ___ftpack@sign:	
  3255                           ; 1 bytes @ 0x4
  3256                           
  3257  0024                     ___wmul@product:	
  3258                           ; 1 bytes @ 0x4
  3259                           
  3260  0024                     strncmp@len:	
  3261                           ; 2 bytes @ 0x4
  3262                           
  3263                           
  3264                           ; 2 bytes @ 0x4
  3265  0024                     	ds	1
  3266  0025                     ??_I2C1_MasterReadTRBBuild:	
  3267  0025                     ??___ftpack:	
  3268                           ; 1 bytes @ 0x5
  3269                           
  3270  0025                     ___awmod@counter:	
  3271                           ; 1 bytes @ 0x5
  3272                           
  3273  0025                     PROTOCOL_Initialize@stop_handler:	
  3274                           ; 1 bytes @ 0x5
  3275                           
  3276  0025                     ___lwdiv@quotient:	
  3277                           ; 2 bytes @ 0x5
  3278                           
  3279                           
  3280                           ; 2 bytes @ 0x5
  3281  0025                     	ds	1
  3282  0026                     ??_strncmp:	
  3283  0026                     ?_atoi:	
  3284                           ; 1 bytes @ 0x6
  3285                           
  3286  0026                     ?_strcpy:	
  3287                           ; 2 bytes @ 0x6
  3288                           
  3289  0026                     I2C1_MasterWriteTRBBuild@ptrb:	
  3290                           ; 2 bytes @ 0x6
  3291                           
  3292  0026                     dev_map_iterator@exist:	
  3293                           ; 1 bytes @ 0x6
  3294                           
  3295  0026                     ___awmod@sign:	
  3296                           ; 1 bytes @ 0x6
  3297                           
  3298  0026                     atoi@s:	
  3299                           ; 1 bytes @ 0x6
  3300                           
  3301  0026                     strcpy@to:	
  3302                           ; 2 bytes @ 0x6
  3303                           
  3304                           
  3305                           ; 2 bytes @ 0x6
  3306  0026                     	ds	1
  3307  0027                     ?_I2C1_MasterWrite:	
  3308  0027                     ?_abs:	
  3309                           ; 1 bytes @ 0x7
  3310                           
  3311  0027                     I2C1_MasterWrite@length:	
  3312                           ; 2 bytes @ 0x7
  3313                           
  3314  0027                     I2C1_MasterReadTRBBuild@ptrb:	
  3315                           ; 1 bytes @ 0x7
  3316                           
  3317  0027                     dev_map_iterator@dev_addr:	
  3318                           ; 1 bytes @ 0x7
  3319                           
  3320  0027                     PROTOCOL_Initialize@set_handler:	
  3321                           ; 1 bytes @ 0x7
  3322                           
  3323  0027                     concat@msb:	
  3324                           ; 1 bytes @ 0x7
  3325                           
  3326  0027                     ___lwdiv@counter:	
  3327                           ; 1 bytes @ 0x7
  3328                           
  3329  0027                     abs@a:	
  3330                           ; 1 bytes @ 0x7
  3331                           
  3332                           
  3333                           ; 2 bytes @ 0x7
  3334  0027                     	ds	1
  3335  0028                     ??_atoi:	
  3336  0028                     ?_I2C1_MasterRead:	
  3337                           ; 1 bytes @ 0x8
  3338                           
  3339  0028                     ?___lwmod:	
  3340                           ; 1 bytes @ 0x8
  3341                           
  3342  0028                     ?___lbtoft:	
  3343                           ; 2 bytes @ 0x8
  3344                           
  3345  0028                     I2C1_MasterWrite@address:	
  3346                           ; 3 bytes @ 0x8
  3347                           
  3348  0028                     I2C1_MasterRead@pdata:	
  3349                           ; 2 bytes @ 0x8
  3350                           
  3351  0028                     PROTOCOL_Initialize@inv_handler:	
  3352                           ; 2 bytes @ 0x8
  3353                           
  3354  0028                     ___lwmod@divisor:	
  3355                           ; 2 bytes @ 0x8
  3356                           
  3357  0028                     strcpy@from:	
  3358                           ; 2 bytes @ 0x8
  3359                           
  3360                           
  3361                           ; 2 bytes @ 0x8
  3362  0028                     	ds	1
  3363  0029                     ??_abs:	
  3364                           
  3365                           ; 1 bytes @ 0x9
  3366  0029                     	ds	1
  3367  002A                     ??_strcpy:	
  3368  002A                     I2C1_MasterWrite@pflag:	
  3369                           ; 1 bytes @ 0xA
  3370                           
  3371  002A                     I2C1_MasterRead@length:	
  3372                           ; 1 bytes @ 0xA
  3373                           
  3374  002A                     PROTOCOL_Initialize@scaler:	
  3375                           ; 1 bytes @ 0xA
  3376                           
  3377  002A                     atoi@sign:	
  3378                           ; 1 bytes @ 0xA
  3379                           
  3380  002A                     ___lwmod@dividend:	
  3381                           ; 1 bytes @ 0xA
  3382                           
  3383  002A                     strcpy@cp:	
  3384                           ; 2 bytes @ 0xA
  3385                           
  3386                           
  3387                           ; 2 bytes @ 0xA
  3388  002A                     	ds	1
  3389  002B                     ??_PROTOCOL_Initialize:	
  3390  002B                     ??_I2C1_MasterWrite:	
  3391                           ; 1 bytes @ 0xB
  3392                           
  3393  002B                     ??___lbtoft:	
  3394                           ; 1 bytes @ 0xB
  3395                           
  3396  002B                     ?___awdiv:	
  3397                           ; 1 bytes @ 0xB
  3398                           
  3399  002B                     I2C1_MasterRead@address:	
  3400                           ; 2 bytes @ 0xB
  3401                           
  3402  002B                     atoi@a:	
  3403                           ; 2 bytes @ 0xB
  3404                           
  3405  002B                     ___awdiv@divisor:	
  3406                           ; 2 bytes @ 0xB
  3407                           
  3408                           
  3409                           ; 2 bytes @ 0xB
  3410  002B                     	ds	1
  3411  002C                     ?_put_cmd:	
  3412  002C                     ??___lwmod:	
  3413                           ; 1 bytes @ 0xC
  3414                           
  3415  002C                     put_cmd@buf:	
  3416                           ; 1 bytes @ 0xC
  3417                           
  3418                           
  3419                           ; 2 bytes @ 0xC
  3420  002C                     	ds	1
  3421  002D                     I2C1_MasterWrite@pdata:	
  3422  002D                     I2C1_MasterRead@pflag:	
  3423                           ; 1 bytes @ 0xD
  3424                           
  3425  002D                     ___lwmod@counter:	
  3426                           ; 1 bytes @ 0xD
  3427                           
  3428  002D                     ___awdiv@dividend:	
  3429                           ; 1 bytes @ 0xD
  3430                           
  3431                           
  3432                           ; 2 bytes @ 0xD
  3433  002D                     	ds	1
  3434  002E                     ?_i2c1_write_no_data:	
  3435  002E                     ?_i2c1_write:	
  3436                           ; 1 bytes @ 0xE
  3437                           
  3438  002E                     ??_I2C1_MasterRead:	
  3439                           ; 1 bytes @ 0xE
  3440                           
  3441  002E                     ??_put_cmd:	
  3442                           ; 1 bytes @ 0xE
  3443                           
  3444  002E                     ?__doprnt:	
  3445                           ; 1 bytes @ 0xE
  3446                           
  3447  002E                     i2c1_write@dev_addr:	
  3448                           ; 2 bytes @ 0xE
  3449                           
  3450  002E                     i2c1_write_no_data@dev_addr:	
  3451                           ; 2 bytes @ 0xE
  3452                           
  3453  002E                     __doprnt@f:	
  3454                           ; 2 bytes @ 0xE
  3455                           
  3456                           
  3457                           ; 2 bytes @ 0xE
  3458  002E                     	ds	1
  3459  002F                     ??___awdiv:	
  3460  002F                     ___lbtoft@c:	
  3461                           ; 1 bytes @ 0xF
  3462                           
  3463                           
  3464                           ; 1 bytes @ 0xF
  3465  002F                     	ds	1
  3466  0030                     ?_i2c1_read:	
  3467  0030                     ?___ftmul:	
  3468                           ; 1 bytes @ 0x10
  3469                           
  3470  0030                     i2c1_write@pbuf:	
  3471                           ; 3 bytes @ 0x10
  3472                           
  3473  0030                     i2c1_write_no_data@reg_addr:	
  3474                           ; 1 bytes @ 0x10
  3475                           
  3476  0030                     __doprnt@ap:	
  3477                           ; 1 bytes @ 0x10
  3478                           
  3479  0030                     ___awdiv@counter:	
  3480                           ; 1 bytes @ 0x10
  3481                           
  3482  0030                     i2c1_read@dev_addr:	
  3483                           ; 1 bytes @ 0x10
  3484                           
  3485  0030                     ___ftmul@f1:	
  3486                           ; 2 bytes @ 0x10
  3487                           
  3488                           
  3489                           ; 3 bytes @ 0x10
  3490  0030                     	ds	1
  3491  0031                     ??_i2c1_write_no_data:	
  3492  0031                     ??__doprnt:	
  3493                           ; 1 bytes @ 0x11
  3494                           
  3495  0031                     i2c1_write@len:	
  3496                           ; 1 bytes @ 0x11
  3497                           
  3498  0031                     ___awdiv@sign:	
  3499                           ; 1 bytes @ 0x11
  3500                           
  3501                           
  3502                           ; 1 bytes @ 0x11
  3503  0031                     	ds	1
  3504  0032                     ??_i2c1_write:	
  3505  0032                     i2c1_read@reg_addr:	
  3506                           ; 1 bytes @ 0x12
  3507                           
  3508  0032                     i2c1_write_no_data@write_status:	
  3509                           ; 1 bytes @ 0x12
  3510                           
  3511  0032                     ___awdiv@quotient:	
  3512                           ; 1 bytes @ 0x12
  3513                           
  3514                           
  3515                           ; 2 bytes @ 0x12
  3516  0032                     	ds	1
  3517  0033                     i2c1_write_no_data@buf:	
  3518  0033                     i2c1_read@pbuf:	
  3519                           ; 1 bytes @ 0x13
  3520                           
  3521  0033                     ___ftmul@f2:	
  3522                           ; 2 bytes @ 0x13
  3523                           
  3524                           
  3525                           ; 3 bytes @ 0x13
  3526  0033                     	ds	1
  3527  0034                     ??_init:	
  3528  0034                     ??_add_dev:	
  3529                           ; 1 bytes @ 0x14
  3530                           
  3531  0034                     ??_del_dev:	
  3532                           ; 1 bytes @ 0x14
  3533                           
  3534  0034                     ??_detected:	
  3535                           ; 1 bytes @ 0x14
  3536                           
  3537  0034                     i2c1_write@write_status:	
  3538                           ; 1 bytes @ 0x14
  3539                           
  3540  0034                     i2c1_write_no_data@status:	
  3541                           ; 1 bytes @ 0x14
  3542                           
  3543                           
  3544                           ; 1 bytes @ 0x14
  3545  0034                     	ds	1
  3546  0035                     i2c1_write@status:	
  3547  0035                     i2c1_read@len:	
  3548                           ; 1 bytes @ 0x15
  3549                           
  3550  0035                     __doprnt@prec:	
  3551                           ; 1 bytes @ 0x15
  3552                           
  3553                           
  3554                           ; 1 bytes @ 0x15
  3555  0035                     	ds	1
  3556  0036                     ??_i2c1_read:	
  3557  0036                     ??___ftmul:	
  3558                           ; 1 bytes @ 0x16
  3559                           
  3560  0036                     __doprnt@val:	
  3561                           ; 1 bytes @ 0x16
  3562                           
  3563                           
  3564                           ; 2 bytes @ 0x16
  3565  0036                     	ds	1
  3566  0037                     add_dev@x:	
  3567  0037                     del_dev@x:	
  3568                           ; 1 bytes @ 0x17
  3569                           
  3570  0037                     detected@y:	
  3571                           ; 1 bytes @ 0x17
  3572                           
  3573                           
  3574                           ; 1 bytes @ 0x17
  3575  0037                     	ds	1
  3576  0038                     add_dev@old_map:	
  3577  0038                     del_dev@old_map:	
  3578                           ; 1 bytes @ 0x18
  3579                           
  3580  0038                     detected@x:	
  3581                           ; 1 bytes @ 0x18
  3582                           
  3583  0038                     i2c1_read@read_status:	
  3584                           ; 1 bytes @ 0x18
  3585                           
  3586  0038                     __doprnt@len:	
  3587                           ; 1 bytes @ 0x18
  3588                           
  3589                           
  3590                           ; 2 bytes @ 0x18
  3591  0038                     	ds	1
  3592  0039                     add_dev@new_map:	
  3593  0039                     del_dev@new_map:	
  3594                           ; 1 bytes @ 0x19
  3595                           
  3596  0039                     detected@exist:	
  3597                           ; 1 bytes @ 0x19
  3598                           
  3599  0039                     i2c1_read@reg:	
  3600                           ; 1 bytes @ 0x19
  3601                           
  3602                           
  3603                           ; 1 bytes @ 0x19
  3604  0039                     	ds	1
  3605  003A                     init@dev_addr:	
  3606  003A                     add_dev@y:	
  3607                           ; 1 bytes @ 0x1A
  3608                           
  3609  003A                     del_dev@y:	
  3610                           ; 1 bytes @ 0x1A
  3611                           
  3612  003A                     detected@dev_addr:	
  3613                           ; 1 bytes @ 0x1A
  3614                           
  3615  003A                     i2c1_read@status:	
  3616                           ; 1 bytes @ 0x1A
  3617                           
  3618  003A                     ___ftmul@exp:	
  3619                           ; 1 bytes @ 0x1A
  3620                           
  3621  003A                     __doprnt@cp:	
  3622                           ; 1 bytes @ 0x1A
  3623                           
  3624                           
  3625                           ; 2 bytes @ 0x1A
  3626  003A                     	ds	1
  3627  003B                     init@y:	
  3628  003B                     add_dev@dev_addr:	
  3629                           ; 1 bytes @ 0x1B
  3630                           
  3631  003B                     del_dev@dev_addr:	
  3632                           ; 1 bytes @ 0x1B
  3633                           
  3634  003B                     ___ftmul@f3_as_product:	
  3635                           ; 1 bytes @ 0x1B
  3636                           
  3637                           
  3638                           ; 3 bytes @ 0x1B
  3639  003B                     	ds	1
  3640  003C                     ??_scan_dev:	
  3641  003C                     init@i:	
  3642                           ; 1 bytes @ 0x1C
  3643                           
  3644  003C                     __doprnt@flag:	
  3645                           ; 1 bytes @ 0x1C
  3646                           
  3647                           
  3648                           ; 1 bytes @ 0x1C
  3649  003C                     	ds	1
  3650  003D                     __doprnt@width:	
  3651                           
  3652                           ; 2 bytes @ 0x1D
  3653  003D                     	ds	1
  3654  003E                     ___ftmul@cntr:	
  3655                           
  3656                           ; 1 bytes @ 0x1E
  3657  003E                     	ds	1
  3658  003F                     scan_dev@status:	
  3659  003F                     __doprnt@c:	
  3660                           ; 1 bytes @ 0x1F
  3661                           
  3662  003F                     ___ftmul@sign:	
  3663                           ; 1 bytes @ 0x1F
  3664                           
  3665                           
  3666                           ; 1 bytes @ 0x1F
  3667  003F                     	ds	1
  3668  0040                     ?___fttol:	
  3669  0040                     scan_dev@dev_addr:	
  3670                           ; 4 bytes @ 0x20
  3671                           
  3672  0040                     __doprnt@pb:	
  3673                           ; 1 bytes @ 0x20
  3674                           
  3675  0040                     ___fttol@f1:	
  3676                           ; 1 bytes @ 0x20
  3677                           
  3678                           
  3679                           ; 3 bytes @ 0x20
  3680  0040                     	ds	1
  3681  0041                     ??_check_plg:	
  3682  0041                     ?_printf:	
  3683                           ; 1 bytes @ 0x21
  3684                           
  3685  0041                     ?_sprintf:	
  3686                           ; 2 bytes @ 0x21
  3687                           
  3688  0041                     printf@f:	
  3689                           ; 2 bytes @ 0x21
  3690                           
  3691  0041                     sprintf@f:	
  3692                           ; 2 bytes @ 0x21
  3693                           
  3694                           
  3695                           ; 2 bytes @ 0x21
  3696  0041                     	ds	2
  3697  0043                     check_plg@status:	
  3698                           
  3699                           ; 1 bytes @ 0x23
  3700  0043                     	ds	1
  3701  0044                     ??___fttol:	
  3702                           
  3703                           ; 1 bytes @ 0x24
  3704  0044                     	ds	3
  3705  0047                     ??_printf:	
  3706                           
  3707                           ; 1 bytes @ 0x27
  3708  0047                     	ds	1
  3709  0048                     ___fttol@sign1:	
  3710  0048                     printf@ap:	
  3711                           ; 1 bytes @ 0x28
  3712                           
  3713                           
  3714                           ; 1 bytes @ 0x28
  3715  0048                     	ds	1
  3716  0049                     printf@pb:	
  3717  0049                     ___fttol@lval:	
  3718                           ; 3 bytes @ 0x29
  3719                           
  3720                           
  3721                           ; 4 bytes @ 0x29
  3722  0049                     	ds	3
  3723  004C                     ?_PROTOCOL_Print_TLV:	
  3724  004C                     ??_exec_remote_cmd:	
  3725                           ; 1 bytes @ 0x2C
  3726                           
  3727  004C                     ??_print_dev_map:	
  3728                           ; 1 bytes @ 0x2C
  3729                           
  3730  004C                     PROTOCOL_Print_TLV@type:	
  3731                           ; 1 bytes @ 0x2C
  3732                           
  3733                           
  3734                           ; 1 bytes @ 0x2C
  3735  004C                     	ds	1
  3736  004D                     PROTOCOL_Print_TLV@length:	
  3737  004D                     ___fttol@exp1:	
  3738                           ; 1 bytes @ 0x2D
  3739                           
  3740                           
  3741                           ; 1 bytes @ 0x2D
  3742  004D                     	ds	1
  3743  004E                     print_dev_map@i:	
  3744  004E                     PROTOCOL_Print_TLV@pbuffer:	
  3745                           ; 1 bytes @ 0x2E
  3746                           
  3747                           
  3748                           ; 1 bytes @ 0x2E
  3749  004E                     	ds	1
  3750  004F                     ??_PROTOCOL_Print_TLV:	
  3751  004F                     ??_sprintf:	
  3752                           ; 1 bytes @ 0x2F
  3753                           
  3754  004F                     print_dev_map@len:	
  3755                           ; 1 bytes @ 0x2F
  3756                           
  3757                           
  3758                           ; 1 bytes @ 0x2F
  3759  004F                     	ds	1
  3760  0050                     ?_command_handler:	
  3761  0050                     sprintf@wh:	
  3762                           ; 1 bytes @ 0x30
  3763                           
  3764  0050                     command_handler@buf:	
  3765                           ; 1 bytes @ 0x30
  3766                           
  3767                           
  3768                           ; 2 bytes @ 0x30
  3769  0050                     	ds	1
  3770  0051                     sprintf@ap:	
  3771                           
  3772                           ; 1 bytes @ 0x31
  3773  0051                     	ds	1
  3774  0052                     ??_command_handler:	
  3775  0052                     PROTOCOL_Print_TLV@dev_addr:	
  3776                           ; 1 bytes @ 0x32
  3777                           
  3778  0052                     sprintf@pb:	
  3779                           ; 1 bytes @ 0x32
  3780                           
  3781                           
  3782                           ; 3 bytes @ 0x32
  3783  0052                     	ds	1
  3784  0053                     PROTOCOL_Print_TLV@v:	
  3785                           
  3786                           ; 2 bytes @ 0x33
  3787  0053                     	ds	6
  3788  0059                     command_handler@dev_addr:	
  3789                           
  3790                           ; 1 bytes @ 0x39
  3791  0059                     	ds	1
  3792  005A                     command_handler@i:	
  3793                           
  3794                           ; 1 bytes @ 0x3A
  3795  005A                     	ds	1
  3796  005B                     ?_edge_meter:	
  3797  005B                     ??_PROTOCOL_EXT:	
  3798                           ; 1 bytes @ 0x3B
  3799                           
  3800  005B                     edge_meter@dev_addr:	
  3801                           ; 1 bytes @ 0x3B
  3802                           
  3803  005B                     PROTOCOL_EXT@char_buf:	
  3804                           ; 1 bytes @ 0x3B
  3805                           
  3806                           
  3807                           ; 1 bytes @ 0x3B
  3808  005B                     	ds	1
  3809  005C                     edge_meter@type:	
  3810                           
  3811                           ; 1 bytes @ 0x3C
  3812  005C                     	ds	1
  3813  005D                     edge_meter@length:	
  3814                           
  3815                           ; 1 bytes @ 0x3D
  3816  005D                     	ds	1
  3817  005E                     edge_meter@pbuf:	
  3818                           
  3819                           ; 1 bytes @ 0x3E
  3820  005E                     	ds	1
  3821  005F                     ??_edge_meter:	
  3822                           
  3823                           ; 1 bytes @ 0x3F
  3824  005F                     	ds	5
  3825  0064                     ??_sen:	
  3826                           
  3827                           ; 1 bytes @ 0x44
  3828  0064                     	ds	5
  3829  0069                     sen@type:	
  3830                           
  3831                           ; 1 bytes @ 0x49
  3832  0069                     	ds	1
  3833  006A                     sen@length:	
  3834                           
  3835                           ; 1 bytes @ 0x4A
  3836  006A                     	ds	1
  3837  006B                     sen@status:	
  3838                           
  3839                           ; 1 bytes @ 0x4B
  3840  006B                     	ds	1
  3841  006C                     sen@dev_addr:	
  3842                           
  3843                           ; 1 bytes @ 0x4C
  3844  006C                     	ds	1
  3845  006D                     ??_fetch:	
  3846                           
  3847                           ; 1 bytes @ 0x4D
  3848  006D                     	ds	3
  3849  0070                     ??_main:	
  3850                           
  3851                           	psect	maintext
  3852  1D53                     __pmaintext:	
  3853                           ; 1 bytes @ 0x50
  3854 ;;
  3855 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  3856 ;;
  3857 ;; *************** function _main *****************
  3858 ;; Defined at:
  3859 ;;		line 448 in file "main.c"
  3860 ;; Parameters:    Size  Location     Type
  3861 ;;		None
  3862 ;; Auto vars:     Size  Location     Type
  3863 ;;		None
  3864 ;; Return value:  Size  Location     Type
  3865 ;;                  1    wreg      void 
  3866 ;; Registers used:
  3867 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3868 ;; Tracked objects:
  3869 ;;		On entry : B1F/0
  3870 ;;		On exit  : 0/0
  3871 ;;		Unchanged: 0/0
  3872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3876 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3877 ;;Total ram usage:        0 bytes
  3878 ;; Hardware stack levels required when called:   14
  3879 ;; This function calls:
  3880 ;;		_PROTOCOL_Initialize
  3881 ;;		_PROTOCOL_Loop
  3882 ;;		_PROTOCOL_Set_Extension_Handler
  3883 ;;		_SYSTEM_Initialize
  3884 ;;		_init
  3885 ;; This function is called by:
  3886 ;;		Startup code after reset
  3887 ;; This function uses a non-reentrant model
  3888 ;;
  3889                           
  3890                           
  3891                           ;psect for function _main
  3892  1D53                     _main:	
  3893                           
  3894                           ;main.c: 450: init();
  3895                           
  3896                           ;incstack = 0
  3897                           ; Regs used in _main: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3898  1D53  3194  24C2  319D   	fcall	_init
  3899                           
  3900                           ;main.c: 452: SYSTEM_Initialize();
  3901  1D56  319A  22CE  319D   	fcall	_SYSTEM_Initialize
  3902                           
  3903                           ;main.c: 453: (INTCONbits.GIE = 1);
  3904  1D59  178B               	bsf	11,7	;volatile
  3905                           
  3906                           ;main.c: 454: (INTCONbits.PEIE = 1);
  3907  1D5A  170B               	bsf	11,6	;volatile
  3908                           
  3909                           ;main.c: 456: PROTOCOL_Initialize("BACKPLANE-MASTER", start_handler, stop_handler, (0), 
      +                          inv_handler, 1);
  3910  1D5B  30F3               	movlw	low (STR_40| (0+32768))
  3911  1D5C  0020               	movlb	0	; select bank0
  3912  1D5D  00A1               	movwf	PROTOCOL_Initialize@device_id
  3913  1D5E  3090               	movlw	high (STR_40| (0+32768))
  3914  1D5F  00A2               	movwf	PROTOCOL_Initialize@device_id+1
  3915  1D60  300C               	movlw	low _start_handler
  3916  1D61  00A3               	movwf	PROTOCOL_Initialize@start_handler
  3917  1D62  301A               	movlw	high _start_handler
  3918  1D63  00A4               	movwf	PROTOCOL_Initialize@start_handler+1
  3919  1D64  3006               	movlw	low _stop_handler
  3920  1D65  00A5               	movwf	PROTOCOL_Initialize@stop_handler
  3921  1D66  301A               	movlw	high _stop_handler
  3922  1D67  00A6               	movwf	PROTOCOL_Initialize@stop_handler+1
  3923  1D68  01A7               	clrf	PROTOCOL_Initialize@set_handler
  3924  1D69  3077               	movlw	low _inv_handler
  3925  1D6A  00A8               	movwf	PROTOCOL_Initialize@inv_handler
  3926  1D6B  3016               	movlw	high _inv_handler
  3927  1D6C  00A9               	movwf	PROTOCOL_Initialize@inv_handler+1
  3928  1D6D  01AA               	clrf	PROTOCOL_Initialize@scaler
  3929  1D6E  0AAA               	incf	PROTOCOL_Initialize@scaler,f
  3930  1D6F  3192  223C  319D   	fcall	_PROTOCOL_Initialize
  3931                           
  3932                           ;main.c: 457: PROTOCOL_Set_Extension_Handler(command_handler);
  3933  1D72  3082               	movlw	low _command_handler
  3934  1D73  0020               	movlb	0	; select bank0
  3935  1D74  00A0               	movwf	PROTOCOL_Set_Extension_Handler@extension_handler
  3936  1D75  300B               	movlw	high _command_handler
  3937  1D76  00A1               	movwf	PROTOCOL_Set_Extension_Handler@extension_handler+1
  3938  1D77  319A  222B  319D   	fcall	_PROTOCOL_Set_Extension_Handler
  3939                           
  3940                           ;main.c: 458: PROTOCOL_Loop();
  3941  1D7A  3186  2628         	fcall	_PROTOCOL_Loop
  3942  1D7C  3180  283C         	ljmp	start
  3943  1D7E                     __end_of_main:	
  3944                           
  3945                           	psect	text1
  3946  14C2                     __ptext1:	
  3947 ;; *************** function _init *****************
  3948 ;; Defined at:
  3949 ;;		line 115 in file "main.c"
  3950 ;; Parameters:    Size  Location     Type
  3951 ;;		None
  3952 ;; Auto vars:     Size  Location     Type
  3953 ;;  i               1   28[BANK0 ] unsigned char 
  3954 ;;  y               1   27[BANK0 ] unsigned char 
  3955 ;;  dev_addr        1   26[BANK0 ] unsigned char 
  3956 ;;  k               1    0        unsigned char 
  3957 ;;  j               1    0        unsigned char 
  3958 ;; Return value:  Size  Location     Type
  3959 ;;                  1    wreg      void 
  3960 ;; Registers used:
  3961 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  3962 ;; Tracked objects:
  3963 ;;		On entry : 0/0
  3964 ;;		On exit  : 0/0
  3965 ;;		Unchanged: 0/0
  3966 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  3967 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3968 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3969 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3970 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  3971 ;;Total ram usage:        9 bytes
  3972 ;; Hardware stack levels used:    1
  3973 ;; Hardware stack levels required when called:    4
  3974 ;; This function calls:
  3975 ;;		_DATAEE_ReadByte
  3976 ;;		___awdiv
  3977 ;;		___wmul
  3978 ;; This function is called by:
  3979 ;;		_main
  3980 ;; This function uses a non-reentrant model
  3981 ;;
  3982                           
  3983                           
  3984                           ;psect for function _init
  3985  14C2                     _init:	
  3986                           
  3987                           ;main.c: 116: uint8_t y, i, j, k, dev_addr;
  3988                           ;main.c: 119: for (y=0; y<MAX_Y; y++) {
  3989                           
  3990                           ;incstack = 0
  3991                           ; Regs used in _init: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  3992  14C2  0020               	movlb	0	; select bank0
  3993  14C3  01BB               	clrf	init@y
  3994  14C4  300A               	movlw	low (_MAX_Y| (0+32768))
  3995  14C5  0084               	movwf	4
  3996  14C6  3090               	movlw	high (_MAX_Y| (0+32768))
  3997  14C7  0085               	movwf	5
  3998  14C8  0800               	movf	0,w	;code access
  3999  14C9  023B               	subwf	init@y,w
  4000  14CA  1803               	btfsc	3,0
  4001  14CB  2CDE               	goto	l5063
  4002  14CC                     l5057:	
  4003                           
  4004                           ;main.c: 120: dev_map[y] = 0;
  4005  14CC  083B               	movf	init@y,w
  4006  14CD  3E25               	addlw	(low (_dev_map| (0+256)))& (0+255)
  4007  14CE  0086               	movwf	6
  4008  14CF  3001               	movlw	1	; select bank2/3
  4009  14D0  0087               	movwf	7
  4010  14D1  0181               	clrf	1
  4011  14D2  3001               	movlw	1
  4012  14D3  00B4               	movwf	??_init
  4013  14D4  0834               	movf	??_init,w
  4014  14D5  07BB               	addwf	init@y,f
  4015  14D6  300A               	movlw	low (_MAX_Y| (0+32768))
  4016  14D7  0084               	movwf	4
  4017  14D8  3090               	movlw	high (_MAX_Y| (0+32768))
  4018  14D9  0085               	movwf	5
  4019  14DA  0800               	movf	0,w	;code access
  4020  14DB  023B               	subwf	init@y,w
  4021  14DC  1C03               	skipc
  4022  14DD  2CCC               	goto	l5057
  4023  14DE                     l5063:	
  4024                           
  4025                           ;main.c: 121: }
  4026                           ;main.c: 124: for (i=0; i<4; i++) cmd_buf[i][0] = '\0';
  4027  14DE  01BC               	clrf	init@i
  4028  14DF  3004               	movlw	4
  4029  14E0  023C               	subwf	init@i,w
  4030  14E1  1803               	btfsc	3,0
  4031  14E2  2D05               	goto	l5075
  4032  14E3                     l5069:	
  4033  14E3  083C               	movf	init@i,w
  4034  14E4  00B4               	movwf	??_init
  4035  14E5  01B5               	clrf	??_init+1
  4036  14E6  0834               	movf	??_init,w
  4037  14E7  00A0               	movwf	___wmul@multiplier
  4038  14E8  0835               	movf	??_init+1,w
  4039  14E9  00A1               	movwf	___wmul@multiplier+1
  4040  14EA  3030               	movlw	48
  4041  14EB  00A2               	movwf	___wmul@multiplicand
  4042  14EC  3000               	movlw	0
  4043  14ED  00A3               	movwf	___wmul@multiplicand+1
  4044  14EE  319B  238B  3194   	fcall	___wmul
  4045  14F1  3030               	movlw	48
  4046  14F2  0020               	movlb	0	; select bank0
  4047  14F3  00B6               	movwf	??_init+2
  4048  14F4  3023               	movlw	35
  4049  14F5  00B7               	movwf	??_init+3
  4050  14F6  0820               	movf	?___wmul,w
  4051  14F7  0736               	addwf	??_init+2,w
  4052  14F8  0086               	movwf	6
  4053  14F9  0821               	movf	?___wmul+1,w
  4054  14FA  3D37               	addwfc	??_init+3,w
  4055  14FB  0087               	movwf	7
  4056  14FC  0181               	clrf	1
  4057  14FD  3001               	movlw	1
  4058  14FE  00B4               	movwf	??_init
  4059  14FF  0834               	movf	??_init,w
  4060  1500  07BC               	addwf	init@i,f
  4061  1501  3004               	movlw	4
  4062  1502  023C               	subwf	init@i,w
  4063  1503  1C03               	skipc
  4064  1504  2CE3               	goto	l5069
  4065  1505                     l5075:	
  4066                           
  4067                           ;main.c: 127: for (i=0; i<28; i++) {
  4068  1505  01BC               	clrf	init@i
  4069  1506                     L1:	
  4070  1506  301C               	movlw	28
  4071  1507  023C               	subwf	init@i,w
  4072  1508  1803               	btfsc	3,0
  4073  1509  0008               	return
  4074                           
  4075                           ;main.c: 128: dev_addr = DATAEE_ReadByte(1+i+1);
  4076  150A  083C               	movf	init@i,w
  4077  150B  3E02               	addlw	2
  4078  150C  319A  2255  3194   	fcall	_DATAEE_ReadByte
  4079  150F  0020               	movlb	0	; select bank0
  4080  1510  00B4               	movwf	??_init
  4081  1511  0834               	movf	??_init,w
  4082  1512  00BA               	movwf	init@dev_addr
  4083                           
  4084                           ;main.c: 129: schedule[i/4][i%4] = dev_addr;
  4085  1513  083A               	movf	init@dev_addr,w
  4086  1514  00B4               	movwf	??_init
  4087  1515  3004               	movlw	4
  4088  1516  00AB               	movwf	___awdiv@divisor
  4089  1517  3000               	movlw	0
  4090  1518  00AC               	movwf	___awdiv@divisor+1
  4091  1519  083C               	movf	init@i,w
  4092  151A  00B5               	movwf	??_init+1
  4093  151B  01B6               	clrf	??_init+2
  4094  151C  0835               	movf	??_init+1,w
  4095  151D  00AD               	movwf	___awdiv@dividend
  4096  151E  0836               	movf	??_init+2,w
  4097  151F  00AE               	movwf	___awdiv@dividend+1
  4098  1520  319F  27AE  3194   	fcall	___awdiv
  4099  1523  0020               	movlb	0	; select bank0
  4100  1524  082B               	movf	?___awdiv,w
  4101  1525  00B7               	movwf	??_init+3
  4102  1526  3002               	movlw	2
  4103  1527                     u5525:	
  4104  1527  35B7               	lslf	??_init+3,f
  4105  1528  0B89               	decfsz	9,f
  4106  1529  2D27               	goto	u5525
  4107  152A  30A0               	movlw	(low (_schedule| (0+256)))& (0+255)
  4108  152B  0737               	addwf	??_init+3,w
  4109  152C  00B8               	movwf	??_init+4
  4110  152D  083C               	movf	init@i,w
  4111  152E  3903               	andlw	3
  4112  152F  0738               	addwf	??_init+4,w
  4113  1530  00B9               	movwf	??_init+5
  4114  1531  0839               	movf	??_init+5,w
  4115  1532  0086               	movwf	6
  4116  1533  3001               	movlw	1	; select bank3/4
  4117  1534  0087               	movwf	7
  4118  1535  0834               	movf	??_init,w
  4119  1536  0081               	movwf	1
  4120  1537  3001               	movlw	1
  4121  1538  00B4               	movwf	??_init
  4122  1539  0834               	movf	??_init,w
  4123  153A  07BC               	addwf	init@i,f
  4124  153B  2D06               	goto	L1
  4125  153C                     __end_of_init:	
  4126                           
  4127                           	psect	text2
  4128  1ACE                     __ptext2:	
  4129 ;; *************** function _SYSTEM_Initialize *****************
  4130 ;; Defined at:
  4131 ;;		line 69 in file "mcc_generated_files/mcc.c"
  4132 ;; Parameters:    Size  Location     Type
  4133 ;;		None
  4134 ;; Auto vars:     Size  Location     Type
  4135 ;;		None
  4136 ;; Return value:  Size  Location     Type
  4137 ;;                  1    wreg      void 
  4138 ;; Registers used:
  4139 ;;		wreg, status,2, status,0, pclath, cstack
  4140 ;; Tracked objects:
  4141 ;;		On entry : 0/0
  4142 ;;		On exit  : 0/0
  4143 ;;		Unchanged: 0/0
  4144 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4145 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4146 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4147 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4148 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4149 ;;Total ram usage:        0 bytes
  4150 ;; Hardware stack levels used:    1
  4151 ;; Hardware stack levels required when called:    4
  4152 ;; This function calls:
  4153 ;;		_EUSART_Initialize
  4154 ;;		_I2C1_Initialize
  4155 ;;		_OSCILLATOR_Initialize
  4156 ;;		_PIN_MANAGER_Initialize
  4157 ;;		_TMR0_Initialize
  4158 ;;		_WDT_Initialize
  4159 ;; This function is called by:
  4160 ;;		_main
  4161 ;; This function uses a non-reentrant model
  4162 ;;
  4163                           
  4164                           
  4165                           ;psect for function _SYSTEM_Initialize
  4166  1ACE                     _SYSTEM_Initialize:	
  4167                           
  4168                           ;mcc.c: 72: PIN_MANAGER_Initialize();
  4169                           
  4170                           ;incstack = 0
  4171                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  4172  1ACE  319B  23FF  319A   	fcall	_PIN_MANAGER_Initialize
  4173                           
  4174                           ;mcc.c: 73: OSCILLATOR_Initialize();
  4175  1AD1  3188  2000  319A   	fcall	_OSCILLATOR_Initialize
  4176                           
  4177                           ;mcc.c: 74: WDT_Initialize();
  4178  1AD4  319A  2214  319A   	fcall	_WDT_Initialize
  4179                           
  4180                           ;mcc.c: 75: I2C1_Initialize();
  4181  1AD7  319B  23A7  319A   	fcall	_I2C1_Initialize
  4182                           
  4183                           ;mcc.c: 76: TMR0_Initialize();
  4184  1ADA  319A  223E  319A   	fcall	_TMR0_Initialize
  4185                           
  4186                           ;mcc.c: 77: EUSART_Initialize();
  4187  1ADD  319B  2354         	fcall	_EUSART_Initialize
  4188  1ADF  0008               	return
  4189  1AE0                     __end_of_SYSTEM_Initialize:	
  4190                           
  4191                           	psect	text3
  4192  1A14                     __ptext3:	
  4193 ;; *************** function _WDT_Initialize *****************
  4194 ;; Defined at:
  4195 ;;		line 92 in file "mcc_generated_files/mcc.c"
  4196 ;; Parameters:    Size  Location     Type
  4197 ;;		None
  4198 ;; Auto vars:     Size  Location     Type
  4199 ;;		None
  4200 ;; Return value:  Size  Location     Type
  4201 ;;                  1    wreg      void 
  4202 ;; Registers used:
  4203 ;;		wreg
  4204 ;; Tracked objects:
  4205 ;;		On entry : 0/0
  4206 ;;		On exit  : 0/0
  4207 ;;		Unchanged: 0/0
  4208 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4209 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4210 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4211 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4212 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4213 ;;Total ram usage:        0 bytes
  4214 ;; Hardware stack levels used:    1
  4215 ;; Hardware stack levels required when called:    3
  4216 ;; This function calls:
  4217 ;;		Nothing
  4218 ;; This function is called by:
  4219 ;;		_SYSTEM_Initialize
  4220 ;; This function uses a non-reentrant model
  4221 ;;
  4222                           
  4223                           
  4224                           ;psect for function _WDT_Initialize
  4225  1A14                     _WDT_Initialize:	
  4226                           
  4227                           ;mcc.c: 95: WDTCON = 0x16;
  4228                           
  4229                           ;incstack = 0
  4230                           ; Regs used in _WDT_Initialize: [wreg]
  4231  1A14  3016               	movlw	22
  4232  1A15  0021               	movlb	1	; select bank1
  4233  1A16  0097               	movwf	23	;volatile
  4234  1A17  0008               	return
  4235  1A18                     __end_of_WDT_Initialize:	
  4236                           
  4237                           	psect	text4
  4238  1A3E                     __ptext4:	
  4239 ;; *************** function _TMR0_Initialize *****************
  4240 ;; Defined at:
  4241 ;;		line 62 in file "mcc_generated_files/tmr0.c"
  4242 ;; Parameters:    Size  Location     Type
  4243 ;;		None
  4244 ;; Auto vars:     Size  Location     Type
  4245 ;;		None
  4246 ;; Return value:  Size  Location     Type
  4247 ;;                  1    wreg      void 
  4248 ;; Registers used:
  4249 ;;		wreg, status,2
  4250 ;; Tracked objects:
  4251 ;;		On entry : 0/0
  4252 ;;		On exit  : 0/0
  4253 ;;		Unchanged: 0/0
  4254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4258 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4259 ;;Total ram usage:        0 bytes
  4260 ;; Hardware stack levels used:    1
  4261 ;; Hardware stack levels required when called:    3
  4262 ;; This function calls:
  4263 ;;		Nothing
  4264 ;; This function is called by:
  4265 ;;		_SYSTEM_Initialize
  4266 ;; This function uses a non-reentrant model
  4267 ;;
  4268                           
  4269                           
  4270                           ;psect for function _TMR0_Initialize
  4271  1A3E                     _TMR0_Initialize:	
  4272                           
  4273                           ;tmr0.c: 67: OPTION_REG = (OPTION_REG & 0xC0) | 0xD7 & 0x3F;
  4274                           
  4275                           ;incstack = 0
  4276                           ; Regs used in _TMR0_Initialize: [wreg+status,2]
  4277  1A3E  0021               	movlb	1	; select bank1
  4278  1A3F  0815               	movf	21,w	;volatile
  4279  1A40  39C0               	andlw	192
  4280  1A41  3817               	iorlw	23
  4281  1A42  0095               	movwf	21	;volatile
  4282                           
  4283                           ;tmr0.c: 70: TMR0 = 0x00;
  4284  1A43  0020               	movlb	0	; select bank0
  4285  1A44  0195               	clrf	21	;volatile
  4286                           
  4287                           ;tmr0.c: 73: timer0ReloadVal= 0;
  4288  1A45  0022               	movlb	2	; select bank2
  4289  1A46  01D4               	clrf	_timer0ReloadVal^(0+256)	;volatile
  4290                           
  4291                           ;tmr0.c: 76: INTCONbits.TMR0IF = 0;
  4292  1A47  110B               	bcf	11,2	;volatile
  4293  1A48  0008               	return
  4294  1A49                     __end_of_TMR0_Initialize:	
  4295                           
  4296                           	psect	text5
  4297  1BFF                     __ptext5:	
  4298 ;; *************** function _PIN_MANAGER_Initialize *****************
  4299 ;; Defined at:
  4300 ;;		line 51 in file "mcc_generated_files/pin_manager.c"
  4301 ;; Parameters:    Size  Location     Type
  4302 ;;		None
  4303 ;; Auto vars:     Size  Location     Type
  4304 ;;		None
  4305 ;; Return value:  Size  Location     Type
  4306 ;;                  1    wreg      void 
  4307 ;; Registers used:
  4308 ;;		wreg, status,2
  4309 ;; Tracked objects:
  4310 ;;		On entry : 0/0
  4311 ;;		On exit  : 0/0
  4312 ;;		Unchanged: 0/0
  4313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4314 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4317 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4318 ;;Total ram usage:        0 bytes
  4319 ;; Hardware stack levels used:    1
  4320 ;; Hardware stack levels required when called:    3
  4321 ;; This function calls:
  4322 ;;		Nothing
  4323 ;; This function is called by:
  4324 ;;		_SYSTEM_Initialize
  4325 ;; This function uses a non-reentrant model
  4326 ;;
  4327                           
  4328                           
  4329                           ;psect for function _PIN_MANAGER_Initialize
  4330  1BFF                     _PIN_MANAGER_Initialize:	
  4331                           
  4332                           ;pin_manager.c: 56: LATA = 0x00;
  4333                           
  4334                           ;incstack = 0
  4335                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  4336  1BFF  0022               	movlb	2	; select bank2
  4337  1C00  018C               	clrf	12	;volatile
  4338                           
  4339                           ;pin_manager.c: 57: LATB = 0x00;
  4340  1C01  018D               	clrf	13	;volatile
  4341                           
  4342                           ;pin_manager.c: 58: LATC = 0x00;
  4343  1C02  018E               	clrf	14	;volatile
  4344                           
  4345                           ;pin_manager.c: 63: TRISA = 0x3F;
  4346  1C03  303F               	movlw	63
  4347  1C04  0021               	movlb	1	; select bank1
  4348  1C05  008C               	movwf	12	;volatile
  4349                           
  4350                           ;pin_manager.c: 64: TRISB = 0xF0;
  4351  1C06  30F0               	movlw	240
  4352  1C07  008D               	movwf	13	;volatile
  4353                           
  4354                           ;pin_manager.c: 65: TRISC = 0x7F;
  4355  1C08  307F               	movlw	127
  4356  1C09  008E               	movwf	14	;volatile
  4357                           
  4358                           ;pin_manager.c: 70: ANSELC = 0x4F;
  4359  1C0A  304F               	movlw	79
  4360  1C0B  0023               	movlb	3	; select bank3
  4361  1C0C  008E               	movwf	14	;volatile
  4362                           
  4363                           ;pin_manager.c: 71: ANSELB = 0x20;
  4364  1C0D  3020               	movlw	32
  4365  1C0E  008D               	movwf	13	;volatile
  4366                           
  4367                           ;pin_manager.c: 72: ANSELA = 0x17;
  4368  1C0F  3017               	movlw	23
  4369  1C10  008C               	movwf	12	;volatile
  4370                           
  4371                           ;pin_manager.c: 77: WPUB = 0x00;
  4372  1C11  0024               	movlb	4	; select bank4
  4373  1C12  018D               	clrf	13	;volatile
  4374                           
  4375                           ;pin_manager.c: 78: WPUA = 0x3F;
  4376  1C13  303F               	movlw	63
  4377  1C14  008C               	movwf	12	;volatile
  4378                           
  4379                           ;pin_manager.c: 79: WPUC = 0xBF;
  4380  1C15  30BF               	movlw	191
  4381  1C16  008E               	movwf	14	;volatile
  4382                           
  4383                           ;pin_manager.c: 80: OPTION_REGbits.nWPUEN = 0;
  4384  1C17  0021               	movlb	1	; select bank1
  4385  1C18  1395               	bcf	21,7	;volatile
  4386                           
  4387                           ;pin_manager.c: 86: APFCON1 = 0x00;
  4388  1C19  0022               	movlb	2	; select bank2
  4389  1C1A  019E               	clrf	30	;volatile
  4390                           
  4391                           ;pin_manager.c: 87: APFCON0 = 0x84;
  4392  1C1B  3084               	movlw	132
  4393  1C1C  009D               	movwf	29	;volatile
  4394  1C1D  0008               	return
  4395  1C1E                     __end_of_PIN_MANAGER_Initialize:	
  4396                           
  4397                           	psect	text6
  4398  0800                     __ptext6:	
  4399 ;; *************** function _OSCILLATOR_Initialize *****************
  4400 ;; Defined at:
  4401 ;;		line 80 in file "mcc_generated_files/mcc.c"
  4402 ;; Parameters:    Size  Location     Type
  4403 ;;		None
  4404 ;; Auto vars:     Size  Location     Type
  4405 ;;		None
  4406 ;; Return value:  Size  Location     Type
  4407 ;;                  1    wreg      void 
  4408 ;; Registers used:
  4409 ;;		wreg, status,2
  4410 ;; Tracked objects:
  4411 ;;		On entry : 0/0
  4412 ;;		On exit  : 0/0
  4413 ;;		Unchanged: 0/0
  4414 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4418 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4419 ;;Total ram usage:        0 bytes
  4420 ;; Hardware stack levels used:    1
  4421 ;; Hardware stack levels required when called:    3
  4422 ;; This function calls:
  4423 ;;		Nothing
  4424 ;; This function is called by:
  4425 ;;		_SYSTEM_Initialize
  4426 ;; This function uses a non-reentrant model
  4427 ;;
  4428                           
  4429                           
  4430                           ;psect for function _OSCILLATOR_Initialize
  4431  0800                     _OSCILLATOR_Initialize:	
  4432                           
  4433                           ;mcc.c: 83: OSCCON = 0x70;
  4434                           
  4435                           ;incstack = 0
  4436                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  4437  0800  3070               	movlw	112
  4438  0801  0021               	movlb	1	; select bank1
  4439  0802  0099               	movwf	25	;volatile
  4440                           
  4441                           ;mcc.c: 85: OSCTUNE = 0x00;
  4442  0803  0198               	clrf	24	;volatile
  4443  0804                     l355:	
  4444                           ;mcc.c: 88: {
  4445                           
  4446                           ;mcc.c: 87: while(PLLR == 0)
  4447                           
  4448  0804  1B1A               	btfsc	26,6	;volatile
  4449  0805  0008               	return
  4450  0806  2804               	goto	l355
  4451  0807                     __end_of_OSCILLATOR_Initialize:	
  4452                           
  4453                           	psect	text7
  4454  1BA7                     __ptext7:	
  4455 ;; *************** function _I2C1_Initialize *****************
  4456 ;; Defined at:
  4457 ;;		line 198 in file "mcc_generated_files/i2c1.c"
  4458 ;; Parameters:    Size  Location     Type
  4459 ;;		None
  4460 ;; Auto vars:     Size  Location     Type
  4461 ;;		None
  4462 ;; Return value:  Size  Location     Type
  4463 ;;                  1    wreg      void 
  4464 ;; Registers used:
  4465 ;;		wreg, status,2
  4466 ;; Tracked objects:
  4467 ;;		On entry : 0/0
  4468 ;;		On exit  : 0/0
  4469 ;;		Unchanged: 0/0
  4470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4471 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4472 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4473 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4474 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4475 ;;Total ram usage:        1 bytes
  4476 ;; Hardware stack levels used:    1
  4477 ;; Hardware stack levels required when called:    3
  4478 ;; This function calls:
  4479 ;;		Nothing
  4480 ;; This function is called by:
  4481 ;;		_SYSTEM_Initialize
  4482 ;; This function uses a non-reentrant model
  4483 ;;
  4484                           
  4485                           
  4486                           ;psect for function _I2C1_Initialize
  4487  1BA7                     _I2C1_Initialize:	
  4488                           
  4489                           ;i2c1.c: 200: i2c1_object.pTrHead = i2c1_tr_queue;
  4490                           
  4491                           ;incstack = 0
  4492                           ; Regs used in _I2C1_Initialize: [wreg+status,2]
  4493  1BA7  305F               	movlw	(low (_i2c1_tr_queue| (0+256)))& (0+255)
  4494  1BA8  0020               	movlb	0	; select bank0
  4495  1BA9  00A0               	movwf	??_I2C1_Initialize
  4496  1BAA  0820               	movf	??_I2C1_Initialize,w
  4497  1BAB  0022               	movlb	2	; select bank2
  4498  1BAC  00A1               	movwf	(low ((_i2c1_object| (0+256)+1)))^0
  4499                           
  4500                           ;i2c1.c: 201: i2c1_object.pTrTail = i2c1_tr_queue;
  4501  1BAD  305F               	movlw	(low (_i2c1_tr_queue| (0+256)))& (0+255)
  4502  1BAE  0020               	movlb	0	; select bank0
  4503  1BAF  00A0               	movwf	??_I2C1_Initialize
  4504  1BB0  0820               	movf	??_I2C1_Initialize,w
  4505  1BB1  0022               	movlb	2	; select bank2
  4506  1BB2  00A0               	movwf	_i2c1_object^(0+256)
  4507                           
  4508                           ;i2c1.c: 202: i2c1_object.trStatus.s.empty = 1;
  4509  1BB3  14A2               	bsf	(_i2c1_object^(0+256)+2),1
  4510                           
  4511                           ;i2c1.c: 203: i2c1_object.trStatus.s.full = 0;
  4512  1BB4  1022               	bcf	(_i2c1_object^(0+256)+2),0
  4513                           
  4514                           ;i2c1.c: 205: i2c1_object.i2cErrors = 0;
  4515  1BB5  01A4               	clrf	(_i2c1_object^(0+256)+4)
  4516                           
  4517                           ;i2c1.c: 208: SSP1STAT = 0x80;
  4518  1BB6  3080               	movlw	128
  4519  1BB7  0024               	movlb	4	; select bank4
  4520  1BB8  0094               	movwf	20	;volatile
  4521                           
  4522                           ;i2c1.c: 210: SSP1CON1 = 0x28;
  4523  1BB9  3028               	movlw	40
  4524  1BBA  0095               	movwf	21	;volatile
  4525                           
  4526                           ;i2c1.c: 212: SSP1CON3 = 0x00;
  4527  1BBB  0197               	clrf	23	;volatile
  4528                           
  4529                           ;i2c1.c: 214: SSP1ADD = 0x4F;
  4530  1BBC  304F               	movlw	79
  4531  1BBD  0092               	movwf	18	;volatile
  4532                           
  4533                           ;i2c1.c: 218: PIR1bits.SSP1IF = 0;
  4534  1BBE  0020               	movlb	0	; select bank0
  4535  1BBF  1191               	bcf	17,3	;volatile
  4536                           
  4537                           ;i2c1.c: 220: PIE1bits.SSP1IE = 1;
  4538  1BC0  0021               	movlb	1	; select bank1
  4539  1BC1  1591               	bsf	17,3	;volatile
  4540  1BC2  0008               	return
  4541  1BC3                     __end_of_I2C1_Initialize:	
  4542                           
  4543                           	psect	text8
  4544  1B54                     __ptext8:	
  4545 ;; *************** function _EUSART_Initialize *****************
  4546 ;; Defined at:
  4547 ;;		line 75 in file "mcc_generated_files/eusart.c"
  4548 ;; Parameters:    Size  Location     Type
  4549 ;;		None
  4550 ;; Auto vars:     Size  Location     Type
  4551 ;;		None
  4552 ;; Return value:  Size  Location     Type
  4553 ;;                  1    wreg      void 
  4554 ;; Registers used:
  4555 ;;		wreg, status,2
  4556 ;; Tracked objects:
  4557 ;;		On entry : 0/0
  4558 ;;		On exit  : 0/0
  4559 ;;		Unchanged: 0/0
  4560 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4563 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4564 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4565 ;;Total ram usage:        1 bytes
  4566 ;; Hardware stack levels used:    1
  4567 ;; Hardware stack levels required when called:    3
  4568 ;; This function calls:
  4569 ;;		Nothing
  4570 ;; This function is called by:
  4571 ;;		_SYSTEM_Initialize
  4572 ;; This function uses a non-reentrant model
  4573 ;;
  4574                           
  4575                           
  4576                           ;psect for function _EUSART_Initialize
  4577  1B54                     _EUSART_Initialize:	
  4578                           
  4579                           ;eusart.c: 78: PIE1bits.RCIE = 0;
  4580                           
  4581                           ;incstack = 0
  4582                           ; Regs used in _EUSART_Initialize: [wreg+status,2]
  4583  1B54  0021               	movlb	1	; select bank1
  4584  1B55  1291               	bcf	17,5	;volatile
  4585                           
  4586                           ;eusart.c: 79: PIE1bits.TXIE = 0;
  4587  1B56  1211               	bcf	17,4	;volatile
  4588                           
  4589                           ;eusart.c: 84: BAUDCON = 0x08;
  4590  1B57  3008               	movlw	8
  4591  1B58  0023               	movlb	3	; select bank3
  4592  1B59  009F               	movwf	31	;volatile
  4593                           
  4594                           ;eusart.c: 87: RCSTA = 0x90;
  4595  1B5A  3090               	movlw	144
  4596  1B5B  009D               	movwf	29	;volatile
  4597                           
  4598                           ;eusart.c: 90: TXSTA = 0x24;
  4599  1B5C  3024               	movlw	36
  4600  1B5D  009E               	movwf	30	;volatile
  4601                           
  4602                           ;eusart.c: 93: SPBRGL = 0x44;
  4603  1B5E  3044               	movlw	68
  4604  1B5F  009B               	movwf	27	;volatile
  4605                           
  4606                           ;eusart.c: 96: SPBRGH = 0x00;
  4607  1B60  019C               	clrf	28	;volatile
  4608                           
  4609                           ;eusart.c: 100: eusartTxHead = 0;
  4610  1B61  01FB               	clrf	_eusartTxHead	;volatile
  4611                           
  4612                           ;eusart.c: 101: eusartTxTail = 0;
  4613  1B62  01FA               	clrf	_eusartTxTail	;volatile
  4614                           
  4615                           ;eusart.c: 102: eusartTxBufferRemaining = sizeof(eusartTxBuffer);
  4616  1B63  3040               	movlw	64
  4617  1B64  0020               	movlb	0	; select bank0
  4618  1B65  00A0               	movwf	??_EUSART_Initialize
  4619  1B66  0820               	movf	??_EUSART_Initialize,w
  4620  1B67  0022               	movlb	2	; select bank2
  4621  1B68  00D8               	movwf	_eusartTxBufferRemaining^(0+256)	;volatile
  4622                           
  4623                           ;eusart.c: 104: eusartRxHead = 0;
  4624  1B69  01D7               	clrf	_eusartRxHead^(0+256)	;volatile
  4625                           
  4626                           ;eusart.c: 105: eusartRxTail = 0;
  4627  1B6A  01D6               	clrf	_eusartRxTail^(0+256)	;volatile
  4628                           
  4629                           ;eusart.c: 106: eusartRxCount = 0;
  4630  1B6B  01D5               	clrf	_eusartRxCount^(0+256)	;volatile
  4631                           
  4632                           ;eusart.c: 109: PIE1bits.RCIE = 1;
  4633  1B6C  0021               	movlb	1	; select bank1
  4634  1B6D  1691               	bsf	17,5	;volatile
  4635  1B6E  0008               	return
  4636  1B6F                     __end_of_EUSART_Initialize:	
  4637                           
  4638                           	psect	text9
  4639  1A2B                     __ptext9:	
  4640 ;; *************** function _PROTOCOL_Set_Extension_Handler *****************
  4641 ;; Defined at:
  4642 ;;		line 80 in file "protocol.c"
  4643 ;; Parameters:    Size  Location     Type
  4644 ;;  extension_ha    2    0[BANK0 ] PTR void 
  4645 ;;		 -> command_handler(1), 
  4646 ;; Auto vars:     Size  Location     Type
  4647 ;;		None
  4648 ;; Return value:  Size  Location     Type
  4649 ;;                  1    wreg      void 
  4650 ;; Registers used:
  4651 ;;		wreg
  4652 ;; Tracked objects:
  4653 ;;		On entry : 0/0
  4654 ;;		On exit  : 0/0
  4655 ;;		Unchanged: 0/0
  4656 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4657 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4658 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4659 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4660 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4661 ;;Total ram usage:        2 bytes
  4662 ;; Hardware stack levels used:    1
  4663 ;; Hardware stack levels required when called:    3
  4664 ;; This function calls:
  4665 ;;		Nothing
  4666 ;; This function is called by:
  4667 ;;		_main
  4668 ;; This function uses a non-reentrant model
  4669 ;;
  4670                           
  4671                           
  4672                           ;psect for function _PROTOCOL_Set_Extension_Handler
  4673  1A2B                     _PROTOCOL_Set_Extension_Handler:	
  4674                           
  4675                           ;protocol.c: 81: PROTOCOL_Extension_Handler = extension_handler;
  4676                           
  4677                           ;incstack = 0
  4678                           ; Regs used in _PROTOCOL_Set_Extension_Handler: [wreg]
  4679  1A2B  0020               	movlb	0	; select bank0
  4680  1A2C  0821               	movf	PROTOCOL_Set_Extension_Handler@extension_handler+1,w
  4681  1A2D  0022               	movlb	2	; select bank2
  4682  1A2E  00B0               	movwf	(_PROTOCOL_Extension_Handler+1)^(0+256)
  4683  1A2F  0020               	movlb	0	; select bank0
  4684  1A30  0820               	movf	PROTOCOL_Set_Extension_Handler@extension_handler,w
  4685  1A31  0022               	movlb	2	; select bank2
  4686  1A32  00AF               	movwf	_PROTOCOL_Extension_Handler^(0+256)
  4687  1A33  0008               	return
  4688  1A34                     __end_of_PROTOCOL_Set_Extension_Handler:	
  4689                           
  4690                           	psect	text10
  4691  0628                     __ptext10:	
  4692 ;; *************** function _PROTOCOL_Loop *****************
  4693 ;; Defined at:
  4694 ;;		line 131 in file "protocol.c"
  4695 ;; Parameters:    Size  Location     Type
  4696 ;;		None
  4697 ;; Auto vars:     Size  Location     Type
  4698 ;;  device_addre    1    4[BANK2 ] unsigned char 
  4699 ;;  c               1    3[BANK2 ] unsigned char 
  4700 ;; Return value:  Size  Location     Type
  4701 ;;                  1    wreg      void 
  4702 ;; Registers used:
  4703 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  4704 ;; Tracked objects:
  4705 ;;		On entry : 0/0
  4706 ;;		On exit  : 0/0
  4707 ;;		Unchanged: 0/0
  4708 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  4709 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  4710 ;;      Locals:         0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  4711 ;;      Temps:          0       0       0       2       0       0       0       0       0       0       0       0       
      +0       0
  4712 ;;      Totals:         0       0       0       4       0       0       0       0       0       0       0       0       
      +0       0
  4713 ;;Total ram usage:        4 bytes
  4714 ;; Hardware stack levels used:    1
  4715 ;; Hardware stack levels required when called:   13
  4716 ;; This function calls:
  4717 ;;		Absolute function
  4718 ;;		_EUSART_Read
  4719 ;;		_PROTOCOL_EXT
  4720 ;;		_PROTOCOL_Read_Device_Address
  4721 ;;		_PROTOCOL_SAV
  4722 ;;		_PROTOCOL_SET
  4723 ;;		_PROTOCOL_STA
  4724 ;;		_PROTOCOL_STP
  4725 ;;		_PROTOCOL_Write_Device_Address
  4726 ;;		_TMR0_HasOverflowOccured
  4727 ;;		_atoi
  4728 ;;		_command_handler
  4729 ;;		_inv_handler
  4730 ;;		_printf
  4731 ;;		_strncmp
  4732 ;; This function is called by:
  4733 ;;		_main
  4734 ;; This function uses a non-reentrant model
  4735 ;;
  4736                           
  4737                           
  4738                           ;psect for function _PROTOCOL_Loop
  4739  0628                     _PROTOCOL_Loop:	
  4740  0628                     l874:	
  4741                           ;incstack = 0
  4742                           ; Regs used in _PROTOCOL_Loop: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  4743                           ;protocol.c: 132: uint8_t device_address;
  4744                           ;protocol.c: 133: uint8_t c;
  4745                           ;protocol.c: 134: while (1) {
  4746                           
  4747                           
  4748                           ;protocol.c: 135: tmr_overflow = TMR0_HasOverflowOccured();
  4749  0628  319A  2210  3186   	fcall	_TMR0_HasOverflowOccured
  4750  062B  0022               	movlb	2	; select bank2
  4751  062C  00EB               	movwf	??_PROTOCOL_Loop^(0+256)
  4752  062D  086B               	movf	??_PROTOCOL_Loop^(0+256),w
  4753  062E  00C3               	movwf	_tmr_overflow^(0+256)
  4754                           
  4755                           ;protocol.c: 136: if (tmr_overflow) {
  4756  062F  0843               	movf	_tmr_overflow^(0+256),w
  4757  0630  1903               	btfsc	3,2
  4758  0631  2E4E               	goto	l5977
  4759                           
  4760                           ;protocol.c: 137: TMR0IF = 0;
  4761  0632  110B               	bcf	11,2	;volatile
  4762                           
  4763                           ;protocol.c: 138: if (PROTOCOL_Inv_Handler && (++tmr_cnt >= value)) {
  4764  0633  082D               	movf	_PROTOCOL_Inv_Handler^(0+256),w
  4765  0634  042E               	iorwf	(_PROTOCOL_Inv_Handler+1)^(0+256),w
  4766  0635  1903               	btfsc	3,2
  4767  0636  2E4E               	goto	l5977
  4768  0637  3001               	movlw	1
  4769  0638  00EB               	movwf	??_PROTOCOL_Loop^(0+256)
  4770  0639  086B               	movf	??_PROTOCOL_Loop^(0+256),w
  4771  063A  07C4               	addwf	_tmr_cnt^(0+256),f
  4772  063B  0848               	movf	_value^(0+256),w
  4773  063C  0244               	subwf	_tmr_cnt^(0+256),w
  4774  063D  1C03               	skipc
  4775  063E  2E4E               	goto	l5977
  4776                           
  4777                           ;protocol.c: 139: tmr_cnt = 0;
  4778  063F  01C4               	clrf	_tmr_cnt^(0+256)
  4779                           
  4780                           ;protocol.c: 140: if (++sec_cnt >= tmr_scaler) {
  4781  0640  3001               	movlw	1
  4782  0641  00EB               	movwf	??_PROTOCOL_Loop^(0+256)
  4783  0642  086B               	movf	??_PROTOCOL_Loop^(0+256),w
  4784  0643  07C5               	addwf	_sec_cnt^(0+256),f
  4785  0644  0864               	movf	_tmr_scaler^(0+256),w
  4786  0645  0245               	subwf	_sec_cnt^(0+256),w
  4787  0646  1C03               	skipc
  4788  0647  2E4E               	goto	l5977
  4789                           
  4790                           ;protocol.c: 141: if (running) invoked = 1;
  4791  0648  0853               	movf	_running^(0+256),w
  4792  0649  1903               	btfsc	3,2
  4793  064A  2E4D               	goto	l5975
  4794  064B  01C6               	clrf	_invoked^(0+256)
  4795  064C  0AC6               	incf	_invoked^(0+256),f
  4796  064D                     l5975:	
  4797                           
  4798                           ;protocol.c: 142: sec_cnt = 0;
  4799  064D  01C5               	clrf	_sec_cnt^(0+256)
  4800  064E                     l5977:	
  4801                           
  4802                           ;protocol.c: 143: }
  4803                           ;protocol.c: 144: }
  4804                           ;protocol.c: 145: }
  4805                           ;protocol.c: 146: if (invoked && PROTOCOL_Inv_Handler) {
  4806  064E  0846               	movf	_invoked^(0+256),w
  4807  064F  1903               	btfsc	3,2
  4808  0650  2E5C               	goto	l5987
  4809  0651  082D               	movf	_PROTOCOL_Inv_Handler^(0+256),w
  4810  0652  042E               	iorwf	(_PROTOCOL_Inv_Handler+1)^(0+256),w
  4811  0653  1903               	btfsc	3,2
  4812  0654  2E5C               	goto	l5987
  4813                           
  4814                           ;protocol.c: 147: PROTOCOL_Inv_Handler();
  4815  0655  082E               	movf	(_PROTOCOL_Inv_Handler+1)^(0+256),w
  4816  0656  008A               	movwf	10
  4817  0657  082D               	movf	_PROTOCOL_Inv_Handler^(0+256),w
  4818  0658  000A               	callw
  4819  0659  3186               	pagesel	$
  4820                           
  4821                           ;protocol.c: 148: invoked = 0;
  4822  065A  0022               	movlb	2	; select bank2
  4823  065B  01C6               	clrf	_invoked^(0+256)
  4824  065C                     l5987:	
  4825                           
  4826                           ;protocol.c: 151: if ((eusartRxCount)) {
  4827  065C  0855               	movf	_eusartRxCount^(0+256),w	;volatile
  4828  065D  1903               	btfsc	3,2
  4829  065E  2E28               	goto	l874
  4830                           
  4831                           ;protocol.c: 152: c = EUSART_Read();
  4832  065F  319C  241E  3186   	fcall	_EUSART_Read
  4833  0662  0022               	movlb	2	; select bank2
  4834  0663  00EB               	movwf	??_PROTOCOL_Loop^(0+256)
  4835  0664  086B               	movf	??_PROTOCOL_Loop^(0+256),w
  4836  0665  00ED               	movwf	PROTOCOL_Loop@c^(0+256)
  4837                           
  4838                           ;protocol.c: 153: buf[cnt++] = c;
  4839  0666  086D               	movf	PROTOCOL_Loop@c^(0+256),w
  4840  0667  00EB               	movwf	??_PROTOCOL_Loop^(0+256)
  4841  0668  0849               	movf	_cnt^(0+256),w
  4842  0669  3E20               	addlw	(low (_buf| (0+512)))& (0+255)
  4843  066A  0086               	movwf	6
  4844  066B  3002               	movlw	2	; select bank4/5
  4845  066C  0087               	movwf	7
  4846  066D  086B               	movf	??_PROTOCOL_Loop^(0+256),w
  4847  066E  0081               	movwf	1
  4848  066F  3001               	movlw	1
  4849  0670  00EB               	movwf	??_PROTOCOL_Loop^(0+256)
  4850  0671  086B               	movf	??_PROTOCOL_Loop^(0+256),w
  4851  0672  07C9               	addwf	_cnt^(0+256),f
  4852                           
  4853                           ;protocol.c: 154: if (c == '\n') {
  4854  0673  300A               	movlw	10
  4855  0674  066D               	xorwf	PROTOCOL_Loop@c^(0+256),w
  4856  0675  1D03               	btfss	3,2
  4857  0676  2E28               	goto	l874
  4858                           
  4859                           ;protocol.c: 155: buf[--cnt] = '\0';
  4860  0677  3001               	movlw	1
  4861  0678  02C9               	subwf	_cnt^(0+256),f
  4862  0679  0849               	movf	_cnt^(0+256),w
  4863  067A  3E20               	addlw	(low (_buf| (0+512)))& (0+255)
  4864  067B  0086               	movwf	6
  4865  067C  3002               	movlw	2	; select bank4/5
  4866  067D  0087               	movwf	7
  4867  067E  0181               	clrf	1
  4868                           
  4869                           ;protocol.c: 156: cnt = 0;
  4870  067F  01C9               	clrf	_cnt^(0+256)
  4871                           
  4872                           ;protocol.c: 157: printf("#%s\n", buf);
  4873  0680  30B5               	movlw	low (STR_42| (0+32768))
  4874  0681  0020               	movlb	0	; select bank0
  4875  0682  00C1               	movwf	printf@f
  4876  0683  3091               	movlw	high (STR_42| (0+32768))
  4877  0684  00C2               	movwf	printf@f+1
  4878  0685  3020               	movlw	low _buf
  4879  0686  00C3               	movwf	low ((?_printf| 0+2))
  4880  0687  3002               	movlw	high _buf
  4881  0688  00C4               	movwf	(low ((?_printf| 0+2))+1)
  4882  0689  319B  2308  3186   	fcall	_printf
  4883                           
  4884                           ;protocol.c: 158: if (BACKPLANE_SLAVE_ADDRESS != 0x01) {
  4885  068C  0022               	movlb	2	; select bank2
  4886  068D  0368               	decf	_BACKPLANE_SLAVE_ADDRESS^(0+256),w
  4887  068E  1903               	btfsc	3,2
  4888  068F  2E9C               	goto	l6007
  4889                           
  4890                           ;protocol.c: 159: PROTOCOL_Extension_Handler(buf);
  4891  0690  3020               	movlw	low _buf
  4892  0691  0020               	movlb	0	; select bank0
  4893  0692  00D0               	movwf	command_handler@buf
  4894  0693  3002               	movlw	high _buf
  4895  0694  00D1               	movwf	command_handler@buf+1
  4896  0695  0022               	movlb	2	; select bank2
  4897  0696  0830               	movf	(_PROTOCOL_Extension_Handler+1)^(0+256),w
  4898  0697  008A               	movwf	10
  4899  0698  082F               	movf	_PROTOCOL_Extension_Handler^(0+256),w
  4900  0699  000A               	callw
  4901  069A  3186               	pagesel	$
  4902                           
  4903                           ;protocol.c: 160: } else if (!strncmp(("WHO"), (buf), 3)) {
  4904  069B  2E28               	goto	l874
  4905  069C                     l6007:	
  4906  069C  30F8               	movlw	low (STR_1| (0+32768))
  4907  069D  0020               	movlb	0	; select bank0
  4908  069E  00A0               	movwf	strncmp@s1
  4909  069F  3091               	movlw	high (STR_1| (0+32768))
  4910  06A0  00A1               	movwf	strncmp@s1+1
  4911  06A1  3020               	movlw	low _buf
  4912  06A2  00A2               	movwf	strncmp@s2
  4913  06A3  3002               	movlw	high _buf
  4914  06A4  00A3               	movwf	strncmp@s2+1
  4915  06A5  3003               	movlw	3
  4916  06A6  00A4               	movwf	strncmp@len
  4917  06A7  3000               	movlw	0
  4918  06A8  00A5               	movwf	strncmp@len+1
  4919  06A9  3187  27BE  3186   	fcall	_strncmp
  4920  06AC  0020               	movlb	0	; select bank0
  4921  06AD  0820               	movf	?_strncmp,w
  4922  06AE  0421               	iorwf	?_strncmp+1,w
  4923  06AF  1D03               	btfss	3,2
  4924  06B0  2EC1               	goto	l6011
  4925                           
  4926                           ;protocol.c: 161: printf("$:WHO:%s\n", device_id_);
  4927  06B1  303D               	movlw	low (STR_44| (0+32768))
  4928  06B2  00C1               	movwf	printf@f
  4929  06B3  3091               	movlw	high (STR_44| (0+32768))
  4930  06B4  00C2               	movwf	printf@f+1
  4931  06B5  0022               	movlb	2	; select bank2
  4932  06B6  082C               	movf	(_device_id_+1)^(0+256),w
  4933  06B7  0020               	movlb	0	; select bank0
  4934  06B8  00C4               	movwf	(low ((?_printf| 0+2))+1)
  4935  06B9  0022               	movlb	2	; select bank2
  4936  06BA  082B               	movf	_device_id_^(0+256),w
  4937  06BB  0020               	movlb	0	; select bank0
  4938  06BC  00C3               	movwf	low ((?_printf| 0+2))
  4939  06BD  319B  2308  3186   	fcall	_printf
  4940                           
  4941                           ;protocol.c: 162: } else if (!strncmp(("SAV"), (buf), 3)) {
  4942  06C0  2E28               	goto	l874
  4943  06C1                     l6011:	
  4944  06C1  3014               	movlw	low (STR_4| (0+32768))
  4945  06C2  0020               	movlb	0	; select bank0
  4946  06C3  00A0               	movwf	strncmp@s1
  4947  06C4  3092               	movlw	high (STR_4| (0+32768))
  4948  06C5  00A1               	movwf	strncmp@s1+1
  4949  06C6  3020               	movlw	low _buf
  4950  06C7  00A2               	movwf	strncmp@s2
  4951  06C8  3002               	movlw	high _buf
  4952  06C9  00A3               	movwf	strncmp@s2+1
  4953  06CA  3003               	movlw	3
  4954  06CB  00A4               	movwf	strncmp@len
  4955  06CC  3000               	movlw	0
  4956  06CD  00A5               	movwf	strncmp@len+1
  4957  06CE  3187  27BE  3186   	fcall	_strncmp
  4958  06D1  0020               	movlb	0	; select bank0
  4959  06D2  0820               	movf	?_strncmp,w
  4960  06D3  0421               	iorwf	?_strncmp+1,w
  4961  06D4  1D03               	btfss	3,2
  4962  06D5  2EDA               	goto	l6015
  4963                           
  4964                           ;protocol.c: 163: PROTOCOL_SAV();
  4965  06D6  319A  2234  3186   	fcall	_PROTOCOL_SAV
  4966                           
  4967                           ;protocol.c: 164: } else if (!strncmp(("STA"), (buf), 3)) {
  4968  06D9  2E28               	goto	l874
  4969  06DA                     l6015:	
  4970  06DA  30DC               	movlw	low (STR_5| (0+32768))
  4971  06DB  0020               	movlb	0	; select bank0
  4972  06DC  00A0               	movwf	strncmp@s1
  4973  06DD  3091               	movlw	high (STR_5| (0+32768))
  4974  06DE  00A1               	movwf	strncmp@s1+1
  4975  06DF  3020               	movlw	low _buf
  4976  06E0  00A2               	movwf	strncmp@s2
  4977  06E1  3002               	movlw	high _buf
  4978  06E2  00A3               	movwf	strncmp@s2+1
  4979  06E3  3003               	movlw	3
  4980  06E4  00A4               	movwf	strncmp@len
  4981  06E5  3000               	movlw	0
  4982  06E6  00A5               	movwf	strncmp@len+1
  4983  06E7  3187  27BE  3186   	fcall	_strncmp
  4984  06EA  0020               	movlb	0	; select bank0
  4985  06EB  0820               	movf	?_strncmp,w
  4986  06EC  0421               	iorwf	?_strncmp+1,w
  4987  06ED  1D03               	btfss	3,2
  4988  06EE  2EF3               	goto	l6019
  4989                           
  4990                           ;protocol.c: 165: PROTOCOL_STA();
  4991  06EF  319A  226F  3186   	fcall	_PROTOCOL_STA
  4992                           
  4993                           ;protocol.c: 166: } else if (!strncmp(("STP"), (buf), 3)) {
  4994  06F2  2E28               	goto	l874
  4995  06F3                     l6019:	
  4996  06F3  3000               	movlw	low (STR_6| (0+32768))
  4997  06F4  0020               	movlb	0	; select bank0
  4998  06F5  00A0               	movwf	strncmp@s1
  4999  06F6  3092               	movlw	high (STR_6| (0+32768))
  5000  06F7  00A1               	movwf	strncmp@s1+1
  5001  06F8  3020               	movlw	low _buf
  5002  06F9  00A2               	movwf	strncmp@s2
  5003  06FA  3002               	movlw	high _buf
  5004  06FB  00A3               	movwf	strncmp@s2+1
  5005  06FC  3003               	movlw	3
  5006  06FD  00A4               	movwf	strncmp@len
  5007  06FE  3000               	movlw	0
  5008  06FF  00A5               	movwf	strncmp@len+1
  5009  0700  3187  27BE  3186   	fcall	_strncmp
  5010  0703  0020               	movlb	0	; select bank0
  5011  0704  0820               	movf	?_strncmp,w
  5012  0705  0421               	iorwf	?_strncmp+1,w
  5013  0706  1D03               	btfss	3,2
  5014  0707  2F18               	goto	l6025
  5015                           
  5016                           ;protocol.c: 167: PROTOCOL_STP();
  5017  0708  319A  2262  3186   	fcall	_PROTOCOL_STP
  5018                           
  5019                           ;protocol.c: 168: printf("*:STP:%s\n", "ACK");
  5020  070B  3047               	movlw	low (STR_48| (0+32768))
  5021  070C  0020               	movlb	0	; select bank0
  5022  070D  00C1               	movwf	printf@f
  5023  070E  3091               	movlw	high (STR_48| (0+32768))
  5024  070F  00C2               	movwf	printf@f+1
  5025  0710  30D4               	movlw	low (STR_49| (0+32768))
  5026  0711  00C3               	movwf	low ((?_printf| 0+2))
  5027  0712  3091               	movlw	high (STR_49| (0+32768))
  5028  0713  00C4               	movwf	(low ((?_printf| 0+2))+1)
  5029  0714  319B  2308  3186   	fcall	_printf
  5030                           
  5031                           ;protocol.c: 169: } else if (!strncmp(("SET"), (buf), 3)) {
  5032  0717  2E28               	goto	l874
  5033  0718                     l6025:	
  5034  0718  3010               	movlw	low (STR_9| (0+32768))
  5035  0719  0020               	movlb	0	; select bank0
  5036  071A  00A0               	movwf	strncmp@s1
  5037  071B  3092               	movlw	high (STR_9| (0+32768))
  5038  071C  00A1               	movwf	strncmp@s1+1
  5039  071D  3020               	movlw	low _buf
  5040  071E  00A2               	movwf	strncmp@s2
  5041  071F  3002               	movlw	high _buf
  5042  0720  00A3               	movwf	strncmp@s2+1
  5043  0721  3003               	movlw	3
  5044  0722  00A4               	movwf	strncmp@len
  5045  0723  3000               	movlw	0
  5046  0724  00A5               	movwf	strncmp@len+1
  5047  0725  3187  27BE  3186   	fcall	_strncmp
  5048  0728  0020               	movlb	0	; select bank0
  5049  0729  0820               	movf	?_strncmp,w
  5050  072A  0421               	iorwf	?_strncmp+1,w
  5051  072B  1D03               	btfss	3,2
  5052  072C  2F3A               	goto	l6029
  5053                           
  5054                           ;protocol.c: 170: PROTOCOL_SET(atoi(&buf[4]));
  5055  072D  3024               	movlw	low (_buf+4)
  5056  072E  00A6               	movwf	atoi@s
  5057  072F  3002               	movlw	high (_buf+4)
  5058  0730  00A7               	movwf	atoi@s+1
  5059  0731  3194  2451  3186   	fcall	_atoi
  5060  0734  0020               	movlb	0	; select bank0
  5061  0735  0826               	movf	?_atoi,w
  5062  0736  319A  2223  3186   	fcall	_PROTOCOL_SET
  5063                           
  5064                           ;protocol.c: 171: } else if (!strncmp(("GET"), (buf), 3)) {
  5065  0739  2E28               	goto	l874
  5066  073A                     l6029:	
  5067  073A  300C               	movlw	low (STR_10| (0+32768))
  5068  073B  0020               	movlb	0	; select bank0
  5069  073C  00A0               	movwf	strncmp@s1
  5070  073D  3092               	movlw	high (STR_10| (0+32768))
  5071  073E  00A1               	movwf	strncmp@s1+1
  5072  073F  3020               	movlw	low _buf
  5073  0740  00A2               	movwf	strncmp@s2
  5074  0741  3002               	movlw	high _buf
  5075  0742  00A3               	movwf	strncmp@s2+1
  5076  0743  3003               	movlw	3
  5077  0744  00A4               	movwf	strncmp@len
  5078  0745  3000               	movlw	0
  5079  0746  00A5               	movwf	strncmp@len+1
  5080  0747  3187  27BE  3186   	fcall	_strncmp
  5081  074A  0020               	movlb	0	; select bank0
  5082  074B  0820               	movf	?_strncmp,w
  5083  074C  0421               	iorwf	?_strncmp+1,w
  5084  074D  1D03               	btfss	3,2
  5085  074E  2F62               	goto	l6033
  5086                           
  5087                           ;protocol.c: 172: printf("$:GET:%d\n", value);
  5088  074F  306F               	movlw	low (STR_11| (0+32768))
  5089  0750  00C1               	movwf	printf@f
  5090  0751  3091               	movlw	high (STR_11| (0+32768))
  5091  0752  00C2               	movwf	printf@f+1
  5092  0753  0022               	movlb	2	; select bank2
  5093  0754  0848               	movf	_value^(0+256),w
  5094  0755  00EB               	movwf	??_PROTOCOL_Loop^(0+256)
  5095  0756  01EC               	clrf	(??_PROTOCOL_Loop^(0+256)+1)
  5096  0757  086B               	movf	??_PROTOCOL_Loop^(0+256),w
  5097  0758  0020               	movlb	0	; select bank0
  5098  0759  00C3               	movwf	?_printf+2
  5099  075A  0022               	movlb	2	; select bank2
  5100  075B  086C               	movf	(??_PROTOCOL_Loop+1)^(0+256),w
  5101  075C  0020               	movlb	0	; select bank0
  5102  075D  00C4               	movwf	?_printf+3
  5103  075E  319B  2308  3186   	fcall	_printf
  5104                           
  5105                           ;protocol.c: 173: } else if (!strncmp(("WDA"), (buf), 3)) {
  5106  0761  2E28               	goto	l874
  5107  0762                     l6033:	
  5108  0762  30D0               	movlw	low (STR_53| (0+32768))
  5109  0763  0020               	movlb	0	; select bank0
  5110  0764  00A0               	movwf	strncmp@s1
  5111  0765  3091               	movlw	high (STR_53| (0+32768))
  5112  0766  00A1               	movwf	strncmp@s1+1
  5113  0767  3020               	movlw	low _buf
  5114  0768  00A2               	movwf	strncmp@s2
  5115  0769  3002               	movlw	high _buf
  5116  076A  00A3               	movwf	strncmp@s2+1
  5117  076B  3003               	movlw	3
  5118  076C  00A4               	movwf	strncmp@len
  5119  076D  3000               	movlw	0
  5120  076E  00A5               	movwf	strncmp@len+1
  5121  076F  3187  27BE  3186   	fcall	_strncmp
  5122  0772  0020               	movlb	0	; select bank0
  5123  0773  0820               	movf	?_strncmp,w
  5124  0774  0421               	iorwf	?_strncmp+1,w
  5125  0775  1D03               	btfss	3,2
  5126  0776  2F89               	goto	l6039
  5127                           
  5128                           ;protocol.c: 174: device_address = atoi(&buf[4]);
  5129  0777  3024               	movlw	low (_buf+4)
  5130  0778  00A6               	movwf	atoi@s
  5131  0779  3002               	movlw	high (_buf+4)
  5132  077A  00A7               	movwf	atoi@s+1
  5133  077B  3194  2451  3186   	fcall	_atoi
  5134  077E  0020               	movlb	0	; select bank0
  5135  077F  0826               	movf	?_atoi,w
  5136  0780  0022               	movlb	2	; select bank2
  5137  0781  00EB               	movwf	??_PROTOCOL_Loop^(0+256)
  5138  0782  086B               	movf	??_PROTOCOL_Loop^(0+256),w
  5139  0783  00EE               	movwf	PROTOCOL_Loop@device_address^(0+256)
  5140                           
  5141                           ;protocol.c: 175: PROTOCOL_Write_Device_Address(device_address);
  5142  0784  086E               	movf	PROTOCOL_Loop@device_address^(0+256),w
  5143  0785  319A  229B  3186   	fcall	_PROTOCOL_Write_Device_Address
  5144                           
  5145                           ;protocol.c: 176: } else if (!strncmp(("RDA"), (buf), 3)) {
  5146  0788  2E28               	goto	l874
  5147  0789                     l6039:	
  5148  0789  30CC               	movlw	low (STR_54| (0+32768))
  5149  078A  0020               	movlb	0	; select bank0
  5150  078B  00A0               	movwf	strncmp@s1
  5151  078C  3091               	movlw	high (STR_54| (0+32768))
  5152  078D  00A1               	movwf	strncmp@s1+1
  5153  078E  3020               	movlw	low _buf
  5154  078F  00A2               	movwf	strncmp@s2
  5155  0790  3002               	movlw	high _buf
  5156  0791  00A3               	movwf	strncmp@s2+1
  5157  0792  3003               	movlw	3
  5158  0793  00A4               	movwf	strncmp@len
  5159  0794  3000               	movlw	0
  5160  0795  00A5               	movwf	strncmp@len+1
  5161  0796  3187  27BE  3186   	fcall	_strncmp
  5162  0799  0020               	movlb	0	; select bank0
  5163  079A  0820               	movf	?_strncmp,w
  5164  079B  0421               	iorwf	?_strncmp+1,w
  5165  079C  1D03               	btfss	3,2
  5166  079D  2FB9               	goto	l6045
  5167                           
  5168                           ;protocol.c: 177: device_address = PROTOCOL_Read_Device_Address();
  5169  079E  319A  2209  3186   	fcall	_PROTOCOL_Read_Device_Address
  5170  07A1  0022               	movlb	2	; select bank2
  5171  07A2  00EB               	movwf	??_PROTOCOL_Loop^(0+256)
  5172  07A3  086B               	movf	??_PROTOCOL_Loop^(0+256),w
  5173  07A4  00EE               	movwf	PROTOCOL_Loop@device_address^(0+256)
  5174                           
  5175                           ;protocol.c: 178: printf("$:RDA:%d\n", device_address);
  5176  07A5  3029               	movlw	low (STR_55| (0+32768))
  5177  07A6  0020               	movlb	0	; select bank0
  5178  07A7  00C1               	movwf	printf@f
  5179  07A8  3091               	movlw	high (STR_55| (0+32768))
  5180  07A9  00C2               	movwf	printf@f+1
  5181  07AA  0022               	movlb	2	; select bank2
  5182  07AB  086E               	movf	PROTOCOL_Loop@device_address^(0+256),w
  5183  07AC  00EB               	movwf	??_PROTOCOL_Loop^(0+256)
  5184  07AD  01EC               	clrf	(??_PROTOCOL_Loop^(0+256)+1)
  5185  07AE  086B               	movf	??_PROTOCOL_Loop^(0+256),w
  5186  07AF  0020               	movlb	0	; select bank0
  5187  07B0  00C3               	movwf	?_printf+2
  5188  07B1  0022               	movlb	2	; select bank2
  5189  07B2  086C               	movf	(??_PROTOCOL_Loop+1)^(0+256),w
  5190  07B3  0020               	movlb	0	; select bank0
  5191  07B4  00C4               	movwf	?_printf+3
  5192  07B5  319B  2308  3186   	fcall	_printf
  5193                           
  5194                           ;protocol.c: 179: }
  5195  07B8  2E28               	goto	l874
  5196  07B9                     l6045:	
  5197                           
  5198                           ;protocol.c: 180: else {
  5199                           ;protocol.c: 181: PROTOCOL_EXT(buf);
  5200  07B9  3020               	movlw	(low (_buf| (0+512)))& (0+255)
  5201  07BA  319A  22E0  3186   	fcall	_PROTOCOL_EXT
  5202  07BD  2E28               	goto	l874
  5203  07BE                     __end_of_PROTOCOL_Loop:	
  5204                           
  5205                           	psect	text11
  5206  1677                     __ptext11:	
  5207 ;; *************** function _inv_handler *****************
  5208 ;; Defined at:
  5209 ;;		line 305 in file "main.c"
  5210 ;; Parameters:    Size  Location     Type
  5211 ;;		None
  5212 ;; Auto vars:     Size  Location     Type
  5213 ;;  status          1    0        unsigned char 
  5214 ;;  dev_addr        1    0        unsigned char 
  5215 ;; Return value:  Size  Location     Type
  5216 ;;                  1    wreg      void 
  5217 ;; Registers used:
  5218 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5219 ;; Tracked objects:
  5220 ;;		On entry : 0/0
  5221 ;;		On exit  : 0/0
  5222 ;;		Unchanged: 0/0
  5223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5226 ;;      Temps:          0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  5227 ;;      Totals:         0       0       0       1       0       0       0       0       0       0       0       0       
      +0       0
  5228 ;;Total ram usage:        1 bytes
  5229 ;; Hardware stack levels used:    1
  5230 ;; Hardware stack levels required when called:   12
  5231 ;; This function calls:
  5232 ;;		Absolute function
  5233 ;;		___lwmod
  5234 ;;		_check_plg
  5235 ;;		_edge_meter
  5236 ;;		_exec_remote_cmd
  5237 ;;		_fetch
  5238 ;;		_scan_dev
  5239 ;; This function is called by:
  5240 ;;		_main
  5241 ;;		_PROTOCOL_Loop
  5242 ;; This function uses a non-reentrant model
  5243 ;;
  5244                           
  5245                           
  5246                           ;psect for function _inv_handler
  5247  1677                     _inv_handler:	
  5248                           
  5249                           ;main.c: 306: uint8_t dev_addr, status;
  5250                           ;main.c: 307: static uint16_t t = 0;
  5251                           ;main.c: 308: static int8_t cmd_next = -1;
  5252                           ;main.c: 311: fetch(schedule[0]);
  5253                           
  5254                           ;incstack = 0
  5255                           ; Regs used in _inv_handler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5256  1677  30A0               	movlw	(low (_schedule| (0+256)))& (0+255)
  5257  1678  3193  233B  3196   	fcall	_fetch
  5258                           
  5259                           ;main.c: 313: if (t % 2 == 0) fetch(schedule[1]);
  5260  167B  0022               	movlb	2	; select bank2
  5261  167C  1839               	btfsc	inv_handler@t^(0+256),0
  5262  167D  2E82               	goto	l5875
  5263  167E  30A4               	movlw	(low ((_schedule| (0+256)+4)))& (0+255)
  5264  167F  3193  233B  3196   	fcall	_fetch
  5265  1682                     l5875:	
  5266                           
  5267                           ;main.c: 315: if (t % 6 == 0) fetch(schedule[2]);
  5268  1682  3006               	movlw	6
  5269  1683  0020               	movlb	0	; select bank0
  5270  1684  00A8               	movwf	___lwmod@divisor
  5271  1685  3000               	movlw	0
  5272  1686  00A9               	movwf	___lwmod@divisor+1
  5273  1687  0022               	movlb	2	; select bank2
  5274  1688  083A               	movf	(inv_handler@t+1)^(0+256),w
  5275  1689  0020               	movlb	0	; select bank0
  5276  168A  00AB               	movwf	___lwmod@dividend+1
  5277  168B  0022               	movlb	2	; select bank2
  5278  168C  0839               	movf	inv_handler@t^(0+256),w
  5279  168D  0020               	movlb	0	; select bank0
  5280  168E  00AA               	movwf	___lwmod@dividend
  5281  168F  319D  25AA  3196   	fcall	___lwmod
  5282  1692  0020               	movlb	0	; select bank0
  5283  1693  0828               	movf	?___lwmod,w
  5284  1694  0429               	iorwf	?___lwmod+1,w
  5285  1695  1D03               	btfss	3,2
  5286  1696  2E9B               	goto	l5879
  5287  1697  30A8               	movlw	(low ((_schedule| (0+256)+8)))& (0+255)
  5288  1698  3193  233B  3196   	fcall	_fetch
  5289  169B                     l5879:	
  5290                           
  5291                           ;main.c: 317: if (t % 12 == 0) {
  5292  169B  300C               	movlw	12
  5293  169C  0020               	movlb	0	; select bank0
  5294  169D  00A8               	movwf	___lwmod@divisor
  5295  169E  3000               	movlw	0
  5296  169F  00A9               	movwf	___lwmod@divisor+1
  5297  16A0  0022               	movlb	2	; select bank2
  5298  16A1  083A               	movf	(inv_handler@t+1)^(0+256),w
  5299  16A2  0020               	movlb	0	; select bank0
  5300  16A3  00AB               	movwf	___lwmod@dividend+1
  5301  16A4  0022               	movlb	2	; select bank2
  5302  16A5  0839               	movf	inv_handler@t^(0+256),w
  5303  16A6  0020               	movlb	0	; select bank0
  5304  16A7  00AA               	movwf	___lwmod@dividend
  5305  16A8  319D  25AA  3196   	fcall	___lwmod
  5306  16AB  0020               	movlb	0	; select bank0
  5307  16AC  0828               	movf	?___lwmod,w
  5308  16AD  0429               	iorwf	?___lwmod+1,w
  5309  16AE  1D03               	btfss	3,2
  5310  16AF  2EC2               	goto	l5889
  5311                           
  5312                           ;main.c: 318: fetch(schedule[3]);
  5313  16B0  30AC               	movlw	(low ((_schedule| (0+256)+12)))& (0+255)
  5314  16B1  3193  233B  3196   	fcall	_fetch
  5315                           
  5316                           ;main.c: 319: if (++cmd_next > 3) cmd_next = 0;
  5317  16B4  3001               	movlw	1
  5318  16B5  0022               	movlb	2	; select bank2
  5319  16B6  00EA               	movwf	??_inv_handler^(0+256)
  5320  16B7  086A               	movf	??_inv_handler^(0+256),w
  5321  16B8  07E6               	addwf	inv_handler@cmd_next^(0+256),f
  5322  16B9  0866               	movf	inv_handler@cmd_next^(0+256),w
  5323  16BA  3A80               	xorlw	128
  5324  16BB  3E7C               	addlw	-132
  5325  16BC  1803               	btfsc	3,0
  5326  16BD  01E6               	clrf	inv_handler@cmd_next^(0+256)
  5327                           
  5328                           ;main.c: 320: exec_remote_cmd(cmd_next);
  5329  16BE  0866               	movf	inv_handler@cmd_next^(0+256),w
  5330  16BF  3189  2190  3196   	fcall	_exec_remote_cmd
  5331  16C2                     l5889:	
  5332                           
  5333                           ;main.c: 321: }
  5334                           ;main.c: 323: if (t % 60 == 0) fetch(schedule[4]);
  5335  16C2  303C               	movlw	60
  5336  16C3  0020               	movlb	0	; select bank0
  5337  16C4  00A8               	movwf	___lwmod@divisor
  5338  16C5  3000               	movlw	0
  5339  16C6  00A9               	movwf	___lwmod@divisor+1
  5340  16C7  0022               	movlb	2	; select bank2
  5341  16C8  083A               	movf	(inv_handler@t+1)^(0+256),w
  5342  16C9  0020               	movlb	0	; select bank0
  5343  16CA  00AB               	movwf	___lwmod@dividend+1
  5344  16CB  0022               	movlb	2	; select bank2
  5345  16CC  0839               	movf	inv_handler@t^(0+256),w
  5346  16CD  0020               	movlb	0	; select bank0
  5347  16CE  00AA               	movwf	___lwmod@dividend
  5348  16CF  319D  25AA  3196   	fcall	___lwmod
  5349  16D2  0020               	movlb	0	; select bank0
  5350  16D3  0828               	movf	?___lwmod,w
  5351  16D4  0429               	iorwf	?___lwmod+1,w
  5352  16D5  1D03               	btfss	3,2
  5353  16D6  2EDB               	goto	l5893
  5354  16D7  30B0               	movlw	(low ((_schedule| (0+256)+16)))& (0+255)
  5355  16D8  3193  233B  3196   	fcall	_fetch
  5356  16DB                     l5893:	
  5357                           
  5358                           ;main.c: 325: if (t % 120 == 0) {
  5359  16DB  3078               	movlw	120
  5360  16DC  0020               	movlb	0	; select bank0
  5361  16DD  00A8               	movwf	___lwmod@divisor
  5362  16DE  3000               	movlw	0
  5363  16DF  00A9               	movwf	___lwmod@divisor+1
  5364  16E0  0022               	movlb	2	; select bank2
  5365  16E1  083A               	movf	(inv_handler@t+1)^(0+256),w
  5366  16E2  0020               	movlb	0	; select bank0
  5367  16E3  00AB               	movwf	___lwmod@dividend+1
  5368  16E4  0022               	movlb	2	; select bank2
  5369  16E5  0839               	movf	inv_handler@t^(0+256),w
  5370  16E6  0020               	movlb	0	; select bank0
  5371  16E7  00AA               	movwf	___lwmod@dividend
  5372  16E8  319D  25AA  3196   	fcall	___lwmod
  5373  16EB  0020               	movlb	0	; select bank0
  5374  16EC  0828               	movf	?___lwmod,w
  5375  16ED  0429               	iorwf	?___lwmod+1,w
  5376  16EE  1D03               	btfss	3,2
  5377  16EF  2F08               	goto	l5903
  5378                           
  5379                           ;main.c: 326: fetch(schedule[5]);
  5380  16F0  30B4               	movlw	(low ((_schedule| (0+256)+20)))& (0+255)
  5381  16F1  3193  233B  3196   	fcall	_fetch
  5382                           
  5383                           ;main.c: 327: check_plg();
  5384  16F4  319A  22F3  3196   	fcall	_check_plg
  5385                           
  5386                           ;main.c: 328: if (edge_func) edge_func(0x01, 0, 0, (0));
  5387  16F7  0022               	movlb	2	; select bank2
  5388  16F8  083B               	movf	_edge_func^(0+256),w
  5389  16F9  043C               	iorwf	(_edge_func+1)^(0+256),w
  5390  16FA  1903               	btfsc	3,2
  5391  16FB  2F08               	goto	l5903
  5392  16FC  0020               	movlb	0	; select bank0
  5393  16FD  01DB               	clrf	edge_meter@dev_addr
  5394  16FE  0ADB               	incf	edge_meter@dev_addr,f
  5395  16FF  01DC               	clrf	edge_meter@type
  5396  1700  01DD               	clrf	edge_meter@length
  5397  1701  01DE               	clrf	edge_meter@pbuf
  5398  1702  0022               	movlb	2	; select bank2
  5399  1703  083C               	movf	(_edge_func+1)^(0+256),w
  5400  1704  008A               	movwf	10
  5401  1705  083B               	movf	_edge_func^(0+256),w
  5402  1706  000A               	callw
  5403  1707  3196               	pagesel	$
  5404  1708                     l5903:	
  5405                           
  5406                           ;main.c: 329: }
  5407                           ;main.c: 331: if (t % 600 == 0) {
  5408  1708  3058               	movlw	88
  5409  1709  0020               	movlb	0	; select bank0
  5410  170A  00A8               	movwf	___lwmod@divisor
  5411  170B  3002               	movlw	2
  5412  170C  00A9               	movwf	___lwmod@divisor+1
  5413  170D  0022               	movlb	2	; select bank2
  5414  170E  083A               	movf	(inv_handler@t+1)^(0+256),w
  5415  170F  0020               	movlb	0	; select bank0
  5416  1710  00AB               	movwf	___lwmod@dividend+1
  5417  1711  0022               	movlb	2	; select bank2
  5418  1712  0839               	movf	inv_handler@t^(0+256),w
  5419  1713  0020               	movlb	0	; select bank0
  5420  1714  00AA               	movwf	___lwmod@dividend
  5421  1715  319D  25AA  3196   	fcall	___lwmod
  5422  1718  0020               	movlb	0	; select bank0
  5423  1719  0828               	movf	?___lwmod,w
  5424  171A  0429               	iorwf	?___lwmod+1,w
  5425  171B  1D03               	btfss	3,2
  5426  171C  2F28               	goto	l5911
  5427                           
  5428                           ;main.c: 332: fetch(schedule[6]);
  5429  171D  30B8               	movlw	(low ((_schedule| (0+256)+24)))& (0+255)
  5430  171E  3193  233B  3196   	fcall	_fetch
  5431                           
  5432                           ;main.c: 333: scan_dev();
  5433  1721  3188  2007         	fcall	_scan_dev
  5434                           
  5435                           ;main.c: 334: t = 1;
  5436  1723  3001               	movlw	1
  5437  1724  0022               	movlb	2	; select bank2
  5438  1725  00B9               	movwf	inv_handler@t^(0+256)
  5439  1726  3000               	movlw	0
  5440  1727  00BA               	movwf	(inv_handler@t^(0+256)+1)
  5441  1728                     l5911:	
  5442                           
  5443                           ;main.c: 335: }
  5444                           ;main.c: 337: t++;
  5445  1728  3001               	movlw	1
  5446  1729  0022               	movlb	2	; select bank2
  5447  172A  07B9               	addwf	inv_handler@t^(0+256),f
  5448  172B  3000               	movlw	0
  5449  172C  3DBA               	addwfc	(inv_handler@t+1)^(0+256),f
  5450  172D  0008               	return
  5451  172E                     __end_of_inv_handler:	
  5452                           
  5453                           	psect	text12
  5454  133B                     __ptext12:	
  5455 ;; *************** function _fetch *****************
  5456 ;; Defined at:
  5457 ;;		line 284 in file "main.c"
  5458 ;; Parameters:    Size  Location     Type
  5459 ;;  sch             1    wreg     PTR unsigned char 
  5460 ;;		 -> schedule(28), 
  5461 ;; Auto vars:     Size  Location     Type
  5462 ;;  sch             1   77[BANK1 ] PTR unsigned char 
  5463 ;;		 -> schedule(28), 
  5464 ;;  dev_addr        1   79[BANK1 ] unsigned char 
  5465 ;;  pos             1   78[BANK1 ] unsigned char 
  5466 ;;  status          1   76[BANK1 ] unsigned char 
  5467 ;; Return value:  Size  Location     Type
  5468 ;;                  1    wreg      void 
  5469 ;; Registers used:
  5470 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5471 ;; Tracked objects:
  5472 ;;		On entry : 0/0
  5473 ;;		On exit  : 0/0
  5474 ;;		Unchanged: 0/0
  5475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5477 ;;      Locals:         0       0       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5478 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5479 ;;      Totals:         0       3       4       0       0       0       0       0       0       0       0       0       
      +0       0
  5480 ;;Total ram usage:        7 bytes
  5481 ;; Hardware stack levels used:    1
  5482 ;; Hardware stack levels required when called:   11
  5483 ;; This function calls:
  5484 ;;		_detected
  5485 ;;		_i2c1_write_no_data
  5486 ;;		_printf
  5487 ;;		_sen
  5488 ;; This function is called by:
  5489 ;;		_inv_handler
  5490 ;; This function uses a non-reentrant model
  5491 ;;
  5492                           
  5493                           
  5494                           ;psect for function _fetch
  5495  133B                     _fetch:	
  5496                           
  5497                           ;incstack = 0
  5498                           ; Regs used in _fetch: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5499                           ;fetch@sch stored from wreg
  5500  133B  0021               	movlb	1	; select bank1
  5501  133C  00ED               	movwf	fetch@sch^(0+128)
  5502                           
  5503                           ;main.c: 285: uint8_t pos;
  5504                           ;main.c: 286: uint8_t dev_addr;
  5505                           ;main.c: 287: uint8_t status;
  5506                           ;main.c: 288: for (pos=0; pos<4; pos++) {
  5507  133D  01EE               	clrf	fetch@pos^(0+128)
  5508  133E                     L2:	
  5509  133E  3004               	movlw	4
  5510  133F  026E               	subwf	fetch@pos^(0+128),w
  5511  1340  1803               	btfsc	3,0
  5512  1341  0008               	return
  5513                           
  5514                           ;main.c: 289: dev_addr = sch[pos];
  5515  1342  086E               	movf	fetch@pos^(0+128),w
  5516  1343  076D               	addwf	fetch@sch^(0+128),w
  5517  1344  0020               	movlb	0	; select bank0
  5518  1345  00ED               	movwf	??_fetch
  5519  1346  086D               	movf	??_fetch,w
  5520  1347  0086               	movwf	6
  5521  1348  3001               	movlw	1	; select bank2/3
  5522  1349  0087               	movwf	7
  5523  134A  0801               	movf	1,w
  5524  134B  00EE               	movwf	??_fetch+1
  5525  134C  086E               	movf	??_fetch+1,w
  5526  134D  0021               	movlb	1	; select bank1
  5527  134E  00EF               	movwf	fetch@dev_addr^(0+128)
  5528                           
  5529                           ;main.c: 290: if (dev_addr == 0 || dev_addr > 0x20) {
  5530  134F  086F               	movf	fetch@dev_addr^(0+128),w
  5531  1350  1903               	btfsc	3,2
  5532  1351  0008               	return
  5533  1352  3021               	movlw	33
  5534  1353  026F               	subwf	fetch@dev_addr^(0+128),w
  5535  1354  1803               	btfsc	3,0
  5536  1355  0008               	return
  5537                           
  5538                           ;main.c: 292: } else if (detected(dev_addr)) {
  5539                           
  5540                           ;main.c: 291: break;
  5541  1356  086F               	movf	fetch@dev_addr^(0+128),w
  5542  1357  319D  25D7  3193   	fcall	_detected
  5543  135A  3A00               	xorlw	0
  5544  135B  1903               	skipnz
  5545  135C  2B8B               	goto	l5865
  5546                           
  5547                           ;main.c: 293: status = sen(dev_addr);
  5548  135D  0021               	movlb	1	; select bank1
  5549  135E  086F               	movf	fetch@dev_addr^(0+128),w
  5550  135F  3197  272E  3193   	fcall	_sen
  5551  1362  0020               	movlb	0	; select bank0
  5552  1363  00ED               	movwf	??_fetch
  5553  1364  086D               	movf	??_fetch,w
  5554  1365  0021               	movlb	1	; select bank1
  5555  1366  00EC               	movwf	fetch@status^(0+128)
  5556                           
  5557                           ;main.c: 294: if (status > 0) {
  5558  1367  086C               	movf	fetch@status^(0+128),w
  5559  1368  1903               	btfsc	3,2
  5560  1369  2B8B               	goto	l5865
  5561                           
  5562                           ;main.c: 295: printf("!:%%%d:NETWORK_ERROR\n", dev_addr);
  5563  136A  30CC               	movlw	low (STR_17| (0+32768))
  5564  136B  0020               	movlb	0	; select bank0
  5565  136C  00C1               	movwf	printf@f
  5566  136D  3090               	movlw	high (STR_17| (0+32768))
  5567  136E  00C2               	movwf	printf@f+1
  5568  136F  0021               	movlb	1	; select bank1
  5569  1370  086F               	movf	fetch@dev_addr^(0+128),w
  5570  1371  0020               	movlb	0	; select bank0
  5571  1372  00ED               	movwf	??_fetch
  5572  1373  01EE               	clrf	??_fetch+1
  5573  1374  086D               	movf	??_fetch,w
  5574  1375  00C3               	movwf	?_printf+2
  5575  1376  086E               	movf	??_fetch+1,w
  5576  1377  00C4               	movwf	?_printf+3
  5577  1378  319B  2308  3193   	fcall	_printf
  5578                           
  5579                           ;main.c: 296: i2c1_write_no_data(dev_addr, 0x0c);
  5580  137B  0021               	movlb	1	; select bank1
  5581  137C  086F               	movf	fetch@dev_addr^(0+128),w
  5582  137D  0020               	movlb	0	; select bank0
  5583  137E  00ED               	movwf	??_fetch
  5584  137F  01EE               	clrf	??_fetch+1
  5585  1380  086D               	movf	??_fetch,w
  5586  1381  00AE               	movwf	i2c1_write_no_data@dev_addr
  5587  1382  086E               	movf	??_fetch+1,w
  5588  1383  00AF               	movwf	i2c1_write_no_data@dev_addr+1
  5589  1384  300C               	movlw	12
  5590  1385  00EF               	movwf	??_fetch+2
  5591  1386  086F               	movf	??_fetch+2,w
  5592  1387  00B0               	movwf	i2c1_write_no_data@reg_addr
  5593  1388  319D  2528  3193   	fcall	_i2c1_write_no_data
  5594  138B                     l5865:	
  5595  138B  3001               	movlw	1
  5596  138C  0020               	movlb	0	; select bank0
  5597  138D  00ED               	movwf	??_fetch
  5598  138E  086D               	movf	??_fetch,w
  5599  138F  0021               	movlb	1	; select bank1
  5600  1390  07EE               	addwf	fetch@pos^(0+128),f
  5601  1391  2B3E               	goto	L2
  5602  1392                     __end_of_fetch:	
  5603                           
  5604                           	psect	text13
  5605  172E                     __ptext13:	
  5606 ;; *************** function _sen *****************
  5607 ;; Defined at:
  5608 ;;		line 249 in file "main.c"
  5609 ;; Parameters:    Size  Location     Type
  5610 ;;  dev_addr        1    wreg     unsigned char 
  5611 ;; Auto vars:     Size  Location     Type
  5612 ;;  dev_addr        1   76[BANK0 ] unsigned char 
  5613 ;;  status          1   75[BANK0 ] unsigned char 
  5614 ;;  length          1   74[BANK0 ] unsigned char 
  5615 ;;  type            1   73[BANK0 ] unsigned char 
  5616 ;;  i               1    0        unsigned char 
  5617 ;;  data            1    0        unsigned char 
  5618 ;; Return value:  Size  Location     Type
  5619 ;;                  1    wreg      unsigned char 
  5620 ;; Registers used:
  5621 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5622 ;; Tracked objects:
  5623 ;;		On entry : 0/0
  5624 ;;		On exit  : 0/0
  5625 ;;		Unchanged: 0/0
  5626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5627 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5628 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5629 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5630 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5631 ;;Total ram usage:        9 bytes
  5632 ;; Hardware stack levels used:    1
  5633 ;; Hardware stack levels required when called:   10
  5634 ;; This function calls:
  5635 ;;		Absolute function
  5636 ;;		_PROTOCOL_Print_TLV
  5637 ;;		_edge_meter
  5638 ;;		_i2c1_read
  5639 ;;		_i2c1_write_no_data
  5640 ;; This function is called by:
  5641 ;;		_fetch
  5642 ;; This function uses a non-reentrant model
  5643 ;;
  5644                           
  5645                           
  5646                           ;psect for function _sen
  5647  172E                     _sen:	
  5648                           
  5649                           ;incstack = 0
  5650                           ; Regs used in _sen: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5651                           ;sen@dev_addr stored from wreg
  5652  172E  0020               	movlb	0	; select bank0
  5653  172F  00EC               	movwf	sen@dev_addr
  5654                           
  5655                           ;main.c: 250: uint8_t status;
  5656                           ;main.c: 251: uint8_t type;
  5657                           ;main.c: 252: uint8_t length ,data, i;
  5658                           ;main.c: 253: LATCbits.LATC7 ^= 1;
  5659  1730  0022               	movlb	2	; select bank2
  5660  1731  0D0E               	rlf	14,w	;volatile
  5661  1732  0D0E               	rlf	14,w	;volatile
  5662  1733  3901               	andlw	1
  5663  1734  0020               	movlb	0	; select bank0
  5664  1735  00E4               	movwf	??_sen
  5665  1736  3001               	movlw	1
  5666  1737  06E4               	xorwf	??_sen,f
  5667  1738  0CE4               	rrf	??_sen,f
  5668  1739  0CE4               	rrf	??_sen,f
  5669  173A  0022               	movlb	2	; select bank2
  5670  173B  080E               	movf	14,w	;volatile
  5671  173C  0020               	movlb	0	; select bank0
  5672  173D  0664               	xorwf	??_sen,w
  5673  173E  397F               	andlw	-129
  5674  173F  0664               	xorwf	??_sen,w
  5675  1740  0022               	movlb	2	; select bank2
  5676  1741  008E               	movwf	14	;volatile
  5677                           
  5678                           ;main.c: 255: _delay((unsigned long)((100)*(32000000/4000000.0)));
  5679  1742  30A0               	movlw	160
  5680  1743                     u7087:	
  5681  1743  3200               	nop2
  5682  1744  0B89               	decfsz	9,f
  5683  1745  2F43               	goto	u7087
  5684                           
  5685                           ;main.c: 256: i2c1_write_no_data(dev_addr, 0x06);
  5686  1746  0020               	movlb	0	; select bank0
  5687  1747  086C               	movf	sen@dev_addr,w
  5688  1748  00E4               	movwf	??_sen
  5689  1749  01E5               	clrf	??_sen+1
  5690  174A  0864               	movf	??_sen,w
  5691  174B  00AE               	movwf	i2c1_write_no_data@dev_addr
  5692  174C  0865               	movf	??_sen+1,w
  5693  174D  00AF               	movwf	i2c1_write_no_data@dev_addr+1
  5694  174E  3006               	movlw	6
  5695  174F  00E6               	movwf	??_sen+2
  5696  1750  0866               	movf	??_sen+2,w
  5697  1751  00B0               	movwf	i2c1_write_no_data@reg_addr
  5698  1752  319D  2528  3197   	fcall	_i2c1_write_no_data
  5699                           
  5700                           ;main.c: 258: _delay((unsigned long)((1000)*(32000000/4000000.0)));
  5701  1755  300B               	movlw	11
  5702  1756  0020               	movlb	0	; select bank0
  5703  1757  00E4               	movwf	??_sen
  5704  1758  3062               	movlw	98
  5705  1759                     u7097:	
  5706  1759  0B89               	decfsz	9,f
  5707  175A  2F59               	goto	u7097
  5708  175B  0BE4               	decfsz	??_sen,f
  5709  175C  2F59               	goto	u7097
  5710  175D  0000               	nop
  5711                           
  5712                           ;main.c: 259: status = i2c1_read(dev_addr, 0x07, &type, 1);
  5713  175E  0020               	movlb	0	; select bank0
  5714  175F  086C               	movf	sen@dev_addr,w
  5715  1760  00E4               	movwf	??_sen
  5716  1761  01E5               	clrf	??_sen+1
  5717  1762  0864               	movf	??_sen,w
  5718  1763  00B0               	movwf	i2c1_read@dev_addr
  5719  1764  0865               	movf	??_sen+1,w
  5720  1765  00B1               	movwf	i2c1_read@dev_addr+1
  5721  1766  3007               	movlw	7
  5722  1767  00E6               	movwf	??_sen+2
  5723  1768  0866               	movf	??_sen+2,w
  5724  1769  00B2               	movwf	i2c1_read@reg_addr
  5725  176A  3069               	movlw	low sen@type
  5726  176B  00B3               	movwf	i2c1_read@pbuf
  5727  176C  3000               	movlw	high sen@type
  5728  176D  00B4               	movwf	i2c1_read@pbuf+1
  5729  176E  01B5               	clrf	i2c1_read@len
  5730  176F  0AB5               	incf	i2c1_read@len,f
  5731  1770  3192  228F  3197   	fcall	_i2c1_read
  5732  1773  0020               	movlb	0	; select bank0
  5733  1774  00E7               	movwf	??_sen+3
  5734  1775  0867               	movf	??_sen+3,w
  5735  1776  00EB               	movwf	sen@status
  5736                           
  5737                           ;main.c: 260: _delay((unsigned long)((100)*(32000000/4000000.0)));
  5738  1777  30A0               	movlw	160
  5739  1778                     u7107:	
  5740  1778  3200               	nop2
  5741  1779  0B89               	decfsz	9,f
  5742  177A  2F78               	goto	u7107
  5743                           
  5744                           ;main.c: 261: if (status == 0) {
  5745  177B  0020               	movlb	0	; select bank0
  5746  177C  086B               	movf	sen@status,w
  5747  177D  1D03               	btfss	3,2
  5748  177E  2FFD               	goto	l5773
  5749                           
  5750                           ;main.c: 262: if (type == 0x06) {
  5751  177F  3006               	movlw	6
  5752  1780  0669               	xorwf	sen@type,w
  5753  1781  1D03               	btfss	3,2
  5754  1782  2F8E               	goto	l5755
  5755                           
  5756                           ;main.c: 263: PROTOCOL_Print_TLV(dev_addr, 0x06, 0, (0));
  5757  1783  3006               	movlw	6
  5758  1784  00E4               	movwf	??_sen
  5759  1785  0864               	movf	??_sen,w
  5760  1786  00CC               	movwf	PROTOCOL_Print_TLV@type
  5761  1787  01CD               	clrf	PROTOCOL_Print_TLV@length
  5762  1788  01CE               	clrf	PROTOCOL_Print_TLV@pbuffer
  5763  1789  086C               	movf	sen@dev_addr,w
  5764  178A  318D  2585  3197   	fcall	_PROTOCOL_Print_TLV
  5765                           
  5766                           ;main.c: 264: } else {
  5767  178D  2FFD               	goto	l5773
  5768  178E                     l5755:	
  5769                           
  5770                           ;main.c: 265: status = i2c1_read(dev_addr, 0x07, &length, 1);
  5771  178E  0020               	movlb	0	; select bank0
  5772  178F  086C               	movf	sen@dev_addr,w
  5773  1790  00E4               	movwf	??_sen
  5774  1791  01E5               	clrf	??_sen+1
  5775  1792  0864               	movf	??_sen,w
  5776  1793  00B0               	movwf	i2c1_read@dev_addr
  5777  1794  0865               	movf	??_sen+1,w
  5778  1795  00B1               	movwf	i2c1_read@dev_addr+1
  5779  1796  3007               	movlw	7
  5780  1797  00E6               	movwf	??_sen+2
  5781  1798  0866               	movf	??_sen+2,w
  5782  1799  00B2               	movwf	i2c1_read@reg_addr
  5783  179A  306A               	movlw	low sen@length
  5784  179B  00B3               	movwf	i2c1_read@pbuf
  5785  179C  3000               	movlw	high sen@length
  5786  179D  00B4               	movwf	i2c1_read@pbuf+1
  5787  179E  01B5               	clrf	i2c1_read@len
  5788  179F  0AB5               	incf	i2c1_read@len,f
  5789  17A0  3192  228F  3197   	fcall	_i2c1_read
  5790  17A3  0020               	movlb	0	; select bank0
  5791  17A4  00E7               	movwf	??_sen+3
  5792  17A5  0867               	movf	??_sen+3,w
  5793  17A6  00EB               	movwf	sen@status
  5794                           
  5795                           ;main.c: 266: _delay((unsigned long)((100)*(32000000/4000000.0)));
  5796  17A7  30A0               	movlw	160
  5797  17A8                     u7117:	
  5798  17A8  3200               	nop2
  5799  17A9  0B89               	decfsz	9,f
  5800  17AA  2FA8               	goto	u7117
  5801                           
  5802                           ;main.c: 267: if (status == 0) {
  5803  17AB  0020               	movlb	0	; select bank0
  5804  17AC  086B               	movf	sen@status,w
  5805  17AD  1D03               	btfss	3,2
  5806  17AE  2FFD               	goto	l5773
  5807                           
  5808                           ;main.c: 268: status = i2c1_read(dev_addr, 0x07, read_buf, length);
  5809  17AF  086C               	movf	sen@dev_addr,w
  5810  17B0  00E4               	movwf	??_sen
  5811  17B1  01E5               	clrf	??_sen+1
  5812  17B2  0864               	movf	??_sen,w
  5813  17B3  00B0               	movwf	i2c1_read@dev_addr
  5814  17B4  0865               	movf	??_sen+1,w
  5815  17B5  00B1               	movwf	i2c1_read@dev_addr+1
  5816  17B6  3007               	movlw	7
  5817  17B7  00E6               	movwf	??_sen+2
  5818  17B8  0866               	movf	??_sen+2,w
  5819  17B9  00B2               	movwf	i2c1_read@reg_addr
  5820  17BA  30BC               	movlw	low _read_buf
  5821  17BB  00B3               	movwf	i2c1_read@pbuf
  5822  17BC  3001               	movlw	high _read_buf
  5823  17BD  00B4               	movwf	i2c1_read@pbuf+1
  5824  17BE  086A               	movf	sen@length,w
  5825  17BF  00E7               	movwf	??_sen+3
  5826  17C0  0867               	movf	??_sen+3,w
  5827  17C1  00B5               	movwf	i2c1_read@len
  5828  17C2  3192  228F  3197   	fcall	_i2c1_read
  5829  17C5  0020               	movlb	0	; select bank0
  5830  17C6  00E8               	movwf	??_sen+4
  5831  17C7  0868               	movf	??_sen+4,w
  5832  17C8  00EB               	movwf	sen@status
  5833                           
  5834                           ;main.c: 269: _delay((unsigned long)((100)*(32000000/4000000.0)));
  5835  17C9  30A0               	movlw	160
  5836  17CA                     u7127:	
  5837  17CA  3200               	nop2
  5838  17CB  0B89               	decfsz	9,f
  5839  17CC  2FCA               	goto	u7127
  5840                           
  5841                           ;main.c: 270: if (status == 0) {
  5842  17CD  0020               	movlb	0	; select bank0
  5843  17CE  086B               	movf	sen@status,w
  5844  17CF  1D03               	btfss	3,2
  5845  17D0  2FFD               	goto	l5773
  5846                           
  5847                           ;main.c: 271: PROTOCOL_Print_TLV(dev_addr, type, length, read_buf);
  5848  17D1  0869               	movf	sen@type,w
  5849  17D2  00E4               	movwf	??_sen
  5850  17D3  0864               	movf	??_sen,w
  5851  17D4  00CC               	movwf	PROTOCOL_Print_TLV@type
  5852  17D5  086A               	movf	sen@length,w
  5853  17D6  00E5               	movwf	??_sen+1
  5854  17D7  0865               	movf	??_sen+1,w
  5855  17D8  00CD               	movwf	PROTOCOL_Print_TLV@length
  5856  17D9  30BC               	movlw	(low (_read_buf| (0+256)))& (0+255)
  5857  17DA  00E6               	movwf	??_sen+2
  5858  17DB  0866               	movf	??_sen+2,w
  5859  17DC  00CE               	movwf	PROTOCOL_Print_TLV@pbuffer
  5860  17DD  086C               	movf	sen@dev_addr,w
  5861  17DE  318D  2585  3197   	fcall	_PROTOCOL_Print_TLV
  5862                           
  5863                           ;main.c: 273: if (edge_func) edge_func(dev_addr, type, length, read_buf);
  5864  17E1  0022               	movlb	2	; select bank2
  5865  17E2  083B               	movf	_edge_func^(0+256),w
  5866  17E3  043C               	iorwf	(_edge_func+1)^(0+256),w
  5867  17E4  1903               	btfsc	3,2
  5868  17E5  2FFD               	goto	l5773
  5869  17E6  0020               	movlb	0	; select bank0
  5870  17E7  086C               	movf	sen@dev_addr,w
  5871  17E8  00E4               	movwf	??_sen
  5872  17E9  0864               	movf	??_sen,w
  5873  17EA  00DB               	movwf	edge_meter@dev_addr
  5874  17EB  0869               	movf	sen@type,w
  5875  17EC  00E5               	movwf	??_sen+1
  5876  17ED  0865               	movf	??_sen+1,w
  5877  17EE  00DC               	movwf	edge_meter@type
  5878  17EF  086A               	movf	sen@length,w
  5879  17F0  00E6               	movwf	??_sen+2
  5880  17F1  0866               	movf	??_sen+2,w
  5881  17F2  00DD               	movwf	edge_meter@length
  5882  17F3  30BC               	movlw	(low (_read_buf| (0+256)))& (0+255)
  5883  17F4  00E7               	movwf	??_sen+3
  5884  17F5  0867               	movf	??_sen+3,w
  5885  17F6  00DE               	movwf	edge_meter@pbuf
  5886  17F7  0022               	movlb	2	; select bank2
  5887  17F8  083C               	movf	(_edge_func+1)^(0+256),w
  5888  17F9  008A               	movwf	10
  5889  17FA  083B               	movf	_edge_func^(0+256),w
  5890  17FB  000A               	callw
  5891  17FC  3197               	pagesel	$
  5892  17FD                     l5773:	
  5893                           
  5894                           ;main.c: 274: }
  5895                           ;main.c: 275: }
  5896                           ;main.c: 276: }
  5897                           ;main.c: 277: }
  5898                           ;main.c: 278: return status;
  5899  17FD  0020               	movlb	0	; select bank0
  5900  17FE  086B               	movf	sen@status,w
  5901  17FF  0008               	return
  5902  1800                     __end_of_sen:	
  5903                           
  5904                           	psect	text14
  5905  0388                     __ptext14:	
  5906 ;; *************** function _edge_meter *****************
  5907 ;; Defined at:
  5908 ;;		line 354 in file "main.c"
  5909 ;; Parameters:    Size  Location     Type
  5910 ;;  dev_addr        1   59[BANK0 ] unsigned char 
  5911 ;;  type            1   60[BANK0 ] unsigned char 
  5912 ;;  length          1   61[BANK0 ] unsigned char 
  5913 ;;  pbuf            1   62[BANK0 ] PTR unsigned char 
  5914 ;;		 -> read_buf(16), NULL(0), 
  5915 ;; Auto vars:     Size  Location     Type
  5916 ;;  buf            48    0[BANK1 ] unsigned char [48]
  5917 ;;  rms10           3   48[BANK1 ] unsigned char [48]
  5918 ;;  speed10         2   70[BANK1 ] unsigned int 
  5919 ;;  z               2   68[BANK1 ] unsigned int 
  5920 ;;  y               2   66[BANK1 ] unsigned int 
  5921 ;;  x               2   64[BANK1 ] unsigned int 
  5922 ;;  rpm             2   62[BANK1 ] unsigned int 
  5923 ;; Return value:  Size  Location     Type
  5924 ;;                  1    wreg      void 
  5925 ;; Registers used:
  5926 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  5927 ;; Tracked objects:
  5928 ;;		On entry : 0/0
  5929 ;;		On exit  : 0/0
  5930 ;;		Unchanged: 0/0
  5931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  5932 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5933 ;;      Locals:         0       0      76       0       0       0       0       0       0       0       0       0       
      +0       0
  5934 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  5935 ;;      Totals:         0       9      76       0       0       0       0       0       0       0       0       0       
      +0       0
  5936 ;;Total ram usage:       85 bytes
  5937 ;; Hardware stack levels used:    1
  5938 ;; Hardware stack levels required when called:    9
  5939 ;; This function calls:
  5940 ;;		___awdiv
  5941 ;;		___ftmul
  5942 ;;		___fttol
  5943 ;;		___lbtoft
  5944 ;;		___lwdiv
  5945 ;;		___lwmod
  5946 ;;		___wmul
  5947 ;;		_abs
  5948 ;;		_command_handler
  5949 ;;		_sprintf
  5950 ;; This function is called by:
  5951 ;;		_command_handler
  5952 ;;		_sen
  5953 ;;		_inv_handler
  5954 ;; This function uses a non-reentrant model
  5955 ;;
  5956                           
  5957                           
  5958                           ;psect for function _edge_meter
  5959  0388                     _edge_meter:	
  5960                           
  5961                           ;main.c: 355: static uint8_t pulses = 0;
  5962                           ;main.c: 356: static uint8_t sec = 0;
  5963                           ;main.c: 357: static bool initialized = 0;
  5964                           ;main.c: 358: uint16_t speed10 = 0;
  5965                           
  5966                           ;incstack = 0
  5967                           ; Regs used in _edge_meter: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  5968  0388  0021               	movlb	1	; select bank1
  5969  0389  01E6               	clrf	edge_meter@speed10^(0+128)
  5970  038A  01E7               	clrf	(edge_meter@speed10+1)^(0+128)
  5971                           
  5972                           ;main.c: 359: uint16_t rpm = 0;
  5973  038B  01DE               	clrf	edge_meter@rpm^(0+128)
  5974  038C  01DF               	clrf	(edge_meter@rpm+1)^(0+128)
  5975                           
  5976                           ;main.c: 360: double rms10 = 0;
  5977  038D  3000               	movlw	0
  5978  038E  00D0               	movwf	edge_meter@rms10^(0+128)
  5979  038F  3000               	movlw	0
  5980  0390  00D1               	movwf	(edge_meter@rms10+1)^(0+128)
  5981  0391  3000               	movlw	0
  5982  0392  00D2               	movwf	(edge_meter@rms10+2)^(0+128)
  5983                           
  5984                           ;main.c: 361: uint16_t x, y, z;
  5985                           ;main.c: 362: char buf[48];
  5986                           ;main.c: 363: if (!initialized) {
  5987  0393  0022               	movlb	2	; select bank2
  5988  0394  084B               	movf	edge_meter@initialized^(0+256),w
  5989  0395  1D03               	btfss	3,2
  5990  0396  2E1B               	goto	l5735
  5991                           
  5992                           ;main.c: 364: sprintf(buf, "I2C:%d\0", 0x10);
  5993  0397  308B               	movlw	low (STR_18| (0+32768))
  5994  0398  0020               	movlb	0	; select bank0
  5995  0399  00C1               	movwf	sprintf@f
  5996  039A  3091               	movlw	high (STR_18| (0+32768))
  5997  039B  00C2               	movwf	sprintf@f+1
  5998  039C  3010               	movlw	16
  5999  039D  00C3               	movwf	?_sprintf+2
  6000  039E  3000               	movlw	0
  6001  039F  00C4               	movwf	?_sprintf+3
  6002  03A0  30A0               	movlw	(low (edge_meter@buf| 0))& (0+255)
  6003  03A1  3192  221F  3183   	fcall	_sprintf
  6004                           
  6005                           ;main.c: 365: command_handler(buf);
  6006  03A4  30A0               	movlw	low edge_meter@buf
  6007  03A5  0020               	movlb	0	; select bank0
  6008  03A6  00D0               	movwf	command_handler@buf
  6009  03A7  3000               	movlw	high edge_meter@buf
  6010  03A8  00D1               	movwf	command_handler@buf+1
  6011  03A9  318B  2382  3183   	fcall	_command_handler
  6012                           
  6013                           ;main.c: 366: sprintf(buf, "CLR\0");
  6014  03AC  30BF               	movlw	low (STR_19| (0+32768))
  6015  03AD  0020               	movlb	0	; select bank0
  6016  03AE  00C1               	movwf	sprintf@f
  6017  03AF  3091               	movlw	high (STR_19| (0+32768))
  6018  03B0  00C2               	movwf	sprintf@f+1
  6019  03B1  30A0               	movlw	(low (edge_meter@buf| 0))& (0+255)
  6020  03B2  3192  221F  3183   	fcall	_sprintf
  6021                           
  6022                           ;main.c: 367: command_handler(buf);
  6023  03B5  30A0               	movlw	low edge_meter@buf
  6024  03B6  0020               	movlb	0	; select bank0
  6025  03B7  00D0               	movwf	command_handler@buf
  6026  03B8  3000               	movlw	high edge_meter@buf
  6027  03B9  00D1               	movwf	command_handler@buf+1
  6028  03BA  318B  2382  3183   	fcall	_command_handler
  6029                           
  6030                           ;main.c: 368: sprintf(buf, "HST:STARTING...\0");
  6031  03BD  30E2               	movlw	low (STR_20| (0+32768))
  6032  03BE  0020               	movlb	0	; select bank0
  6033  03BF  00C1               	movwf	sprintf@f
  6034  03C0  3090               	movlw	high (STR_20| (0+32768))
  6035  03C1  00C2               	movwf	sprintf@f+1
  6036  03C2  30A0               	movlw	(low (edge_meter@buf| 0))& (0+255)
  6037  03C3  3192  221F  3183   	fcall	_sprintf
  6038                           
  6039                           ;main.c: 369: command_handler(buf);
  6040  03C6  30A0               	movlw	low edge_meter@buf
  6041  03C7  0020               	movlb	0	; select bank0
  6042  03C8  00D0               	movwf	command_handler@buf
  6043  03C9  3000               	movlw	high edge_meter@buf
  6044  03CA  00D1               	movwf	command_handler@buf+1
  6045  03CB  318B  2382  3183   	fcall	_command_handler
  6046                           
  6047                           ;main.c: 370: initialized = 1;
  6048  03CE  0022               	movlb	2	; select bank2
  6049  03CF  01CB               	clrf	edge_meter@initialized^(0+256)
  6050  03D0  0ACB               	incf	edge_meter@initialized^(0+256),f
  6051                           
  6052                           ;main.c: 371: }
  6053                           ;main.c: 372: switch(dev_addr) {
  6054  03D1  2E1B               	goto	l5735
  6055  03D2                     l5689:	
  6056                           ;main.c: 373: case 0x01:
  6057                           
  6058                           
  6059                           ;main.c: 374: if (++sec >= 5) {
  6060  03D2  3001               	movlw	1
  6061  03D3  0020               	movlb	0	; select bank0
  6062  03D4  00DF               	movwf	??_edge_meter
  6063  03D5  085F               	movf	??_edge_meter,w
  6064  03D6  0022               	movlb	2	; select bank2
  6065  03D7  07CC               	addwf	edge_meter@sec^(0+256),f
  6066  03D8  3005               	movlw	5
  6067  03D9  024C               	subwf	edge_meter@sec^(0+256),w
  6068  03DA  1C03               	skipc
  6069  03DB  0008               	return
  6070                           
  6071                           ;main.c: 375: rpm = pulses * 12;
  6072  03DC  084D               	movf	edge_meter@pulses^(0+256),w
  6073  03DD  0020               	movlb	0	; select bank0
  6074  03DE  00DF               	movwf	??_edge_meter
  6075  03DF  01E0               	clrf	??_edge_meter+1
  6076  03E0  085F               	movf	??_edge_meter,w
  6077  03E1  00A0               	movwf	___wmul@multiplier
  6078  03E2  0860               	movf	??_edge_meter+1,w
  6079  03E3  00A1               	movwf	___wmul@multiplier+1
  6080  03E4  300C               	movlw	12
  6081  03E5  00A2               	movwf	___wmul@multiplicand
  6082  03E6  3000               	movlw	0
  6083  03E7  00A3               	movwf	___wmul@multiplicand+1
  6084  03E8  319B  238B  3183   	fcall	___wmul
  6085  03EB  0020               	movlb	0	; select bank0
  6086  03EC  0821               	movf	?___wmul+1,w
  6087  03ED  0021               	movlb	1	; select bank1
  6088  03EE  00DF               	movwf	(edge_meter@rpm+1)^(0+128)
  6089  03EF  0020               	movlb	0	; select bank0
  6090  03F0  0820               	movf	?___wmul,w
  6091  03F1  0021               	movlb	1	; select bank1
  6092  03F2  00DE               	movwf	edge_meter@rpm^(0+128)
  6093                           
  6094                           ;main.c: 376: speed10 = (uint16_t)(CIRCUMFERENCE * pulses * 12.0 * 60.0 * 10.0);
  6095  03F3  0022               	movlb	2	; select bank2
  6096  03F4  084D               	movf	edge_meter@pulses^(0+256),w
  6097  03F5  319B  2339  3183   	fcall	___lbtoft
  6098  03F8  0020               	movlb	0	; select bank0
  6099  03F9  0828               	movf	?___lbtoft,w
  6100  03FA  00B3               	movwf	___ftmul@f2
  6101  03FB  0829               	movf	?___lbtoft+1,w
  6102  03FC  00B4               	movwf	___ftmul@f2+1
  6103  03FD  082A               	movf	?___lbtoft+2,w
  6104  03FE  00B5               	movwf	___ftmul@f2+2
  6105  03FF  300B               	movlw	low (_CIRCUMFERENCE| (0+32768))
  6106  0400  0084               	movwf	4
  6107  0401  3090               	movlw	high (_CIRCUMFERENCE| (0+32768))
  6108  0402  0085               	movwf	5
  6109  0403  3F00               	moviw [0]fsr0
  6110  0404  00B0               	movwf	___ftmul@f1
  6111  0405  3F01               	moviw [1]fsr0
  6112  0406  00B1               	movwf	___ftmul@f1+1
  6113  0407  3F02               	moviw [2]fsr0
  6114  0408  00B2               	movwf	___ftmul@f1+2
  6115  0409  3195  25C3  3183   	fcall	___ftmul
  6116  040C  0020               	movlb	0	; select bank0
  6117  040D  0830               	movf	?___ftmul,w
  6118  040E  0021               	movlb	1	; select bank1
  6119  040F  00D3               	movwf	_edge_meter$1920^(0+128)
  6120  0410  0020               	movlb	0	; select bank0
  6121  0411  0831               	movf	?___ftmul+1,w
  6122  0412  0021               	movlb	1	; select bank1
  6123  0413  00D4               	movwf	(_edge_meter$1920+1)^(0+128)
  6124  0414  0020               	movlb	0	; select bank0
  6125  0415  0832               	movf	?___ftmul+2,w
  6126  0416  0021               	movlb	1	; select bank1
  6127  0417  00D5               	movwf	(_edge_meter$1920+2)^(0+128)
  6128                           
  6129                           ;main.c: 376: speed10 = (uint16_t)(CIRCUMFERENCE * pulses * 12.0 * 60.0 * 10.0);
  6130  0418  0853               	movf	_edge_meter$1920^(0+128),w
  6131  0419  0020               	movlb	0	; select bank0
  6132  041A  00B3               	movwf	___ftmul@f2
  6133  041B  0021               	movlb	1	; select bank1
  6134  041C  0854               	movf	(_edge_meter$1920+1)^(0+128),w
  6135  041D  0020               	movlb	0	; select bank0
  6136  041E  00B4               	movwf	___ftmul@f2+1
  6137  041F  0021               	movlb	1	; select bank1
  6138  0420  0855               	movf	(_edge_meter$1920+2)^(0+128),w
  6139  0421  0020               	movlb	0	; select bank0
  6140  0422  00B5               	movwf	___ftmul@f2+2
  6141  0423  3000               	movlw	0
  6142  0424  00B0               	movwf	___ftmul@f1
  6143  0425  30E1               	movlw	225
  6144  0426  00B1               	movwf	___ftmul@f1+1
  6145  0427  3045               	movlw	69
  6146  0428  00B2               	movwf	___ftmul@f1+2
  6147  0429  3195  25C3  3183   	fcall	___ftmul
  6148  042C  0020               	movlb	0	; select bank0
  6149  042D  0830               	movf	?___ftmul,w
  6150  042E  00C0               	movwf	___fttol@f1
  6151  042F  0831               	movf	?___ftmul+1,w
  6152  0430  00C1               	movwf	___fttol@f1+1
  6153  0431  0832               	movf	?___ftmul+2,w
  6154  0432  00C2               	movwf	___fttol@f1+2
  6155  0433  3195  253C  3183   	fcall	___fttol
  6156  0436  0020               	movlb	0	; select bank0
  6157  0437  0841               	movf	?___fttol+1,w
  6158  0438  0021               	movlb	1	; select bank1
  6159  0439  00E7               	movwf	(edge_meter@speed10+1)^(0+128)
  6160  043A  0020               	movlb	0	; select bank0
  6161  043B  0840               	movf	?___fttol,w
  6162  043C  0021               	movlb	1	; select bank1
  6163  043D  00E6               	movwf	edge_meter@speed10^(0+128)
  6164                           
  6165                           ;main.c: 377: sprintf(buf, "HST:%2d.%dkm/h,%4drpm\0", speed10 / 10, speed10 % 10, rpm);
  6166  043E  300A               	movlw	10
  6167  043F  0020               	movlb	0	; select bank0
  6168  0440  00A0               	movwf	___lwdiv@divisor
  6169  0441  3000               	movlw	0
  6170  0442  00A1               	movwf	___lwdiv@divisor+1
  6171  0443  0021               	movlb	1	; select bank1
  6172  0444  0867               	movf	(edge_meter@speed10+1)^(0+128),w
  6173  0445  0020               	movlb	0	; select bank0
  6174  0446  00A3               	movwf	___lwdiv@dividend+1
  6175  0447  0021               	movlb	1	; select bank1
  6176  0448  0866               	movf	edge_meter@speed10^(0+128),w
  6177  0449  0020               	movlb	0	; select bank0
  6178  044A  00A2               	movwf	___lwdiv@dividend
  6179  044B  319E  2606  3183   	fcall	___lwdiv
  6180  044E  0020               	movlb	0	; select bank0
  6181  044F  0821               	movf	?___lwdiv+1,w
  6182  0450  0021               	movlb	1	; select bank1
  6183  0451  00E9               	movwf	(_edge_meter$1921+1)^(0+128)
  6184  0452  0020               	movlb	0	; select bank0
  6185  0453  0820               	movf	?___lwdiv,w
  6186  0454  0021               	movlb	1	; select bank1
  6187  0455  00E8               	movwf	_edge_meter$1921^(0+128)
  6188                           
  6189                           ;main.c: 377: sprintf(buf, "HST:%2d.%dkm/h,%4drpm\0", speed10 / 10, speed10 % 10, rpm);
  6190  0456  300A               	movlw	10
  6191  0457  0020               	movlb	0	; select bank0
  6192  0458  00A8               	movwf	___lwmod@divisor
  6193  0459  3000               	movlw	0
  6194  045A  00A9               	movwf	___lwmod@divisor+1
  6195  045B  0021               	movlb	1	; select bank1
  6196  045C  0867               	movf	(edge_meter@speed10+1)^(0+128),w
  6197  045D  0020               	movlb	0	; select bank0
  6198  045E  00AB               	movwf	___lwmod@dividend+1
  6199  045F  0021               	movlb	1	; select bank1
  6200  0460  0866               	movf	edge_meter@speed10^(0+128),w
  6201  0461  0020               	movlb	0	; select bank0
  6202  0462  00AA               	movwf	___lwmod@dividend
  6203  0463  319D  25AA  3183   	fcall	___lwmod
  6204  0466  0020               	movlb	0	; select bank0
  6205  0467  0829               	movf	?___lwmod+1,w
  6206  0468  0021               	movlb	1	; select bank1
  6207  0469  00EB               	movwf	(_edge_meter$1922+1)^(0+128)
  6208  046A  0020               	movlb	0	; select bank0
  6209  046B  0828               	movf	?___lwmod,w
  6210  046C  0021               	movlb	1	; select bank1
  6211  046D  00EA               	movwf	_edge_meter$1922^(0+128)
  6212                           
  6213                           ;main.c: 377: sprintf(buf, "HST:%2d.%dkm/h,%4drpm\0", speed10 / 10, speed10 % 10, rpm);
  6214  046E  309F               	movlw	low (STR_21| (0+32768))
  6215  046F  0020               	movlb	0	; select bank0
  6216  0470  00C1               	movwf	sprintf@f
  6217  0471  3090               	movlw	high (STR_21| (0+32768))
  6218  0472  00C2               	movwf	sprintf@f+1
  6219  0473  0021               	movlb	1	; select bank1
  6220  0474  0869               	movf	(_edge_meter$1921+1)^(0+128),w
  6221  0475  0020               	movlb	0	; select bank0
  6222  0476  00C4               	movwf	?_sprintf+3
  6223  0477  0021               	movlb	1	; select bank1
  6224  0478  0868               	movf	_edge_meter$1921^(0+128),w
  6225  0479  0020               	movlb	0	; select bank0
  6226  047A  00C3               	movwf	?_sprintf+2
  6227  047B  0021               	movlb	1	; select bank1
  6228  047C  086B               	movf	(_edge_meter$1922+1)^(0+128),w
  6229  047D  0020               	movlb	0	; select bank0
  6230  047E  00C6               	movwf	?_sprintf+5
  6231  047F  0021               	movlb	1	; select bank1
  6232  0480  086A               	movf	_edge_meter$1922^(0+128),w
  6233  0481  0020               	movlb	0	; select bank0
  6234  0482  00C5               	movwf	?_sprintf+4
  6235  0483  0021               	movlb	1	; select bank1
  6236  0484  085F               	movf	(edge_meter@rpm+1)^(0+128),w
  6237  0485  0020               	movlb	0	; select bank0
  6238  0486  00C8               	movwf	?_sprintf+7
  6239  0487  0021               	movlb	1	; select bank1
  6240  0488  085E               	movf	edge_meter@rpm^(0+128),w
  6241  0489  0020               	movlb	0	; select bank0
  6242  048A  00C7               	movwf	?_sprintf+6
  6243  048B  30A0               	movlw	(low (edge_meter@buf| 0))& (0+255)
  6244  048C  3192  221F  3183   	fcall	_sprintf
  6245                           
  6246                           ;main.c: 378: command_handler(buf);
  6247  048F  30A0               	movlw	low edge_meter@buf
  6248  0490  0020               	movlb	0	; select bank0
  6249  0491  00D0               	movwf	command_handler@buf
  6250  0492  3000               	movlw	high edge_meter@buf
  6251  0493  00D1               	movwf	command_handler@buf+1
  6252  0494  318B  2382  3183   	fcall	_command_handler
  6253                           
  6254                           ;main.c: 379: sprintf(buf, "NWL\0");
  6255  0497  30BA               	movlw	low (STR_22| (0+32768))
  6256  0498  0020               	movlb	0	; select bank0
  6257  0499  00C1               	movwf	sprintf@f
  6258  049A  3091               	movlw	high (STR_22| (0+32768))
  6259  049B  00C2               	movwf	sprintf@f+1
  6260  049C  30A0               	movlw	(low (edge_meter@buf| 0))& (0+255)
  6261  049D  3192  221F  3183   	fcall	_sprintf
  6262                           
  6263                           ;main.c: 380: command_handler(buf);
  6264  04A0  30A0               	movlw	low edge_meter@buf
  6265  04A1  0020               	movlb	0	; select bank0
  6266  04A2  00D0               	movwf	command_handler@buf
  6267  04A3  3000               	movlw	high edge_meter@buf
  6268  04A4  00D1               	movwf	command_handler@buf+1
  6269  04A5  318B  2382  3183   	fcall	_command_handler
  6270                           
  6271                           ;main.c: 381: sprintf(buf, "STR:%1d.%1dG, %1d.%1dG, %1d.%1dG \0", x/10, x%10, y/10, y%10
      +                          , z/10, z%10);
  6272  04A8  300A               	movlw	10
  6273  04A9  0020               	movlb	0	; select bank0
  6274  04AA  00A0               	movwf	___lwdiv@divisor
  6275  04AB  3000               	movlw	0
  6276  04AC  00A1               	movwf	___lwdiv@divisor+1
  6277  04AD  0021               	movlb	1	; select bank1
  6278  04AE  0861               	movf	(edge_meter@x+1)^(0+128),w
  6279  04AF  0020               	movlb	0	; select bank0
  6280  04B0  00A3               	movwf	___lwdiv@dividend+1
  6281  04B1  0021               	movlb	1	; select bank1
  6282  04B2  0860               	movf	edge_meter@x^(0+128),w
  6283  04B3  0020               	movlb	0	; select bank0
  6284  04B4  00A2               	movwf	___lwdiv@dividend
  6285  04B5  319E  2606  3183   	fcall	___lwdiv
  6286  04B8  0020               	movlb	0	; select bank0
  6287  04B9  0821               	movf	?___lwdiv+1,w
  6288  04BA  0021               	movlb	1	; select bank1
  6289  04BB  00E9               	movwf	(_edge_meter$1921+1)^(0+128)
  6290  04BC  0020               	movlb	0	; select bank0
  6291  04BD  0820               	movf	?___lwdiv,w
  6292  04BE  0021               	movlb	1	; select bank1
  6293  04BF  00E8               	movwf	_edge_meter$1921^(0+128)
  6294                           
  6295                           ;main.c: 381: sprintf(buf, "STR:%1d.%1dG, %1d.%1dG, %1d.%1dG \0", x/10, x%10, y/10, y%10
      +                          , z/10, z%10);
  6296  04C0  300A               	movlw	10
  6297  04C1  0020               	movlb	0	; select bank0
  6298  04C2  00A8               	movwf	___lwmod@divisor
  6299  04C3  3000               	movlw	0
  6300  04C4  00A9               	movwf	___lwmod@divisor+1
  6301  04C5  0021               	movlb	1	; select bank1
  6302  04C6  0861               	movf	(edge_meter@x+1)^(0+128),w
  6303  04C7  0020               	movlb	0	; select bank0
  6304  04C8  00AB               	movwf	___lwmod@dividend+1
  6305  04C9  0021               	movlb	1	; select bank1
  6306  04CA  0860               	movf	edge_meter@x^(0+128),w
  6307  04CB  0020               	movlb	0	; select bank0
  6308  04CC  00AA               	movwf	___lwmod@dividend
  6309  04CD  319D  25AA  3183   	fcall	___lwmod
  6310  04D0  0020               	movlb	0	; select bank0
  6311  04D1  0829               	movf	?___lwmod+1,w
  6312  04D2  0021               	movlb	1	; select bank1
  6313  04D3  00EB               	movwf	(_edge_meter$1922+1)^(0+128)
  6314  04D4  0020               	movlb	0	; select bank0
  6315  04D5  0828               	movf	?___lwmod,w
  6316  04D6  0021               	movlb	1	; select bank1
  6317  04D7  00EA               	movwf	_edge_meter$1922^(0+128)
  6318                           
  6319                           ;main.c: 381: sprintf(buf, "STR:%1d.%1dG, %1d.%1dG, %1d.%1dG \0", x/10, x%10, y/10, y%10
      +                          , z/10, z%10);
  6320  04D8  300A               	movlw	10
  6321  04D9  0020               	movlb	0	; select bank0
  6322  04DA  00A0               	movwf	___lwdiv@divisor
  6323  04DB  3000               	movlw	0
  6324  04DC  00A1               	movwf	___lwdiv@divisor+1
  6325  04DD  0021               	movlb	1	; select bank1
  6326  04DE  0863               	movf	(edge_meter@y+1)^(0+128),w
  6327  04DF  0020               	movlb	0	; select bank0
  6328  04E0  00A3               	movwf	___lwdiv@dividend+1
  6329  04E1  0021               	movlb	1	; select bank1
  6330  04E2  0862               	movf	edge_meter@y^(0+128),w
  6331  04E3  0020               	movlb	0	; select bank0
  6332  04E4  00A2               	movwf	___lwdiv@dividend
  6333  04E5  319E  2606  3183   	fcall	___lwdiv
  6334  04E8  0020               	movlb	0	; select bank0
  6335  04E9  0821               	movf	?___lwdiv+1,w
  6336  04EA  0021               	movlb	1	; select bank1
  6337  04EB  00D7               	movwf	(_edge_meter$1923+1)^(0+128)
  6338  04EC  0020               	movlb	0	; select bank0
  6339  04ED  0820               	movf	?___lwdiv,w
  6340  04EE  0021               	movlb	1	; select bank1
  6341  04EF  00D6               	movwf	_edge_meter$1923^(0+128)
  6342                           
  6343                           ;main.c: 381: sprintf(buf, "STR:%1d.%1dG, %1d.%1dG, %1d.%1dG \0", x/10, x%10, y/10, y%10
      +                          , z/10, z%10);
  6344  04F0  300A               	movlw	10
  6345  04F1  0020               	movlb	0	; select bank0
  6346  04F2  00A8               	movwf	___lwmod@divisor
  6347  04F3  3000               	movlw	0
  6348  04F4  00A9               	movwf	___lwmod@divisor+1
  6349  04F5  0021               	movlb	1	; select bank1
  6350  04F6  0863               	movf	(edge_meter@y+1)^(0+128),w
  6351  04F7  0020               	movlb	0	; select bank0
  6352  04F8  00AB               	movwf	___lwmod@dividend+1
  6353  04F9  0021               	movlb	1	; select bank1
  6354  04FA  0862               	movf	edge_meter@y^(0+128),w
  6355  04FB  0020               	movlb	0	; select bank0
  6356  04FC  00AA               	movwf	___lwmod@dividend
  6357  04FD  319D  25AA  3183   	fcall	___lwmod
  6358  0500  0020               	movlb	0	; select bank0
  6359  0501  0829               	movf	?___lwmod+1,w
  6360  0502  0021               	movlb	1	; select bank1
  6361  0503  00D9               	movwf	(_edge_meter$1924+1)^(0+128)
  6362  0504  0020               	movlb	0	; select bank0
  6363  0505  0828               	movf	?___lwmod,w
  6364  0506  0021               	movlb	1	; select bank1
  6365  0507  00D8               	movwf	_edge_meter$1924^(0+128)
  6366                           
  6367                           ;main.c: 381: sprintf(buf, "STR:%1d.%1dG, %1d.%1dG, %1d.%1dG \0", x/10, x%10, y/10, y%10
      +                          , z/10, z%10);
  6368  0508  300A               	movlw	10
  6369  0509  0020               	movlb	0	; select bank0
  6370  050A  00A0               	movwf	___lwdiv@divisor
  6371  050B  3000               	movlw	0
  6372  050C  00A1               	movwf	___lwdiv@divisor+1
  6373  050D  0021               	movlb	1	; select bank1
  6374  050E  0865               	movf	(edge_meter@z+1)^(0+128),w
  6375  050F  0020               	movlb	0	; select bank0
  6376  0510  00A3               	movwf	___lwdiv@dividend+1
  6377  0511  0021               	movlb	1	; select bank1
  6378  0512  0864               	movf	edge_meter@z^(0+128),w
  6379  0513  0020               	movlb	0	; select bank0
  6380  0514  00A2               	movwf	___lwdiv@dividend
  6381  0515  319E  2606  3183   	fcall	___lwdiv
  6382  0518  0020               	movlb	0	; select bank0
  6383  0519  0821               	movf	?___lwdiv+1,w
  6384  051A  0021               	movlb	1	; select bank1
  6385  051B  00DB               	movwf	(_edge_meter$1925+1)^(0+128)
  6386  051C  0020               	movlb	0	; select bank0
  6387  051D  0820               	movf	?___lwdiv,w
  6388  051E  0021               	movlb	1	; select bank1
  6389  051F  00DA               	movwf	_edge_meter$1925^(0+128)
  6390                           
  6391                           ;main.c: 381: sprintf(buf, "STR:%1d.%1dG, %1d.%1dG, %1d.%1dG \0", x/10, x%10, y/10, y%10
      +                          , z/10, z%10);
  6392  0520  300A               	movlw	10
  6393  0521  0020               	movlb	0	; select bank0
  6394  0522  00A8               	movwf	___lwmod@divisor
  6395  0523  3000               	movlw	0
  6396  0524  00A9               	movwf	___lwmod@divisor+1
  6397  0525  0021               	movlb	1	; select bank1
  6398  0526  0865               	movf	(edge_meter@z+1)^(0+128),w
  6399  0527  0020               	movlb	0	; select bank0
  6400  0528  00AB               	movwf	___lwmod@dividend+1
  6401  0529  0021               	movlb	1	; select bank1
  6402  052A  0864               	movf	edge_meter@z^(0+128),w
  6403  052B  0020               	movlb	0	; select bank0
  6404  052C  00AA               	movwf	___lwmod@dividend
  6405  052D  319D  25AA  3183   	fcall	___lwmod
  6406  0530  0020               	movlb	0	; select bank0
  6407  0531  0829               	movf	?___lwmod+1,w
  6408  0532  0021               	movlb	1	; select bank1
  6409  0533  00DD               	movwf	(_edge_meter$1926+1)^(0+128)
  6410  0534  0020               	movlb	0	; select bank0
  6411  0535  0828               	movf	?___lwmod,w
  6412  0536  0021               	movlb	1	; select bank1
  6413  0537  00DC               	movwf	_edge_meter$1926^(0+128)
  6414                           
  6415                           ;main.c: 381: sprintf(buf, "STR:%1d.%1dG, %1d.%1dG, %1d.%1dG \0", x/10, x%10, y/10, y%10
      +                          , z/10, z%10);
  6416  0538  3011               	movlw	low (STR_23| (0+32768))
  6417  0539  0020               	movlb	0	; select bank0
  6418  053A  00C1               	movwf	sprintf@f
  6419  053B  3090               	movlw	high (STR_23| (0+32768))
  6420  053C  00C2               	movwf	sprintf@f+1
  6421  053D  0021               	movlb	1	; select bank1
  6422  053E  0869               	movf	(_edge_meter$1921+1)^(0+128),w
  6423  053F  0020               	movlb	0	; select bank0
  6424  0540  00C4               	movwf	?_sprintf+3
  6425  0541  0021               	movlb	1	; select bank1
  6426  0542  0868               	movf	_edge_meter$1921^(0+128),w
  6427  0543  0020               	movlb	0	; select bank0
  6428  0544  00C3               	movwf	?_sprintf+2
  6429  0545  0021               	movlb	1	; select bank1
  6430  0546  086B               	movf	(_edge_meter$1922+1)^(0+128),w
  6431  0547  0020               	movlb	0	; select bank0
  6432  0548  00C6               	movwf	?_sprintf+5
  6433  0549  0021               	movlb	1	; select bank1
  6434  054A  086A               	movf	_edge_meter$1922^(0+128),w
  6435  054B  0020               	movlb	0	; select bank0
  6436  054C  00C5               	movwf	?_sprintf+4
  6437  054D  0021               	movlb	1	; select bank1
  6438  054E  0857               	movf	(_edge_meter$1923+1)^(0+128),w
  6439  054F  0020               	movlb	0	; select bank0
  6440  0550  00C8               	movwf	?_sprintf+7
  6441  0551  0021               	movlb	1	; select bank1
  6442  0552  0856               	movf	_edge_meter$1923^(0+128),w
  6443  0553  0020               	movlb	0	; select bank0
  6444  0554  00C7               	movwf	?_sprintf+6
  6445  0555  0021               	movlb	1	; select bank1
  6446  0556  0859               	movf	(_edge_meter$1924+1)^(0+128),w
  6447  0557  0020               	movlb	0	; select bank0
  6448  0558  00CA               	movwf	?_sprintf+9
  6449  0559  0021               	movlb	1	; select bank1
  6450  055A  0858               	movf	_edge_meter$1924^(0+128),w
  6451  055B  0020               	movlb	0	; select bank0
  6452  055C  00C9               	movwf	?_sprintf+8
  6453  055D  0021               	movlb	1	; select bank1
  6454  055E  085B               	movf	(_edge_meter$1925+1)^(0+128),w
  6455  055F  0020               	movlb	0	; select bank0
  6456  0560  00CC               	movwf	?_sprintf+11
  6457  0561  0021               	movlb	1	; select bank1
  6458  0562  085A               	movf	_edge_meter$1925^(0+128),w
  6459  0563  0020               	movlb	0	; select bank0
  6460  0564  00CB               	movwf	?_sprintf+10
  6461  0565  0021               	movlb	1	; select bank1
  6462  0566  085D               	movf	(_edge_meter$1926+1)^(0+128),w
  6463  0567  0020               	movlb	0	; select bank0
  6464  0568  00CE               	movwf	?_sprintf+13
  6465  0569  0021               	movlb	1	; select bank1
  6466  056A  085C               	movf	_edge_meter$1926^(0+128),w
  6467  056B  0020               	movlb	0	; select bank0
  6468  056C  00CD               	movwf	?_sprintf+12
  6469  056D  30A0               	movlw	(low (edge_meter@buf| 0))& (0+255)
  6470  056E  3192  221F  3183   	fcall	_sprintf
  6471                           
  6472                           ;main.c: 382: command_handler(buf);
  6473  0571  30A0               	movlw	low edge_meter@buf
  6474  0572  0020               	movlb	0	; select bank0
  6475  0573  00D0               	movwf	command_handler@buf
  6476  0574  3000               	movlw	high edge_meter@buf
  6477  0575  00D1               	movwf	command_handler@buf+1
  6478  0576  318B  2382         	fcall	_command_handler
  6479                           
  6480                           ;main.c: 383: sec = 0;
  6481  0578  0022               	movlb	2	; select bank2
  6482  0579  01CC               	clrf	edge_meter@sec^(0+256)
  6483                           
  6484                           ;main.c: 384: pulses = 0;
  6485  057A  01CD               	clrf	edge_meter@pulses^(0+256)
  6486                           
  6487                           ;main.c: 385: }
  6488                           ;main.c: 386: break;
  6489  057B  0008               	return
  6490  057C                     l5729:	
  6491                           ;main.c: 387: case 0x11:
  6492                           
  6493                           
  6494                           ;main.c: 388: pulses = pulses + pbuf[0] * 256 + pbuf[1];
  6495  057C  0020               	movlb	0	; select bank0
  6496  057D  0A5E               	incf	edge_meter@pbuf,w
  6497  057E  0086               	movwf	6
  6498  057F  3001               	movlw	1	; select bank2/3
  6499  0580  0087               	movwf	7
  6500  0581  0801               	movf	1,w
  6501  0582  0022               	movlb	2	; select bank2
  6502  0583  074D               	addwf	edge_meter@pulses^(0+256),w
  6503  0584  0020               	movlb	0	; select bank0
  6504  0585  00DF               	movwf	??_edge_meter
  6505  0586  085F               	movf	??_edge_meter,w
  6506  0587  0022               	movlb	2	; select bank2
  6507  0588  00CD               	movwf	edge_meter@pulses^(0+256)
  6508                           
  6509                           ;main.c: 389: break;
  6510  0589  0008               	return
  6511  058A                     l5731:	
  6512                           ;main.c: 390: case 0x13:
  6513                           
  6514                           
  6515                           ;main.c: 391: x = abs(pbuf[0] * 256+ pbuf[1])/10;
  6516  058A  300A               	movlw	10
  6517  058B  0020               	movlb	0	; select bank0
  6518  058C  00AB               	movwf	___awdiv@divisor
  6519  058D  3000               	movlw	0
  6520  058E  00AC               	movwf	___awdiv@divisor+1
  6521  058F  0A5E               	incf	edge_meter@pbuf,w
  6522  0590  0086               	movwf	6
  6523  0591  3001               	movlw	1	; select bank2/3
  6524  0592  0087               	movwf	7
  6525  0593  0801               	movf	1,w
  6526  0594  00DF               	movwf	??_edge_meter
  6527  0595  01E0               	clrf	??_edge_meter+1
  6528  0596  085E               	movf	edge_meter@pbuf,w
  6529  0597  0086               	movwf	6
  6530  0598  3001               	movlw	1	; select bank2/3
  6531  0599  0087               	movwf	7
  6532  059A  0801               	movf	1,w
  6533  059B  00E1               	movwf	??_edge_meter+2
  6534  059C  01E2               	clrf	??_edge_meter+3
  6535  059D  0861               	movf	??_edge_meter+2,w
  6536  059E  00E2               	movwf	??_edge_meter+3
  6537  059F  01E1               	clrf	??_edge_meter+2
  6538  05A0  085F               	movf	??_edge_meter,w
  6539  05A1  0761               	addwf	??_edge_meter+2,w
  6540  05A2  00A7               	movwf	abs@a
  6541  05A3  0860               	movf	??_edge_meter+1,w
  6542  05A4  3D62               	addwfc	??_edge_meter+3,w
  6543  05A5  00A8               	movwf	abs@a+1
  6544  05A6  319A  228C  3183   	fcall	_abs
  6545  05A9  0020               	movlb	0	; select bank0
  6546  05AA  0828               	movf	?_abs+1,w
  6547  05AB  00AE               	movwf	___awdiv@dividend+1
  6548  05AC  0827               	movf	?_abs,w
  6549  05AD  00AD               	movwf	___awdiv@dividend
  6550  05AE  319F  27AE  3183   	fcall	___awdiv
  6551  05B1  0020               	movlb	0	; select bank0
  6552  05B2  082C               	movf	?___awdiv+1,w
  6553  05B3  0021               	movlb	1	; select bank1
  6554  05B4  00E1               	movwf	(edge_meter@x+1)^(0+128)
  6555  05B5  0020               	movlb	0	; select bank0
  6556  05B6  082B               	movf	?___awdiv,w
  6557  05B7  0021               	movlb	1	; select bank1
  6558  05B8  00E0               	movwf	edge_meter@x^(0+128)
  6559                           
  6560                           ;main.c: 392: y = abs(pbuf[2] * 256+ pbuf[3])/10;
  6561  05B9  300A               	movlw	10
  6562  05BA  0020               	movlb	0	; select bank0
  6563  05BB  00AB               	movwf	___awdiv@divisor
  6564  05BC  3000               	movlw	0
  6565  05BD  00AC               	movwf	___awdiv@divisor+1
  6566  05BE  085E               	movf	edge_meter@pbuf,w
  6567  05BF  3E03               	addlw	3
  6568  05C0  0086               	movwf	6
  6569  05C1  3001               	movlw	1	; select bank2/3
  6570  05C2  0087               	movwf	7
  6571  05C3  0801               	movf	1,w
  6572  05C4  00DF               	movwf	??_edge_meter
  6573  05C5  01E0               	clrf	??_edge_meter+1
  6574  05C6  085E               	movf	edge_meter@pbuf,w
  6575  05C7  3E02               	addlw	2
  6576  05C8  0086               	movwf	6
  6577  05C9  3001               	movlw	1	; select bank2/3
  6578  05CA  0087               	movwf	7
  6579  05CB  0801               	movf	1,w
  6580  05CC  00E1               	movwf	??_edge_meter+2
  6581  05CD  01E2               	clrf	??_edge_meter+3
  6582  05CE  0861               	movf	??_edge_meter+2,w
  6583  05CF  00E2               	movwf	??_edge_meter+3
  6584  05D0  01E1               	clrf	??_edge_meter+2
  6585  05D1  085F               	movf	??_edge_meter,w
  6586  05D2  0761               	addwf	??_edge_meter+2,w
  6587  05D3  00A7               	movwf	abs@a
  6588  05D4  0860               	movf	??_edge_meter+1,w
  6589  05D5  3D62               	addwfc	??_edge_meter+3,w
  6590  05D6  00A8               	movwf	abs@a+1
  6591  05D7  319A  228C  3183   	fcall	_abs
  6592  05DA  0020               	movlb	0	; select bank0
  6593  05DB  0828               	movf	?_abs+1,w
  6594  05DC  00AE               	movwf	___awdiv@dividend+1
  6595  05DD  0827               	movf	?_abs,w
  6596  05DE  00AD               	movwf	___awdiv@dividend
  6597  05DF  319F  27AE  3183   	fcall	___awdiv
  6598  05E2  0020               	movlb	0	; select bank0
  6599  05E3  082C               	movf	?___awdiv+1,w
  6600  05E4  0021               	movlb	1	; select bank1
  6601  05E5  00E3               	movwf	(edge_meter@y+1)^(0+128)
  6602  05E6  0020               	movlb	0	; select bank0
  6603  05E7  082B               	movf	?___awdiv,w
  6604  05E8  0021               	movlb	1	; select bank1
  6605  05E9  00E2               	movwf	edge_meter@y^(0+128)
  6606                           
  6607                           ;main.c: 393: z = abs(pbuf[4] * 256+ pbuf[5])/10;
  6608  05EA  300A               	movlw	10
  6609  05EB  0020               	movlb	0	; select bank0
  6610  05EC  00AB               	movwf	___awdiv@divisor
  6611  05ED  3000               	movlw	0
  6612  05EE  00AC               	movwf	___awdiv@divisor+1
  6613  05EF  085E               	movf	edge_meter@pbuf,w
  6614  05F0  3E05               	addlw	5
  6615  05F1  0086               	movwf	6
  6616  05F2  3001               	movlw	1	; select bank2/3
  6617  05F3  0087               	movwf	7
  6618  05F4  0801               	movf	1,w
  6619  05F5  00DF               	movwf	??_edge_meter
  6620  05F6  01E0               	clrf	??_edge_meter+1
  6621  05F7  085E               	movf	edge_meter@pbuf,w
  6622  05F8  3E04               	addlw	4
  6623  05F9  0086               	movwf	6
  6624  05FA  3001               	movlw	1	; select bank2/3
  6625  05FB  0087               	movwf	7
  6626  05FC  0801               	movf	1,w
  6627  05FD  00E1               	movwf	??_edge_meter+2
  6628  05FE  01E2               	clrf	??_edge_meter+3
  6629  05FF  0861               	movf	??_edge_meter+2,w
  6630  0600  00E2               	movwf	??_edge_meter+3
  6631  0601  01E1               	clrf	??_edge_meter+2
  6632  0602  085F               	movf	??_edge_meter,w
  6633  0603  0761               	addwf	??_edge_meter+2,w
  6634  0604  00A7               	movwf	abs@a
  6635  0605  0860               	movf	??_edge_meter+1,w
  6636  0606  3D62               	addwfc	??_edge_meter+3,w
  6637  0607  00A8               	movwf	abs@a+1
  6638  0608  319A  228C  3183   	fcall	_abs
  6639  060B  0020               	movlb	0	; select bank0
  6640  060C  0828               	movf	?_abs+1,w
  6641  060D  00AE               	movwf	___awdiv@dividend+1
  6642  060E  0827               	movf	?_abs,w
  6643  060F  00AD               	movwf	___awdiv@dividend
  6644  0610  319F  27AE         	fcall	___awdiv
  6645  0612  0020               	movlb	0	; select bank0
  6646  0613  082C               	movf	?___awdiv+1,w
  6647  0614  0021               	movlb	1	; select bank1
  6648  0615  00E5               	movwf	(edge_meter@z+1)^(0+128)
  6649  0616  0020               	movlb	0	; select bank0
  6650  0617  082B               	movf	?___awdiv,w
  6651  0618  0021               	movlb	1	; select bank1
  6652  0619  00E4               	movwf	edge_meter@z^(0+128)
  6653                           
  6654                           ;main.c: 395: }
  6655                           
  6656                           ;main.c: 394: break;
  6657  061A  0008               	return
  6658  061B                     l5735:	
  6659  061B  0020               	movlb	0	; select bank0
  6660  061C  085B               	movf	edge_meter@dev_addr,w
  6661                           
  6662                           ; Switch size 1, requested type "space"
  6663                           ; Number of cases is 3, Range of values is 1 to 19
  6664                           ; switch strategies available:
  6665                           ; Name         Instructions Cycles
  6666                           ; simple_byte           10     6 (average)
  6667                           ; direct_byte           47     9 (fixed)
  6668                           ; jumptable            263     9 (fixed)
  6669                           ;	Chosen strategy is simple_byte
  6670  061D  3A01               	xorlw	1	; case 1
  6671  061E  1903               	skipnz
  6672  061F  2BD2               	goto	l5689
  6673  0620  3A10               	xorlw	16	; case 17
  6674  0621  1903               	skipnz
  6675  0622  2D7C               	goto	l5729
  6676  0623  3A02               	xorlw	2	; case 19
  6677  0624  1903               	skipnz
  6678  0625  2D8A               	goto	l5731
  6679  0626  2E27               	goto	l595
  6680  0627                     l595:	
  6681  0627  0008               	return
  6682  0628                     __end_of_edge_meter:	
  6683                           
  6684                           	psect	text15
  6685  121F                     __ptext15:	
  6686 ;; *************** function _sprintf *****************
  6687 ;; Defined at:
  6688 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\sprintf.c"
  6689 ;; Parameters:    Size  Location     Type
  6690 ;;  wh              1    wreg     PTR unsigned char 
  6691 ;;		 -> edge_meter@buf(48), 
  6692 ;;  f               2   33[BANK0 ] PTR const unsigned char 
  6693 ;;		 -> STR_23(35), STR_22(5), STR_21(23), STR_20(17), 
  6694 ;;		 -> STR_19(5), STR_18(8), 
  6695 ;; Auto vars:     Size  Location     Type
  6696 ;;  wh              1   48[BANK0 ] PTR unsigned char 
  6697 ;;		 -> edge_meter@buf(48), 
  6698 ;;  pb              3   50[BANK0 ] struct __prbuf
  6699 ;;  ap              1   49[BANK0 ] PTR void [1]
  6700 ;;		 -> ?_sprintf(2), ?_printf(2), 
  6701 ;; Return value:  Size  Location     Type
  6702 ;;                  2   33[BANK0 ] int 
  6703 ;; Registers used:
  6704 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  6705 ;; Tracked objects:
  6706 ;;		On entry : 0/0
  6707 ;;		On exit  : 0/0
  6708 ;;		Unchanged: 0/0
  6709 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6710 ;;      Params:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6711 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6712 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6713 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6714 ;;Total ram usage:       20 bytes
  6715 ;; Hardware stack levels used:    1
  6716 ;; Hardware stack levels required when called:    6
  6717 ;; This function calls:
  6718 ;;		__doprnt
  6719 ;; This function is called by:
  6720 ;;		_edge_meter
  6721 ;; This function uses a non-reentrant model
  6722 ;;
  6723                           
  6724                           
  6725                           ;psect for function _sprintf
  6726  121F                     _sprintf:	
  6727                           
  6728                           ;incstack = 0
  6729                           ; Regs used in _sprintf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  6730                           ;sprintf@wh stored from wreg
  6731  121F  0020               	movlb	0	; select bank0
  6732  1220  00D0               	movwf	sprintf@wh
  6733  1221  0850               	movf	sprintf@wh,w
  6734  1222  00CF               	movwf	??_sprintf
  6735  1223  084F               	movf	??_sprintf,w
  6736  1224  00D2               	movwf	sprintf@pb
  6737  1225  01D3               	clrf	low ((sprintf@pb| 0+1))
  6738  1226  01D4               	clrf	(low ((sprintf@pb| 0+1))+1)
  6739  1227  3043               	movlw	(low ((?_sprintf| 0+2)))& (0+255)
  6740  1228  00CF               	movwf	??_sprintf
  6741  1229  084F               	movf	??_sprintf,w
  6742  122A  00D1               	movwf	sprintf@ap
  6743  122B  0842               	movf	sprintf@f+1,w
  6744  122C  00AF               	movwf	__doprnt@f+1
  6745  122D  0841               	movf	sprintf@f,w
  6746  122E  00AE               	movwf	__doprnt@f
  6747  122F  3051               	movlw	(low (sprintf@ap| 0))& (0+255)
  6748  1230  00CF               	movwf	??_sprintf
  6749  1231  084F               	movf	??_sprintf,w
  6750  1232  00B0               	movwf	__doprnt@ap
  6751  1233  3052               	movlw	(low (sprintf@pb| 0))& (0+255)
  6752  1234  3180  209A         	fcall	__doprnt
  6753  1236  0020               	movlb	0	; select bank0
  6754  1237  0852               	movf	sprintf@pb,w
  6755  1238  0086               	movwf	6
  6756  1239  0187               	clrf	7
  6757  123A  0181               	clrf	1
  6758  123B  0008               	return
  6759  123C                     __end_of_sprintf:	
  6760                           ;	Return value of _sprintf is never used
  6761                           
  6762                           
  6763                           	psect	text16
  6764  1B39                     __ptext16:	
  6765 ;; *************** function ___lbtoft *****************
  6766 ;; Defined at:
  6767 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lbtoft.c"
  6768 ;; Parameters:    Size  Location     Type
  6769 ;;  c               1    wreg     unsigned char 
  6770 ;; Auto vars:     Size  Location     Type
  6771 ;;  c               1   15[BANK0 ] unsigned char 
  6772 ;; Return value:  Size  Location     Type
  6773 ;;                  3    8[BANK0 ] float 
  6774 ;; Registers used:
  6775 ;;		wreg, status,2, status,0, pclath, cstack
  6776 ;; Tracked objects:
  6777 ;;		On entry : 0/0
  6778 ;;		On exit  : 0/0
  6779 ;;		Unchanged: 0/0
  6780 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6781 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6782 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6783 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6784 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6785 ;;Total ram usage:        8 bytes
  6786 ;; Hardware stack levels used:    1
  6787 ;; Hardware stack levels required when called:    4
  6788 ;; This function calls:
  6789 ;;		___ftpack
  6790 ;; This function is called by:
  6791 ;;		_edge_meter
  6792 ;; This function uses a non-reentrant model
  6793 ;;
  6794                           
  6795                           
  6796                           ;psect for function ___lbtoft
  6797  1B39                     ___lbtoft:	
  6798                           
  6799                           ;incstack = 0
  6800                           ; Regs used in ___lbtoft: [wreg+status,2+status,0+pclath+cstack]
  6801                           ;___lbtoft@c stored from wreg
  6802  1B39  0020               	movlb	0	; select bank0
  6803  1B3A  00AF               	movwf	___lbtoft@c
  6804  1B3B  082F               	movf	___lbtoft@c,w
  6805  1B3C  00AB               	movwf	??___lbtoft
  6806  1B3D  01AC               	clrf	??___lbtoft+1
  6807  1B3E  01AD               	clrf	??___lbtoft+2
  6808  1B3F  082B               	movf	??___lbtoft,w
  6809  1B40  00A0               	movwf	___ftpack@arg
  6810  1B41  082C               	movf	??___lbtoft+1,w
  6811  1B42  00A1               	movwf	___ftpack@arg+1
  6812  1B43  082D               	movf	??___lbtoft+2,w
  6813  1B44  00A2               	movwf	___ftpack@arg+2
  6814  1B45  308E               	movlw	142
  6815  1B46  00AE               	movwf	??___lbtoft+3
  6816  1B47  082E               	movf	??___lbtoft+3,w
  6817  1B48  00A3               	movwf	___ftpack@exp
  6818  1B49  01A4               	clrf	___ftpack@sign
  6819  1B4A  3193  23EC         	fcall	___ftpack
  6820  1B4C  0020               	movlb	0	; select bank0
  6821  1B4D  0820               	movf	?___ftpack,w
  6822  1B4E  00A8               	movwf	?___lbtoft
  6823  1B4F  0821               	movf	?___ftpack+1,w
  6824  1B50  00A9               	movwf	?___lbtoft+1
  6825  1B51  0822               	movf	?___ftpack+2,w
  6826  1B52  00AA               	movwf	?___lbtoft+2
  6827  1B53  0008               	return
  6828  1B54                     __end_of___lbtoft:	
  6829                           
  6830                           	psect	text17
  6831  153C                     __ptext17:	
  6832 ;; *************** function ___fttol *****************
  6833 ;; Defined at:
  6834 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\fttol.c"
  6835 ;; Parameters:    Size  Location     Type
  6836 ;;  f1              3   32[BANK0 ] float 
  6837 ;; Auto vars:     Size  Location     Type
  6838 ;;  lval            4   41[BANK0 ] unsigned long 
  6839 ;;  exp1            1   45[BANK0 ] unsigned char 
  6840 ;;  sign1           1   40[BANK0 ] unsigned char 
  6841 ;; Return value:  Size  Location     Type
  6842 ;;                  4   32[BANK0 ] long 
  6843 ;; Registers used:
  6844 ;;		wreg, status,2, status,0
  6845 ;; Tracked objects:
  6846 ;;		On entry : 0/0
  6847 ;;		On exit  : 0/0
  6848 ;;		Unchanged: 0/0
  6849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  6850 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6851 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6852 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6853 ;;      Totals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0
  6854 ;;Total ram usage:       14 bytes
  6855 ;; Hardware stack levels used:    1
  6856 ;; Hardware stack levels required when called:    3
  6857 ;; This function calls:
  6858 ;;		Nothing
  6859 ;; This function is called by:
  6860 ;;		_edge_meter
  6861 ;; This function uses a non-reentrant model
  6862 ;;
  6863                           
  6864                           
  6865                           ;psect for function ___fttol
  6866  153C                     ___fttol:	
  6867                           
  6868                           ;incstack = 0
  6869                           ; Regs used in ___fttol: [wreg+status,2+status,0]
  6870  153C  0020               	movlb	0	; select bank0
  6871  153D  0840               	movf	___fttol@f1,w
  6872  153E  00C4               	movwf	??___fttol
  6873  153F  0841               	movf	___fttol@f1+1,w
  6874  1540  00C5               	movwf	??___fttol+1
  6875  1541  0842               	movf	___fttol@f1+2,w
  6876  1542  00C6               	movwf	??___fttol+2
  6877  1543  1003               	clrc
  6878  1544  0D45               	rlf	??___fttol+1,w
  6879  1545  0D46               	rlf	??___fttol+2,w
  6880  1546  00C7               	movwf	??___fttol+3
  6881  1547  0847               	movf	??___fttol+3,w
  6882  1548  00CD               	movwf	___fttol@exp1
  6883  1549  084D               	movf	___fttol@exp1,w
  6884  154A  1D03               	btfss	3,2
  6885  154B  2D55               	goto	l4327
  6886  154C  3000               	movlw	0
  6887  154D  00C3               	movwf	?___fttol+3
  6888  154E  3000               	movlw	0
  6889  154F  00C2               	movwf	?___fttol+2
  6890  1550  3000               	movlw	0
  6891  1551  00C1               	movwf	?___fttol+1
  6892  1552  3000               	movlw	0
  6893  1553  00C0               	movwf	?___fttol
  6894  1554  0008               	return
  6895  1555                     l4327:	
  6896  1555  0840               	movf	___fttol@f1,w
  6897  1556  00C4               	movwf	??___fttol
  6898  1557  0841               	movf	___fttol@f1+1,w
  6899  1558  00C5               	movwf	??___fttol+1
  6900  1559  0842               	movf	___fttol@f1+2,w
  6901  155A  00C6               	movwf	??___fttol+2
  6902  155B  3017               	movlw	23
  6903  155C                     u4645:	
  6904  155C  36C6               	lsrf	??___fttol+2,f
  6905  155D  0CC5               	rrf	??___fttol+1,f
  6906  155E  0CC4               	rrf	??___fttol,f
  6907  155F  0B89               	decfsz	9,f
  6908  1560  2D5C               	goto	u4645
  6909  1561  0844               	movf	??___fttol,w
  6910  1562  00C7               	movwf	??___fttol+3
  6911  1563  0847               	movf	??___fttol+3,w
  6912  1564  00C8               	movwf	___fttol@sign1
  6913  1565  17C1               	bsf	___fttol@f1+1,7
  6914  1566  30FF               	movlw	255
  6915  1567  05C0               	andwf	___fttol@f1,f
  6916  1568  30FF               	movlw	255
  6917  1569  05C1               	andwf	___fttol@f1+1,f
  6918  156A  3000               	movlw	0
  6919  156B  05C2               	andwf	___fttol@f1+2,f
  6920  156C  0840               	movf	___fttol@f1,w
  6921  156D  00C9               	movwf	___fttol@lval
  6922  156E  0841               	movf	___fttol@f1+1,w
  6923  156F  00CA               	movwf	___fttol@lval+1
  6924  1570  0842               	movf	___fttol@f1+2,w
  6925  1571  00CB               	movwf	___fttol@lval+2
  6926  1572  01CC               	clrf	___fttol@lval+3
  6927  1573  308E               	movlw	142
  6928  1574  02CD               	subwf	___fttol@exp1,f
  6929  1575  1FCD               	btfss	___fttol@exp1,7
  6930  1576  2D93               	goto	l4347
  6931  1577  084D               	movf	___fttol@exp1,w
  6932  1578  3A80               	xorlw	128
  6933  1579  3E8F               	addlw	143
  6934  157A  1803               	skipnc
  6935  157B  2D85               	goto	l4345
  6936  157C  3000               	movlw	0
  6937  157D  00C3               	movwf	?___fttol+3
  6938  157E  3000               	movlw	0
  6939  157F  00C2               	movwf	?___fttol+2
  6940  1580  3000               	movlw	0
  6941  1581  00C1               	movwf	?___fttol+1
  6942  1582  3000               	movlw	0
  6943  1583  00C0               	movwf	?___fttol
  6944  1584  0008               	return
  6945  1585                     l4345:	
  6946  1585  3001               	movlw	1
  6947  1586                     u4675:	
  6948  1586  36CC               	lsrf	___fttol@lval+3,f
  6949  1587  0CCB               	rrf	___fttol@lval+2,f
  6950  1588  0CCA               	rrf	___fttol@lval+1,f
  6951  1589  0CC9               	rrf	___fttol@lval,f
  6952  158A  0B89               	decfsz	9,f
  6953  158B  2D86               	goto	u4675
  6954  158C  3001               	movlw	1
  6955  158D  00C4               	movwf	??___fttol
  6956  158E  0844               	movf	??___fttol,w
  6957  158F  07CD               	addwf	___fttol@exp1,f
  6958  1590  1903               	btfsc	3,2
  6959  1591  2DAC               	goto	l4355
  6960  1592  2D85               	goto	l4345
  6961  1593                     l4347:	
  6962  1593  3018               	movlw	24
  6963  1594  024D               	subwf	___fttol@exp1,w
  6964  1595  1C03               	skipc
  6965  1596  2DA9               	goto	l1415
  6966  1597  3000               	movlw	0
  6967  1598  00C3               	movwf	?___fttol+3
  6968  1599  3000               	movlw	0
  6969  159A  00C2               	movwf	?___fttol+2
  6970  159B  3000               	movlw	0
  6971  159C  00C1               	movwf	?___fttol+1
  6972  159D  3000               	movlw	0
  6973  159E  00C0               	movwf	?___fttol
  6974  159F  0008               	return
  6975  15A0                     l4353:	
  6976  15A0  3001               	movlw	1
  6977  15A1                     u4705:	
  6978  15A1  35C9               	lslf	___fttol@lval,f
  6979  15A2  0DCA               	rlf	___fttol@lval+1,f
  6980  15A3  0DCB               	rlf	___fttol@lval+2,f
  6981  15A4  0DCC               	rlf	___fttol@lval+3,f
  6982  15A5  0B89               	decfsz	9,f
  6983  15A6  2DA1               	goto	u4705
  6984  15A7  3001               	movlw	1
  6985  15A8  02CD               	subwf	___fttol@exp1,f
  6986  15A9                     l1415:	
  6987  15A9  084D               	movf	___fttol@exp1,w
  6988  15AA  1D03               	btfss	3,2
  6989  15AB  2DA0               	goto	l4353
  6990  15AC                     l4355:	
  6991  15AC  0848               	movf	___fttol@sign1,w
  6992  15AD  1903               	btfsc	3,2
  6993  15AE  2DBA               	goto	l4359
  6994  15AF  09C9               	comf	___fttol@lval,f
  6995  15B0  09CA               	comf	___fttol@lval+1,f
  6996  15B1  09CB               	comf	___fttol@lval+2,f
  6997  15B2  09CC               	comf	___fttol@lval+3,f
  6998  15B3  0AC9               	incf	___fttol@lval,f
  6999  15B4  1903               	skipnz
  7000  15B5  0ACA               	incf	___fttol@lval+1,f
  7001  15B6  1903               	skipnz
  7002  15B7  0ACB               	incf	___fttol@lval+2,f
  7003  15B8  1903               	skipnz
  7004  15B9  0ACC               	incf	___fttol@lval+3,f
  7005  15BA                     l4359:	
  7006  15BA  084C               	movf	___fttol@lval+3,w
  7007  15BB  00C3               	movwf	?___fttol+3
  7008  15BC  084B               	movf	___fttol@lval+2,w
  7009  15BD  00C2               	movwf	?___fttol+2
  7010  15BE  084A               	movf	___fttol@lval+1,w
  7011  15BF  00C1               	movwf	?___fttol+1
  7012  15C0  0849               	movf	___fttol@lval,w
  7013  15C1  00C0               	movwf	?___fttol
  7014  15C2  0008               	return
  7015  15C3                     __end_of___fttol:	
  7016                           
  7017                           	psect	text18
  7018  15C3                     __ptext18:	
  7019 ;; *************** function ___ftmul *****************
  7020 ;; Defined at:
  7021 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\ftmul.c"
  7022 ;; Parameters:    Size  Location     Type
  7023 ;;  f1              3   16[BANK0 ] float 
  7024 ;;  f2              3   19[BANK0 ] float 
  7025 ;; Auto vars:     Size  Location     Type
  7026 ;;  f3_as_produc    3   27[BANK0 ] unsigned um
  7027 ;;  sign            1   31[BANK0 ] unsigned char 
  7028 ;;  cntr            1   30[BANK0 ] unsigned char 
  7029 ;;  exp             1   26[BANK0 ] unsigned char 
  7030 ;; Return value:  Size  Location     Type
  7031 ;;                  3   16[BANK0 ] float 
  7032 ;; Registers used:
  7033 ;;		wreg, status,2, status,0, pclath, cstack
  7034 ;; Tracked objects:
  7035 ;;		On entry : 0/0
  7036 ;;		On exit  : 0/0
  7037 ;;		Unchanged: 0/0
  7038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7039 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7040 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7041 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7042 ;;      Totals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7043 ;;Total ram usage:       16 bytes
  7044 ;; Hardware stack levels used:    1
  7045 ;; Hardware stack levels required when called:    4
  7046 ;; This function calls:
  7047 ;;		___ftpack
  7048 ;; This function is called by:
  7049 ;;		_edge_meter
  7050 ;; This function uses a non-reentrant model
  7051 ;;
  7052                           
  7053                           
  7054                           ;psect for function ___ftmul
  7055  15C3                     ___ftmul:	
  7056                           
  7057                           ;incstack = 0
  7058                           ; Regs used in ___ftmul: [wreg+status,2+status,0+pclath+cstack]
  7059  15C3  0020               	movlb	0	; select bank0
  7060  15C4  0830               	movf	___ftmul@f1,w
  7061  15C5  00B6               	movwf	??___ftmul
  7062  15C6  0831               	movf	___ftmul@f1+1,w
  7063  15C7  00B7               	movwf	??___ftmul+1
  7064  15C8  0832               	movf	___ftmul@f1+2,w
  7065  15C9  00B8               	movwf	??___ftmul+2
  7066  15CA  1003               	clrc
  7067  15CB  0D37               	rlf	??___ftmul+1,w
  7068  15CC  0D38               	rlf	??___ftmul+2,w
  7069  15CD  00B9               	movwf	??___ftmul+3
  7070  15CE  0839               	movf	??___ftmul+3,w
  7071  15CF  00BA               	movwf	___ftmul@exp
  7072  15D0  083A               	movf	___ftmul@exp,w
  7073  15D1  1D03               	btfss	3,2
  7074  15D2  2DDA               	goto	l4277
  7075  15D3  3000               	movlw	0
  7076  15D4  00B0               	movwf	?___ftmul
  7077  15D5  3000               	movlw	0
  7078  15D6  00B1               	movwf	?___ftmul+1
  7079  15D7  3000               	movlw	0
  7080  15D8  00B2               	movwf	?___ftmul+2
  7081  15D9  0008               	return
  7082  15DA                     l4277:	
  7083  15DA  0833               	movf	___ftmul@f2,w
  7084  15DB  00B6               	movwf	??___ftmul
  7085  15DC  0834               	movf	___ftmul@f2+1,w
  7086  15DD  00B7               	movwf	??___ftmul+1
  7087  15DE  0835               	movf	___ftmul@f2+2,w
  7088  15DF  00B8               	movwf	??___ftmul+2
  7089  15E0  1003               	clrc
  7090  15E1  0D37               	rlf	??___ftmul+1,w
  7091  15E2  0D38               	rlf	??___ftmul+2,w
  7092  15E3  00B9               	movwf	??___ftmul+3
  7093  15E4  0839               	movf	??___ftmul+3,w
  7094  15E5  00BF               	movwf	___ftmul@sign
  7095  15E6  083F               	movf	___ftmul@sign,w
  7096  15E7  1D03               	btfss	3,2
  7097  15E8  2DF0               	goto	l4283
  7098  15E9  3000               	movlw	0
  7099  15EA  00B0               	movwf	?___ftmul
  7100  15EB  3000               	movlw	0
  7101  15EC  00B1               	movwf	?___ftmul+1
  7102  15ED  3000               	movlw	0
  7103  15EE  00B2               	movwf	?___ftmul+2
  7104  15EF  0008               	return
  7105  15F0                     l4283:	
  7106  15F0  083F               	movf	___ftmul@sign,w
  7107  15F1  3E7B               	addlw	123
  7108  15F2  00B6               	movwf	??___ftmul
  7109  15F3  0836               	movf	??___ftmul,w
  7110  15F4  07BA               	addwf	___ftmul@exp,f
  7111  15F5  0830               	movf	___ftmul@f1,w
  7112  15F6  00B6               	movwf	??___ftmul
  7113  15F7  0831               	movf	___ftmul@f1+1,w
  7114  15F8  00B7               	movwf	??___ftmul+1
  7115  15F9  0832               	movf	___ftmul@f1+2,w
  7116  15FA  00B8               	movwf	??___ftmul+2
  7117  15FB  3010               	movlw	16
  7118  15FC                     u4535:	
  7119  15FC  36B8               	lsrf	??___ftmul+2,f
  7120  15FD  0CB7               	rrf	??___ftmul+1,f
  7121  15FE  0CB6               	rrf	??___ftmul,f
  7122  15FF  0B89               	decfsz	9,f
  7123  1600  2DFC               	goto	u4535
  7124  1601  0836               	movf	??___ftmul,w
  7125  1602  00B9               	movwf	??___ftmul+3
  7126  1603  0839               	movf	??___ftmul+3,w
  7127  1604  00BF               	movwf	___ftmul@sign
  7128  1605  0833               	movf	___ftmul@f2,w
  7129  1606  00B6               	movwf	??___ftmul
  7130  1607  0834               	movf	___ftmul@f2+1,w
  7131  1608  00B7               	movwf	??___ftmul+1
  7132  1609  0835               	movf	___ftmul@f2+2,w
  7133  160A  00B8               	movwf	??___ftmul+2
  7134  160B  3010               	movlw	16
  7135  160C                     u4545:	
  7136  160C  36B8               	lsrf	??___ftmul+2,f
  7137  160D  0CB7               	rrf	??___ftmul+1,f
  7138  160E  0CB6               	rrf	??___ftmul,f
  7139  160F  0B89               	decfsz	9,f
  7140  1610  2E0C               	goto	u4545
  7141  1611  0836               	movf	??___ftmul,w
  7142  1612  00B9               	movwf	??___ftmul+3
  7143  1613  0839               	movf	??___ftmul+3,w
  7144  1614  06BF               	xorwf	___ftmul@sign,f
  7145  1615  3080               	movlw	128
  7146  1616  00B6               	movwf	??___ftmul
  7147  1617  0836               	movf	??___ftmul,w
  7148  1618  05BF               	andwf	___ftmul@sign,f
  7149  1619  17B1               	bsf	___ftmul@f1+1,7
  7150  161A  17B4               	bsf	___ftmul@f2+1,7
  7151  161B  30FF               	movlw	255
  7152  161C  05B3               	andwf	___ftmul@f2,f
  7153  161D  30FF               	movlw	255
  7154  161E  05B4               	andwf	___ftmul@f2+1,f
  7155  161F  3000               	movlw	0
  7156  1620  05B5               	andwf	___ftmul@f2+2,f
  7157  1621  3000               	movlw	0
  7158  1622  00BB               	movwf	___ftmul@f3_as_product
  7159  1623  3000               	movlw	0
  7160  1624  00BC               	movwf	___ftmul@f3_as_product+1
  7161  1625  3000               	movlw	0
  7162  1626  00BD               	movwf	___ftmul@f3_as_product+2
  7163  1627  3007               	movlw	7
  7164  1628  00B6               	movwf	??___ftmul
  7165  1629  0836               	movf	??___ftmul,w
  7166  162A  00BE               	movwf	___ftmul@cntr
  7167  162B                     l4295:	
  7168  162B  1C30               	btfss	___ftmul@f1,0
  7169  162C  2E33               	goto	l4299
  7170  162D  0833               	movf	___ftmul@f2,w
  7171  162E  07BB               	addwf	___ftmul@f3_as_product,f
  7172  162F  0834               	movf	___ftmul@f2+1,w
  7173  1630  3DBC               	addwfc	___ftmul@f3_as_product+1,f
  7174  1631  0835               	movf	___ftmul@f2+2,w
  7175  1632  3DBD               	addwfc	___ftmul@f3_as_product+2,f
  7176  1633                     l4299:	
  7177  1633  3001               	movlw	1
  7178  1634                     u4565:	
  7179  1634  36B2               	lsrf	___ftmul@f1+2,f
  7180  1635  0CB1               	rrf	___ftmul@f1+1,f
  7181  1636  0CB0               	rrf	___ftmul@f1,f
  7182  1637  0B89               	decfsz	9,f
  7183  1638  2E34               	goto	u4565
  7184  1639  3001               	movlw	1
  7185  163A                     u4575:	
  7186  163A  35B3               	lslf	___ftmul@f2,f
  7187  163B  0DB4               	rlf	___ftmul@f2+1,f
  7188  163C  0DB5               	rlf	___ftmul@f2+2,f
  7189  163D  0B89               	decfsz	9,f
  7190  163E  2E3A               	goto	u4575
  7191  163F  3001               	movlw	1
  7192  1640  02BE               	subwf	___ftmul@cntr,f
  7193  1641  1D03               	btfss	3,2
  7194  1642  2E2B               	goto	l4295
  7195  1643  3009               	movlw	9
  7196  1644  00B6               	movwf	??___ftmul
  7197  1645  0836               	movf	??___ftmul,w
  7198  1646  00BE               	movwf	___ftmul@cntr
  7199  1647                     l4307:	
  7200  1647  1C30               	btfss	___ftmul@f1,0
  7201  1648  2E4F               	goto	l4311
  7202  1649  0833               	movf	___ftmul@f2,w
  7203  164A  07BB               	addwf	___ftmul@f3_as_product,f
  7204  164B  0834               	movf	___ftmul@f2+1,w
  7205  164C  3DBC               	addwfc	___ftmul@f3_as_product+1,f
  7206  164D  0835               	movf	___ftmul@f2+2,w
  7207  164E  3DBD               	addwfc	___ftmul@f3_as_product+2,f
  7208  164F                     l4311:	
  7209  164F  3001               	movlw	1
  7210  1650                     u4605:	
  7211  1650  36B2               	lsrf	___ftmul@f1+2,f
  7212  1651  0CB1               	rrf	___ftmul@f1+1,f
  7213  1652  0CB0               	rrf	___ftmul@f1,f
  7214  1653  0B89               	decfsz	9,f
  7215  1654  2E50               	goto	u4605
  7216  1655  3001               	movlw	1
  7217  1656                     u4615:	
  7218  1656  36BD               	lsrf	___ftmul@f3_as_product+2,f
  7219  1657  0CBC               	rrf	___ftmul@f3_as_product+1,f
  7220  1658  0CBB               	rrf	___ftmul@f3_as_product,f
  7221  1659  0B89               	decfsz	9,f
  7222  165A  2E56               	goto	u4615
  7223  165B  3001               	movlw	1
  7224  165C  02BE               	subwf	___ftmul@cntr,f
  7225  165D  1D03               	btfss	3,2
  7226  165E  2E47               	goto	l4307
  7227  165F  083B               	movf	___ftmul@f3_as_product,w
  7228  1660  00A0               	movwf	___ftpack@arg
  7229  1661  083C               	movf	___ftmul@f3_as_product+1,w
  7230  1662  00A1               	movwf	___ftpack@arg+1
  7231  1663  083D               	movf	___ftmul@f3_as_product+2,w
  7232  1664  00A2               	movwf	___ftpack@arg+2
  7233  1665  083A               	movf	___ftmul@exp,w
  7234  1666  00B6               	movwf	??___ftmul
  7235  1667  0836               	movf	??___ftmul,w
  7236  1668  00A3               	movwf	___ftpack@exp
  7237  1669  083F               	movf	___ftmul@sign,w
  7238  166A  00B7               	movwf	??___ftmul+1
  7239  166B  0837               	movf	??___ftmul+1,w
  7240  166C  00A4               	movwf	___ftpack@sign
  7241  166D  3193  23EC         	fcall	___ftpack
  7242  166F  0020               	movlb	0	; select bank0
  7243  1670  0820               	movf	?___ftpack,w
  7244  1671  00B0               	movwf	?___ftmul
  7245  1672  0821               	movf	?___ftpack+1,w
  7246  1673  00B1               	movwf	?___ftmul+1
  7247  1674  0822               	movf	?___ftpack+2,w
  7248  1675  00B2               	movwf	?___ftmul+2
  7249  1676  0008               	return
  7250  1677                     __end_of___ftmul:	
  7251                           
  7252                           	psect	text19
  7253  13EC                     __ptext19:	
  7254 ;; *************** function ___ftpack *****************
  7255 ;; Defined at:
  7256 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\float.c"
  7257 ;; Parameters:    Size  Location     Type
  7258 ;;  arg             3    0[BANK0 ] unsigned um
  7259 ;;  exp             1    3[BANK0 ] unsigned char 
  7260 ;;  sign            1    4[BANK0 ] unsigned char 
  7261 ;; Auto vars:     Size  Location     Type
  7262 ;;		None
  7263 ;; Return value:  Size  Location     Type
  7264 ;;                  3    0[BANK0 ] float 
  7265 ;; Registers used:
  7266 ;;		wreg, status,2, status,0
  7267 ;; Tracked objects:
  7268 ;;		On entry : 0/0
  7269 ;;		On exit  : 0/0
  7270 ;;		Unchanged: 0/0
  7271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7272 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7273 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7274 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7275 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7276 ;;Total ram usage:        8 bytes
  7277 ;; Hardware stack levels used:    1
  7278 ;; Hardware stack levels required when called:    3
  7279 ;; This function calls:
  7280 ;;		Nothing
  7281 ;; This function is called by:
  7282 ;;		___ftmul
  7283 ;;		___lbtoft
  7284 ;; This function uses a non-reentrant model
  7285 ;;
  7286                           
  7287                           
  7288                           ;psect for function ___ftpack
  7289  13EC                     ___ftpack:	
  7290                           
  7291                           ;incstack = 0
  7292                           ; Regs used in ___ftpack: [wreg+status,2+status,0]
  7293  13EC  0020               	movlb	0	; select bank0
  7294  13ED  0823               	movf	___ftpack@exp,w
  7295  13EE  1903               	btfsc	3,2
  7296  13EF  2BF5               	goto	l4101
  7297  13F0  0822               	movf	___ftpack@arg+2,w
  7298  13F1  0421               	iorwf	___ftpack@arg+1,w
  7299  13F2  0420               	iorwf	___ftpack@arg,w
  7300  13F3  1D03               	skipz
  7301  13F4  2C06               	goto	l4107
  7302  13F5                     l4101:	
  7303  13F5  3000               	movlw	0
  7304  13F6  00A0               	movwf	?___ftpack
  7305  13F7  3000               	movlw	0
  7306  13F8  00A1               	movwf	?___ftpack+1
  7307  13F9  3000               	movlw	0
  7308  13FA  00A2               	movwf	?___ftpack+2
  7309  13FB  0008               	return
  7310  13FC                     l4105:	
  7311  13FC  3001               	movlw	1
  7312  13FD  00A5               	movwf	??___ftpack
  7313  13FE  0825               	movf	??___ftpack,w
  7314  13FF  07A3               	addwf	___ftpack@exp,f
  7315  1400  3001               	movlw	1
  7316  1401                     u4105:	
  7317  1401  36A2               	lsrf	___ftpack@arg+2,f
  7318  1402  0CA1               	rrf	___ftpack@arg+1,f
  7319  1403  0CA0               	rrf	___ftpack@arg,f
  7320  1404  0B89               	decfsz	9,f
  7321  1405  2C01               	goto	u4105
  7322  1406                     l4107:	
  7323  1406  30FE               	movlw	254
  7324  1407  0522               	andwf	___ftpack@arg+2,w
  7325  1408  1903               	btfsc	3,2
  7326  1409  2C1F               	goto	l1324
  7327  140A  2BFC               	goto	l4105
  7328  140B                     l4109:	
  7329  140B  3001               	movlw	1
  7330  140C  00A5               	movwf	??___ftpack
  7331  140D  0825               	movf	??___ftpack,w
  7332  140E  07A3               	addwf	___ftpack@exp,f
  7333  140F  3001               	movlw	1
  7334  1410  07A0               	addwf	___ftpack@arg,f
  7335  1411  3000               	movlw	0
  7336  1412  1803               	skipnc
  7337  1413  3001               	movlw	1
  7338  1414  07A1               	addwf	___ftpack@arg+1,f
  7339  1415  3000               	movlw	0
  7340  1416  1803               	skipnc
  7341  1417  3001               	movlw	1
  7342  1418  07A2               	addwf	___ftpack@arg+2,f
  7343  1419  3001               	movlw	1
  7344  141A                     u4125:	
  7345  141A  36A2               	lsrf	___ftpack@arg+2,f
  7346  141B  0CA1               	rrf	___ftpack@arg+1,f
  7347  141C  0CA0               	rrf	___ftpack@arg,f
  7348  141D  0B89               	decfsz	9,f
  7349  141E  2C1A               	goto	u4125
  7350  141F                     l1324:	
  7351  141F  30FF               	movlw	255
  7352  1420  0522               	andwf	___ftpack@arg+2,w
  7353  1421  1903               	btfsc	3,2
  7354  1422  2C2C               	goto	l4117
  7355  1423  2C0B               	goto	l4109
  7356  1424                     l4115:	
  7357  1424  3001               	movlw	1
  7358  1425  02A3               	subwf	___ftpack@exp,f
  7359  1426  3001               	movlw	1
  7360  1427                     u4145:	
  7361  1427  35A0               	lslf	___ftpack@arg,f
  7362  1428  0DA1               	rlf	___ftpack@arg+1,f
  7363  1429  0DA2               	rlf	___ftpack@arg+2,f
  7364  142A  0B89               	decfsz	9,f
  7365  142B  2C27               	goto	u4145
  7366  142C                     l4117:	
  7367  142C  1BA1               	btfsc	___ftpack@arg+1,7
  7368  142D  2C32               	goto	l1331
  7369  142E  3002               	movlw	2
  7370  142F  0223               	subwf	___ftpack@exp,w
  7371  1430  1803               	skipnc
  7372  1431  2C24               	goto	l4115
  7373  1432                     l1331:	
  7374  1432  1823               	btfsc	___ftpack@exp,0
  7375  1433  2C3A               	goto	l1332
  7376  1434  30FF               	movlw	255
  7377  1435  05A0               	andwf	___ftpack@arg,f
  7378  1436  307F               	movlw	127
  7379  1437  05A1               	andwf	___ftpack@arg+1,f
  7380  1438  30FF               	movlw	255
  7381  1439  05A2               	andwf	___ftpack@arg+2,f
  7382  143A                     l1332:	
  7383  143A  1003               	clrc
  7384  143B  0CA3               	rrf	___ftpack@exp,f
  7385  143C  0823               	movf	___ftpack@exp,w
  7386  143D  00A5               	movwf	??___ftpack
  7387  143E  01A6               	clrf	??___ftpack+1
  7388  143F  01A7               	clrf	??___ftpack+2
  7389  1440  3010               	movlw	16
  7390  1441                     u4185:	
  7391  1441  35A5               	lslf	??___ftpack,f
  7392  1442  0DA6               	rlf	??___ftpack+1,f
  7393  1443  0DA7               	rlf	??___ftpack+2,f
  7394  1444  0B89               	decfsz	9,f
  7395  1445  2C41               	goto	u4185
  7396  1446  0825               	movf	??___ftpack,w
  7397  1447  04A0               	iorwf	___ftpack@arg,f
  7398  1448  0826               	movf	??___ftpack+1,w
  7399  1449  04A1               	iorwf	___ftpack@arg+1,f
  7400  144A  0827               	movf	??___ftpack+2,w
  7401  144B  04A2               	iorwf	___ftpack@arg+2,f
  7402  144C  0824               	movf	___ftpack@sign,w
  7403  144D  1903               	btfsc	3,2
  7404  144E  0008               	return
  7405  144F  17A2               	bsf	___ftpack@arg+2,7
  7406  1450  0008               	return
  7407  1451                     __end_of___ftpack:	
  7408                           
  7409                           	psect	text20
  7410  0D85                     __ptext20:	
  7411 ;; *************** function _PROTOCOL_Print_TLV *****************
  7412 ;; Defined at:
  7413 ;;		line 219 in file "protocol.c"
  7414 ;; Parameters:    Size  Location     Type
  7415 ;;  dev_addr        1    wreg     unsigned char 
  7416 ;;  type            1   44[BANK0 ] unsigned char 
  7417 ;;  length          1   45[BANK0 ] unsigned char 
  7418 ;;  pbuffer         1   46[BANK0 ] PTR unsigned char 
  7419 ;;		 -> read_buf(16), NULL(0), 
  7420 ;; Auto vars:     Size  Location     Type
  7421 ;;  dev_addr        1   50[BANK0 ] unsigned char 
  7422 ;;  v               2   51[BANK0 ] int 
  7423 ;; Return value:  Size  Location     Type
  7424 ;;                  1    wreg      void 
  7425 ;; Registers used:
  7426 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  7427 ;; Tracked objects:
  7428 ;;		On entry : 0/0
  7429 ;;		On exit  : 0/0
  7430 ;;		Unchanged: 0/0
  7431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  7432 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7433 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7434 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7435 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
  7436 ;;Total ram usage:        9 bytes
  7437 ;; Hardware stack levels used:    1
  7438 ;; Hardware stack levels required when called:    7
  7439 ;; This function calls:
  7440 ;;		___awdiv
  7441 ;;		___awmod
  7442 ;;		_abs
  7443 ;;		_concat
  7444 ;;		_printf
  7445 ;; This function is called by:
  7446 ;;		_sen
  7447 ;; This function uses a non-reentrant model
  7448 ;;
  7449                           
  7450                           
  7451                           ;psect for function _PROTOCOL_Print_TLV
  7452  0D85                     _PROTOCOL_Print_TLV:	
  7453                           
  7454                           ;incstack = 0
  7455                           ; Regs used in _PROTOCOL_Print_TLV: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  7456                           ;PROTOCOL_Print_TLV@dev_addr stored from wreg
  7457  0D85  0020               	movlb	0	; select bank0
  7458  0D86  00D2               	movwf	PROTOCOL_Print_TLV@dev_addr
  7459                           
  7460                           ;protocol.c: 220: int16_t v;
  7461                           ;protocol.c: 221: if (dev_addr != 0) printf("%%%d:", dev_addr);
  7462  0D87  0852               	movf	PROTOCOL_Print_TLV@dev_addr,w
  7463  0D88  1903               	btfsc	3,2
  7464  0D89  2FEA               	goto	l5677
  7465  0D8A  30AF               	movlw	low (STR_56| (0+32768))
  7466  0D8B  00C1               	movwf	printf@f
  7467  0D8C  3091               	movlw	high (STR_56| (0+32768))
  7468  0D8D  00C2               	movwf	printf@f+1
  7469  0D8E  0852               	movf	PROTOCOL_Print_TLV@dev_addr,w
  7470  0D8F  00CF               	movwf	??_PROTOCOL_Print_TLV
  7471  0D90  01D0               	clrf	??_PROTOCOL_Print_TLV+1
  7472  0D91  084F               	movf	??_PROTOCOL_Print_TLV,w
  7473  0D92  00C3               	movwf	?_printf+2
  7474  0D93  0850               	movf	??_PROTOCOL_Print_TLV+1,w
  7475  0D94  00C4               	movwf	?_printf+3
  7476  0D95  319B  2308  318D   	fcall	_printf
  7477                           
  7478                           ;protocol.c: 222: switch(type) {
  7479  0D98  2FEA               	goto	l5677
  7480  0D99                     l5585:	
  7481                           ;protocol.c: 223: case 0x01:
  7482                           
  7483                           
  7484                           ;protocol.c: 224: length--;
  7485  0D99  3001               	movlw	1
  7486  0D9A  0020               	movlb	0	; select bank0
  7487  0D9B  02CD               	subwf	PROTOCOL_Print_TLV@length,f
  7488                           
  7489                           ;protocol.c: 225: printf("UINT8_T:");
  7490  0D9C  3082               	movlw	low (STR_57| (0+32768))
  7491  0D9D  00C1               	movwf	printf@f
  7492  0D9E  3091               	movlw	high (STR_57| (0+32768))
  7493  0D9F  00C2               	movwf	printf@f+1
  7494  0DA0  319B  2308  318D   	fcall	_printf
  7495                           
  7496                           ;protocol.c: 226: for (i=0; i<length; i++) printf("%u,", pbuffer[i]);
  7497  0DA3  01F8               	clrf	_i
  7498  0DA4                     l5595:	
  7499  0DA4  0020               	movlb	0	; select bank0
  7500  0DA5  084D               	movf	PROTOCOL_Print_TLV@length,w
  7501  0DA6  0278               	subwf	_i,w
  7502  0DA7  1803               	btfsc	3,0
  7503  0DA8  2DC5               	goto	l5597
  7504  0DA9  30C8               	movlw	low (STR_58| (0+32768))
  7505  0DAA  0020               	movlb	0	; select bank0
  7506  0DAB  00C1               	movwf	printf@f
  7507  0DAC  3091               	movlw	high (STR_58| (0+32768))
  7508  0DAD  00C2               	movwf	printf@f+1
  7509  0DAE  0878               	movf	_i,w
  7510  0DAF  074E               	addwf	PROTOCOL_Print_TLV@pbuffer,w
  7511  0DB0  00CF               	movwf	??_PROTOCOL_Print_TLV
  7512  0DB1  084F               	movf	??_PROTOCOL_Print_TLV,w
  7513  0DB2  0086               	movwf	6
  7514  0DB3  3001               	movlw	1	; select bank2/3
  7515  0DB4  0087               	movwf	7
  7516  0DB5  0801               	movf	1,w
  7517  0DB6  00D0               	movwf	??_PROTOCOL_Print_TLV+1
  7518  0DB7  01D1               	clrf	??_PROTOCOL_Print_TLV+2
  7519  0DB8  0850               	movf	??_PROTOCOL_Print_TLV+1,w
  7520  0DB9  00C3               	movwf	?_printf+2
  7521  0DBA  0851               	movf	??_PROTOCOL_Print_TLV+2,w
  7522  0DBB  00C4               	movwf	?_printf+3
  7523  0DBC  319B  2308  318D   	fcall	_printf
  7524  0DBF  3001               	movlw	1
  7525  0DC0  0020               	movlb	0	; select bank0
  7526  0DC1  00CF               	movwf	??_PROTOCOL_Print_TLV
  7527  0DC2  084F               	movf	??_PROTOCOL_Print_TLV,w
  7528  0DC3  07F8               	addwf	_i,f
  7529  0DC4  2DA4               	goto	l5595
  7530  0DC5                     l5597:	
  7531                           
  7532                           ;protocol.c: 227: printf("%u\n", pbuffer[i]);
  7533  0DC5  30C4               	movlw	low (STR_59| (0+32768))
  7534  0DC6  00C1               	movwf	printf@f
  7535  0DC7  3091               	movlw	high (STR_59| (0+32768))
  7536  0DC8  00C2               	movwf	printf@f+1
  7537  0DC9  0878               	movf	_i,w
  7538  0DCA  074E               	addwf	PROTOCOL_Print_TLV@pbuffer,w
  7539  0DCB  00CF               	movwf	??_PROTOCOL_Print_TLV
  7540  0DCC  084F               	movf	??_PROTOCOL_Print_TLV,w
  7541  0DCD  0086               	movwf	6
  7542  0DCE  3001               	movlw	1	; select bank2/3
  7543  0DCF  0087               	movwf	7
  7544  0DD0  0801               	movf	1,w
  7545  0DD1  00D0               	movwf	??_PROTOCOL_Print_TLV+1
  7546  0DD2  01D1               	clrf	??_PROTOCOL_Print_TLV+2
  7547  0DD3  0850               	movf	??_PROTOCOL_Print_TLV+1,w
  7548  0DD4  00C3               	movwf	?_printf+2
  7549  0DD5  0851               	movf	??_PROTOCOL_Print_TLV+2,w
  7550  0DD6  00C4               	movwf	?_printf+3
  7551  0DD7  319B  2308         	fcall	_printf
  7552                           
  7553                           ;protocol.c: 228: break;
  7554  0DD9  0008               	return
  7555  0DDA                     l5599:	
  7556                           ;protocol.c: 229: case 0x02:
  7557                           
  7558                           
  7559                           ;protocol.c: 230: length--;
  7560  0DDA  3001               	movlw	1
  7561  0DDB  0020               	movlb	0	; select bank0
  7562  0DDC  02CD               	subwf	PROTOCOL_Print_TLV@length,f
  7563                           
  7564                           ;protocol.c: 231: printf("INT8_T:");
  7565  0DDD  3083               	movlw	low ((STR_57+1)| (0+32768))
  7566  0DDE  00C1               	movwf	printf@f
  7567  0DDF  3091               	movlw	high ((STR_57+1)| (0+32768))
  7568  0DE0  00C2               	movwf	printf@f+1
  7569  0DE1  319B  2308  318D   	fcall	_printf
  7570                           
  7571                           ;protocol.c: 232: for (i=0; i<length; i++) printf("%d,", (int8_t)pbuffer[i]);
  7572  0DE4  01F8               	clrf	_i
  7573  0DE5                     l5609:	
  7574  0DE5  0020               	movlb	0	; select bank0
  7575  0DE6  084D               	movf	PROTOCOL_Print_TLV@length,w
  7576  0DE7  0278               	subwf	_i,w
  7577  0DE8  1803               	btfsc	3,0
  7578  0DE9  2E04               	goto	l5611
  7579  0DEA  30D8               	movlw	low (STR_14| (0+32768))
  7580  0DEB  0020               	movlb	0	; select bank0
  7581  0DEC  00C1               	movwf	printf@f
  7582  0DED  3091               	movlw	high (STR_14| (0+32768))
  7583  0DEE  00C2               	movwf	printf@f+1
  7584  0DEF  0878               	movf	_i,w
  7585  0DF0  074E               	addwf	PROTOCOL_Print_TLV@pbuffer,w
  7586  0DF1  00CF               	movwf	??_PROTOCOL_Print_TLV
  7587  0DF2  084F               	movf	??_PROTOCOL_Print_TLV,w
  7588  0DF3  0086               	movwf	6
  7589  0DF4  3001               	movlw	1	; select bank2/3
  7590  0DF5  0087               	movwf	7
  7591  0DF6  0801               	movf	1,w
  7592  0DF7  00C3               	movwf	?_printf+2
  7593  0DF8  01C4               	clrf	?_printf+3
  7594  0DF9  1BC3               	btfsc	?_printf+2,7
  7595  0DFA  03C4               	decf	?_printf+3,f
  7596  0DFB  319B  2308  318D   	fcall	_printf
  7597  0DFE  3001               	movlw	1
  7598  0DFF  0020               	movlb	0	; select bank0
  7599  0E00  00CF               	movwf	??_PROTOCOL_Print_TLV
  7600  0E01  084F               	movf	??_PROTOCOL_Print_TLV,w
  7601  0E02  07F8               	addwf	_i,f
  7602  0E03  2DE5               	goto	l5609
  7603  0E04                     l5611:	
  7604                           
  7605                           ;protocol.c: 233: printf("%d\n", (int8_t)pbuffer[i]);
  7606  0E04  302F               	movlw	low ((STR_55+6)| (0+32768))
  7607  0E05  00C1               	movwf	printf@f
  7608  0E06  3091               	movlw	high ((STR_55+6)| (0+32768))
  7609  0E07  00C2               	movwf	printf@f+1
  7610  0E08  0878               	movf	_i,w
  7611  0E09  074E               	addwf	PROTOCOL_Print_TLV@pbuffer,w
  7612  0E0A  00CF               	movwf	??_PROTOCOL_Print_TLV
  7613  0E0B  084F               	movf	??_PROTOCOL_Print_TLV,w
  7614  0E0C  0086               	movwf	6
  7615  0E0D  3001               	movlw	1	; select bank2/3
  7616  0E0E  0087               	movwf	7
  7617  0E0F  0801               	movf	1,w
  7618  0E10  00C3               	movwf	?_printf+2
  7619  0E11  01C4               	clrf	?_printf+3
  7620  0E12  1BC3               	btfsc	?_printf+2,7
  7621  0E13  03C4               	decf	?_printf+3,f
  7622  0E14  319B  2308         	fcall	_printf
  7623                           
  7624                           ;protocol.c: 234: break;
  7625  0E16  0008               	return
  7626  0E17                     l5613:	
  7627                           ;protocol.c: 235: case 0x03:
  7628                           
  7629                           
  7630                           ;protocol.c: 236: printf("UINT16_T:");
  7631  0E17  305B               	movlw	low (STR_63| (0+32768))
  7632  0E18  0020               	movlb	0	; select bank0
  7633  0E19  00C1               	movwf	printf@f
  7634  0E1A  3091               	movlw	high (STR_63| (0+32768))
  7635  0E1B  00C2               	movwf	printf@f+1
  7636  0E1C  319B  2308  318D   	fcall	_printf
  7637                           
  7638                           ;protocol.c: 237: length = length - 2;
  7639  0E1F  0020               	movlb	0	; select bank0
  7640  0E20  084D               	movf	PROTOCOL_Print_TLV@length,w
  7641  0E21  3EFE               	addlw	254
  7642  0E22  00CF               	movwf	??_PROTOCOL_Print_TLV
  7643  0E23  084F               	movf	??_PROTOCOL_Print_TLV,w
  7644  0E24  00CD               	movwf	PROTOCOL_Print_TLV@length
  7645                           
  7646                           ;protocol.c: 238: for(i=0; i<length; i=i+2) printf("%u,", concat(pbuffer[i], pbuffer[i+1
      +                          ]));
  7647  0E25  01F8               	clrf	_i
  7648  0E26                     l5623:	
  7649  0E26  084D               	movf	PROTOCOL_Print_TLV@length,w
  7650  0E27  0278               	subwf	_i,w
  7651  0E28  1803               	btfsc	3,0
  7652  0E29  2E54               	goto	l5625
  7653  0E2A  30C8               	movlw	low (STR_58| (0+32768))
  7654  0E2B  00C1               	movwf	printf@f
  7655  0E2C  3091               	movlw	high (STR_58| (0+32768))
  7656  0E2D  00C2               	movwf	printf@f+1
  7657  0E2E  0878               	movf	_i,w
  7658  0E2F  3E01               	addlw	1
  7659  0E30  074E               	addwf	PROTOCOL_Print_TLV@pbuffer,w
  7660  0E31  00CF               	movwf	??_PROTOCOL_Print_TLV
  7661  0E32  084F               	movf	??_PROTOCOL_Print_TLV,w
  7662  0E33  0086               	movwf	6
  7663  0E34  3001               	movlw	1	; select bank2/3
  7664  0E35  0087               	movwf	7
  7665  0E36  0801               	movf	1,w
  7666  0E37  00D0               	movwf	??_PROTOCOL_Print_TLV+1
  7667  0E38  0850               	movf	??_PROTOCOL_Print_TLV+1,w
  7668  0E39  00A0               	movwf	concat@lsb
  7669  0E3A  0878               	movf	_i,w
  7670  0E3B  074E               	addwf	PROTOCOL_Print_TLV@pbuffer,w
  7671  0E3C  00D1               	movwf	??_PROTOCOL_Print_TLV+2
  7672  0E3D  0851               	movf	??_PROTOCOL_Print_TLV+2,w
  7673  0E3E  0086               	movwf	6
  7674  0E3F  3001               	movlw	1	; select bank2/3
  7675  0E40  0087               	movwf	7
  7676  0E41  0801               	movf	1,w
  7677  0E42  319A  22BC  318D   	fcall	_concat
  7678  0E45  0020               	movlb	0	; select bank0
  7679  0E46  0821               	movf	?_concat+1,w
  7680  0E47  00C4               	movwf	?_printf+3
  7681  0E48  0820               	movf	?_concat,w
  7682  0E49  00C3               	movwf	?_printf+2
  7683  0E4A  319B  2308  318D   	fcall	_printf
  7684  0E4D  0878               	movf	_i,w
  7685  0E4E  3E02               	addlw	2
  7686  0E4F  0020               	movlb	0	; select bank0
  7687  0E50  00CF               	movwf	??_PROTOCOL_Print_TLV
  7688  0E51  084F               	movf	??_PROTOCOL_Print_TLV,w
  7689  0E52  00F8               	movwf	_i
  7690  0E53  2E26               	goto	l5623
  7691  0E54                     l5625:	
  7692                           
  7693                           ;protocol.c: 239: printf("%u\n", concat(pbuffer[i], pbuffer[i+1]));
  7694  0E54  30C4               	movlw	low (STR_59| (0+32768))
  7695  0E55  00C1               	movwf	printf@f
  7696  0E56  3091               	movlw	high (STR_59| (0+32768))
  7697  0E57  00C2               	movwf	printf@f+1
  7698  0E58  0878               	movf	_i,w
  7699  0E59  3E01               	addlw	1
  7700  0E5A  074E               	addwf	PROTOCOL_Print_TLV@pbuffer,w
  7701  0E5B  00CF               	movwf	??_PROTOCOL_Print_TLV
  7702  0E5C  084F               	movf	??_PROTOCOL_Print_TLV,w
  7703  0E5D  0086               	movwf	6
  7704  0E5E  3001               	movlw	1	; select bank2/3
  7705  0E5F  0087               	movwf	7
  7706  0E60  0801               	movf	1,w
  7707  0E61  00D0               	movwf	??_PROTOCOL_Print_TLV+1
  7708  0E62  0850               	movf	??_PROTOCOL_Print_TLV+1,w
  7709  0E63  00A0               	movwf	concat@lsb
  7710  0E64  0878               	movf	_i,w
  7711  0E65  074E               	addwf	PROTOCOL_Print_TLV@pbuffer,w
  7712  0E66  00D1               	movwf	??_PROTOCOL_Print_TLV+2
  7713  0E67  0851               	movf	??_PROTOCOL_Print_TLV+2,w
  7714  0E68  0086               	movwf	6
  7715  0E69  3001               	movlw	1	; select bank2/3
  7716  0E6A  0087               	movwf	7
  7717  0E6B  0801               	movf	1,w
  7718  0E6C  319A  22BC  318D   	fcall	_concat
  7719  0E6F  0020               	movlb	0	; select bank0
  7720  0E70  0821               	movf	?_concat+1,w
  7721  0E71  00C4               	movwf	?_printf+3
  7722  0E72  0820               	movf	?_concat,w
  7723  0E73  00C3               	movwf	?_printf+2
  7724  0E74  319B  2308         	fcall	_printf
  7725                           
  7726                           ;protocol.c: 240: break;
  7727  0E76  0008               	return
  7728  0E77                     l5627:	
  7729                           ;protocol.c: 241: case 0x04:
  7730                           
  7731                           
  7732                           ;protocol.c: 242: printf("INT16_T:");
  7733  0E77  305C               	movlw	low ((STR_63+1)| (0+32768))
  7734  0E78  0020               	movlb	0	; select bank0
  7735  0E79  00C1               	movwf	printf@f
  7736  0E7A  3091               	movlw	high ((STR_63+1)| (0+32768))
  7737  0E7B  00C2               	movwf	printf@f+1
  7738  0E7C  319B  2308  318D   	fcall	_printf
  7739                           
  7740                           ;protocol.c: 243: length = length - 2;
  7741  0E7F  0020               	movlb	0	; select bank0
  7742  0E80  084D               	movf	PROTOCOL_Print_TLV@length,w
  7743  0E81  3EFE               	addlw	254
  7744  0E82  00CF               	movwf	??_PROTOCOL_Print_TLV
  7745  0E83  084F               	movf	??_PROTOCOL_Print_TLV,w
  7746  0E84  00CD               	movwf	PROTOCOL_Print_TLV@length
  7747                           
  7748                           ;protocol.c: 244: for(i=0; i<length; i=i+2) printf("%d,", (int16_t)(concat(pbuffer[i], p
      +                          buffer[i+1])));
  7749  0E85  01F8               	clrf	_i
  7750  0E86                     l5637:	
  7751  0E86  084D               	movf	PROTOCOL_Print_TLV@length,w
  7752  0E87  0278               	subwf	_i,w
  7753  0E88  1803               	btfsc	3,0
  7754  0E89  2EB4               	goto	l5639
  7755  0E8A  30D8               	movlw	low (STR_14| (0+32768))
  7756  0E8B  00C1               	movwf	printf@f
  7757  0E8C  3091               	movlw	high (STR_14| (0+32768))
  7758  0E8D  00C2               	movwf	printf@f+1
  7759  0E8E  0878               	movf	_i,w
  7760  0E8F  3E01               	addlw	1
  7761  0E90  074E               	addwf	PROTOCOL_Print_TLV@pbuffer,w
  7762  0E91  00CF               	movwf	??_PROTOCOL_Print_TLV
  7763  0E92  084F               	movf	??_PROTOCOL_Print_TLV,w
  7764  0E93  0086               	movwf	6
  7765  0E94  3001               	movlw	1	; select bank2/3
  7766  0E95  0087               	movwf	7
  7767  0E96  0801               	movf	1,w
  7768  0E97  00D0               	movwf	??_PROTOCOL_Print_TLV+1
  7769  0E98  0850               	movf	??_PROTOCOL_Print_TLV+1,w
  7770  0E99  00A0               	movwf	concat@lsb
  7771  0E9A  0878               	movf	_i,w
  7772  0E9B  074E               	addwf	PROTOCOL_Print_TLV@pbuffer,w
  7773  0E9C  00D1               	movwf	??_PROTOCOL_Print_TLV+2
  7774  0E9D  0851               	movf	??_PROTOCOL_Print_TLV+2,w
  7775  0E9E  0086               	movwf	6
  7776  0E9F  3001               	movlw	1	; select bank2/3
  7777  0EA0  0087               	movwf	7
  7778  0EA1  0801               	movf	1,w
  7779  0EA2  319A  22BC  318D   	fcall	_concat
  7780  0EA5  0020               	movlb	0	; select bank0
  7781  0EA6  0821               	movf	?_concat+1,w
  7782  0EA7  00C4               	movwf	?_printf+3
  7783  0EA8  0820               	movf	?_concat,w
  7784  0EA9  00C3               	movwf	?_printf+2
  7785  0EAA  319B  2308  318D   	fcall	_printf
  7786  0EAD  0878               	movf	_i,w
  7787  0EAE  3E02               	addlw	2
  7788  0EAF  0020               	movlb	0	; select bank0
  7789  0EB0  00CF               	movwf	??_PROTOCOL_Print_TLV
  7790  0EB1  084F               	movf	??_PROTOCOL_Print_TLV,w
  7791  0EB2  00F8               	movwf	_i
  7792  0EB3  2E86               	goto	l5637
  7793  0EB4                     l5639:	
  7794                           
  7795                           ;protocol.c: 245: printf("%d\n", (int16_t)(concat(pbuffer[i], pbuffer[i+1])));
  7796  0EB4  302F               	movlw	low ((STR_55+6)| (0+32768))
  7797  0EB5  00C1               	movwf	printf@f
  7798  0EB6  3091               	movlw	high ((STR_55+6)| (0+32768))
  7799  0EB7  00C2               	movwf	printf@f+1
  7800  0EB8  0878               	movf	_i,w
  7801  0EB9  3E01               	addlw	1
  7802  0EBA  074E               	addwf	PROTOCOL_Print_TLV@pbuffer,w
  7803  0EBB  00CF               	movwf	??_PROTOCOL_Print_TLV
  7804  0EBC  084F               	movf	??_PROTOCOL_Print_TLV,w
  7805  0EBD  0086               	movwf	6
  7806  0EBE  3001               	movlw	1	; select bank2/3
  7807  0EBF  0087               	movwf	7
  7808  0EC0  0801               	movf	1,w
  7809  0EC1  00D0               	movwf	??_PROTOCOL_Print_TLV+1
  7810  0EC2  0850               	movf	??_PROTOCOL_Print_TLV+1,w
  7811  0EC3  00A0               	movwf	concat@lsb
  7812  0EC4  0878               	movf	_i,w
  7813  0EC5  074E               	addwf	PROTOCOL_Print_TLV@pbuffer,w
  7814  0EC6  00D1               	movwf	??_PROTOCOL_Print_TLV+2
  7815  0EC7  0851               	movf	??_PROTOCOL_Print_TLV+2,w
  7816  0EC8  0086               	movwf	6
  7817  0EC9  3001               	movlw	1	; select bank2/3
  7818  0ECA  0087               	movwf	7
  7819  0ECB  0801               	movf	1,w
  7820  0ECC  319A  22BC  318D   	fcall	_concat
  7821  0ECF  0020               	movlb	0	; select bank0
  7822  0ED0  0821               	movf	?_concat+1,w
  7823  0ED1  00C4               	movwf	?_printf+3
  7824  0ED2  0820               	movf	?_concat,w
  7825  0ED3  00C3               	movwf	?_printf+2
  7826  0ED4  319B  2308         	fcall	_printf
  7827                           
  7828                           ;protocol.c: 246: break;
  7829  0ED6  0008               	return
  7830  0ED7                     l5641:	
  7831                           ;protocol.c: 247: case 0x05:
  7832                           
  7833                           
  7834                           ;protocol.c: 248: printf("FLOAT:");
  7835  0ED7  3093               	movlw	low (STR_69| (0+32768))
  7836  0ED8  0020               	movlb	0	; select bank0
  7837  0ED9  00C1               	movwf	printf@f
  7838  0EDA  3091               	movlw	high (STR_69| (0+32768))
  7839  0EDB  00C2               	movwf	printf@f+1
  7840  0EDC  319B  2308  318D   	fcall	_printf
  7841                           
  7842                           ;protocol.c: 249: length = length - 2;
  7843  0EDF  0020               	movlb	0	; select bank0
  7844  0EE0  084D               	movf	PROTOCOL_Print_TLV@length,w
  7845  0EE1  3EFE               	addlw	254
  7846  0EE2  00CF               	movwf	??_PROTOCOL_Print_TLV
  7847  0EE3  084F               	movf	??_PROTOCOL_Print_TLV,w
  7848  0EE4  00CD               	movwf	PROTOCOL_Print_TLV@length
  7849                           
  7850                           ;protocol.c: 250: for (i=0; i<length; i=i+2) {
  7851  0EE5  01F8               	clrf	_i
  7852  0EE6                     l5659:	
  7853  0EE6  084D               	movf	PROTOCOL_Print_TLV@length,w
  7854  0EE7  0278               	subwf	_i,w
  7855  0EE8  1803               	btfsc	3,0
  7856  0EE9  2F50               	goto	l5661
  7857                           
  7858                           ;protocol.c: 251: v = (int16_t)(concat(pbuffer[i], pbuffer[i+1]));
  7859  0EEA  0878               	movf	_i,w
  7860  0EEB  3E01               	addlw	1
  7861  0EEC  074E               	addwf	PROTOCOL_Print_TLV@pbuffer,w
  7862  0EED  00CF               	movwf	??_PROTOCOL_Print_TLV
  7863  0EEE  084F               	movf	??_PROTOCOL_Print_TLV,w
  7864  0EEF  0086               	movwf	6
  7865  0EF0  3001               	movlw	1	; select bank2/3
  7866  0EF1  0087               	movwf	7
  7867  0EF2  0801               	movf	1,w
  7868  0EF3  00D0               	movwf	??_PROTOCOL_Print_TLV+1
  7869  0EF4  0850               	movf	??_PROTOCOL_Print_TLV+1,w
  7870  0EF5  00A0               	movwf	concat@lsb
  7871  0EF6  0878               	movf	_i,w
  7872  0EF7  074E               	addwf	PROTOCOL_Print_TLV@pbuffer,w
  7873  0EF8  00D1               	movwf	??_PROTOCOL_Print_TLV+2
  7874  0EF9  0851               	movf	??_PROTOCOL_Print_TLV+2,w
  7875  0EFA  0086               	movwf	6
  7876  0EFB  3001               	movlw	1	; select bank2/3
  7877  0EFC  0087               	movwf	7
  7878  0EFD  0801               	movf	1,w
  7879  0EFE  319A  22BC  318D   	fcall	_concat
  7880  0F01  0020               	movlb	0	; select bank0
  7881  0F02  0821               	movf	?_concat+1,w
  7882  0F03  00D4               	movwf	PROTOCOL_Print_TLV@v+1
  7883  0F04  0820               	movf	?_concat,w
  7884  0F05  00D3               	movwf	PROTOCOL_Print_TLV@v
  7885                           
  7886                           ;protocol.c: 252: if (v <= -100 || v >= 0) {
  7887  0F06  0854               	movf	PROTOCOL_Print_TLV@v+1,w
  7888  0F07  3A80               	xorlw	128
  7889  0F08  00CF               	movwf	??_PROTOCOL_Print_TLV
  7890  0F09  307F               	movlw	127
  7891  0F0A  024F               	subwf	??_PROTOCOL_Print_TLV,w
  7892  0F0B  1D03               	skipz
  7893  0F0C  2F0F               	goto	u6485
  7894  0F0D  309D               	movlw	157
  7895  0F0E  0253               	subwf	PROTOCOL_Print_TLV@v,w
  7896  0F0F                     u6485:	
  7897  0F0F  1C03               	skipc
  7898  0F10  2F14               	goto	l5653
  7899  0F11  0020               	movlb	0	; select bank0
  7900  0F12  1BD4               	btfsc	PROTOCOL_Print_TLV@v+1,7
  7901  0F13  2F19               	goto	l5655
  7902  0F14                     l5653:	
  7903                           
  7904                           ;protocol.c: 253: printf("%d.%02d,", v/100, abs(v%100));
  7905  0F14  3052               	movlw	low ((STR_71+1)| (0+32768))
  7906  0F15  0020               	movlb	0	; select bank0
  7907  0F16  00C1               	movwf	printf@f
  7908  0F17  3091               	movlw	high ((STR_71+1)| (0+32768))
  7909  0F18  2F1D               	goto	L3
  7910  0F19                     l5655:	
  7911                           ;protocol.c: 254: } else {
  7912                           
  7913                           
  7914                           ;protocol.c: 255: printf("-%d.%02d,", v/100, abs(v%100));
  7915  0F19  3051               	movlw	low (STR_71| (0+32768))
  7916  0F1A  0020               	movlb	0	; select bank0
  7917  0F1B  00C1               	movwf	printf@f
  7918  0F1C  3091               	movlw	high (STR_71| (0+32768))
  7919  0F1D                     L3:	
  7920  0F1D  00C2               	movwf	printf@f+1
  7921  0F1E  3064               	movlw	100
  7922  0F1F  00AB               	movwf	___awdiv@divisor
  7923  0F20  3000               	movlw	0
  7924  0F21  00AC               	movwf	___awdiv@divisor+1
  7925  0F22  0854               	movf	PROTOCOL_Print_TLV@v+1,w
  7926  0F23  00AE               	movwf	___awdiv@dividend+1
  7927  0F24  0853               	movf	PROTOCOL_Print_TLV@v,w
  7928  0F25  00AD               	movwf	___awdiv@dividend
  7929  0F26  319F  27AE  318D   	fcall	___awdiv
  7930  0F29  0020               	movlb	0	; select bank0
  7931  0F2A  082C               	movf	?___awdiv+1,w
  7932  0F2B  00C4               	movwf	?_printf+3
  7933  0F2C  082B               	movf	?___awdiv,w
  7934  0F2D  00C3               	movwf	?_printf+2
  7935  0F2E  3064               	movlw	100
  7936  0F2F  00A0               	movwf	___awmod@divisor
  7937  0F30  3000               	movlw	0
  7938  0F31  00A1               	movwf	___awmod@divisor+1
  7939  0F32  0854               	movf	PROTOCOL_Print_TLV@v+1,w
  7940  0F33  00A3               	movwf	___awmod@dividend+1
  7941  0F34  0853               	movf	PROTOCOL_Print_TLV@v,w
  7942  0F35  00A2               	movwf	___awmod@dividend
  7943  0F36  319E  263B  318D   	fcall	___awmod
  7944  0F39  0020               	movlb	0	; select bank0
  7945  0F3A  0821               	movf	?___awmod+1,w
  7946  0F3B  00A8               	movwf	abs@a+1
  7947  0F3C  0820               	movf	?___awmod,w
  7948  0F3D  00A7               	movwf	abs@a
  7949  0F3E  319A  228C  318D   	fcall	_abs
  7950  0F41  0020               	movlb	0	; select bank0
  7951  0F42  0828               	movf	?_abs+1,w
  7952  0F43  00C6               	movwf	?_printf+5
  7953  0F44  0827               	movf	?_abs,w
  7954  0F45  00C5               	movwf	?_printf+4
  7955  0F46  319B  2308  318D   	fcall	_printf
  7956  0F49  0878               	movf	_i,w
  7957  0F4A  3E02               	addlw	2
  7958  0F4B  0020               	movlb	0	; select bank0
  7959  0F4C  00CF               	movwf	??_PROTOCOL_Print_TLV
  7960  0F4D  084F               	movf	??_PROTOCOL_Print_TLV,w
  7961  0F4E  00F8               	movwf	_i
  7962  0F4F  2EE6               	goto	l5659
  7963  0F50                     l5661:	
  7964                           
  7965                           ;protocol.c: 256: }
  7966                           ;protocol.c: 257: }
  7967                           ;protocol.c: 258: v = (int16_t)(concat(pbuffer[i], pbuffer[i+1]));
  7968  0F50  0878               	movf	_i,w
  7969  0F51  3E01               	addlw	1
  7970  0F52  074E               	addwf	PROTOCOL_Print_TLV@pbuffer,w
  7971  0F53  00CF               	movwf	??_PROTOCOL_Print_TLV
  7972  0F54  084F               	movf	??_PROTOCOL_Print_TLV,w
  7973  0F55  0086               	movwf	6
  7974  0F56  3001               	movlw	1	; select bank2/3
  7975  0F57  0087               	movwf	7
  7976  0F58  0801               	movf	1,w
  7977  0F59  00D0               	movwf	??_PROTOCOL_Print_TLV+1
  7978  0F5A  0850               	movf	??_PROTOCOL_Print_TLV+1,w
  7979  0F5B  00A0               	movwf	concat@lsb
  7980  0F5C  0878               	movf	_i,w
  7981  0F5D  074E               	addwf	PROTOCOL_Print_TLV@pbuffer,w
  7982  0F5E  00D1               	movwf	??_PROTOCOL_Print_TLV+2
  7983  0F5F  0851               	movf	??_PROTOCOL_Print_TLV+2,w
  7984  0F60  0086               	movwf	6
  7985  0F61  3001               	movlw	1	; select bank2/3
  7986  0F62  0087               	movwf	7
  7987  0F63  0801               	movf	1,w
  7988  0F64  319A  22BC  318D   	fcall	_concat
  7989  0F67  0020               	movlb	0	; select bank0
  7990  0F68  0821               	movf	?_concat+1,w
  7991  0F69  00D4               	movwf	PROTOCOL_Print_TLV@v+1
  7992  0F6A  0820               	movf	?_concat,w
  7993  0F6B  00D3               	movwf	PROTOCOL_Print_TLV@v
  7994                           
  7995                           ;protocol.c: 259: if (v <= -100 || v >= 0) {
  7996  0F6C  0854               	movf	PROTOCOL_Print_TLV@v+1,w
  7997  0F6D  3A80               	xorlw	128
  7998  0F6E  00CF               	movwf	??_PROTOCOL_Print_TLV
  7999  0F6F  307F               	movlw	127
  8000  0F70  024F               	subwf	??_PROTOCOL_Print_TLV,w
  8001  0F71  1D03               	skipz
  8002  0F72  2F75               	goto	u6515
  8003  0F73  309D               	movlw	157
  8004  0F74  0253               	subwf	PROTOCOL_Print_TLV@v,w
  8005  0F75                     u6515:	
  8006  0F75  1C03               	skipc
  8007  0F76  2F7A               	goto	l5667
  8008  0F77  0020               	movlb	0	; select bank0
  8009  0F78  1BD4               	btfsc	PROTOCOL_Print_TLV@v+1,7
  8010  0F79  2FAA               	goto	l5669
  8011  0F7A                     l5667:	
  8012                           
  8013                           ;protocol.c: 260: printf("%d.%02d\n", v/100, abs(v%100));
  8014  0F7A  3034               	movlw	low ((STR_73+1)| (0+32768))
  8015  0F7B  0020               	movlb	0	; select bank0
  8016  0F7C  00C1               	movwf	printf@f
  8017  0F7D  3091               	movlw	high ((STR_73+1)| (0+32768))
  8018  0F7E  00C2               	movwf	printf@f+1
  8019  0F7F  3064               	movlw	100
  8020  0F80  00AB               	movwf	___awdiv@divisor
  8021  0F81  3000               	movlw	0
  8022  0F82  00AC               	movwf	___awdiv@divisor+1
  8023  0F83  0854               	movf	PROTOCOL_Print_TLV@v+1,w
  8024  0F84  00AE               	movwf	___awdiv@dividend+1
  8025  0F85  0853               	movf	PROTOCOL_Print_TLV@v,w
  8026  0F86  00AD               	movwf	___awdiv@dividend
  8027  0F87  319F  27AE  318D   	fcall	___awdiv
  8028  0F8A  0020               	movlb	0	; select bank0
  8029  0F8B  082C               	movf	?___awdiv+1,w
  8030  0F8C  00C4               	movwf	?_printf+3
  8031  0F8D  082B               	movf	?___awdiv,w
  8032  0F8E  00C3               	movwf	?_printf+2
  8033  0F8F  3064               	movlw	100
  8034  0F90  00A0               	movwf	___awmod@divisor
  8035  0F91  3000               	movlw	0
  8036  0F92  00A1               	movwf	___awmod@divisor+1
  8037  0F93  0854               	movf	PROTOCOL_Print_TLV@v+1,w
  8038  0F94  00A3               	movwf	___awmod@dividend+1
  8039  0F95  0853               	movf	PROTOCOL_Print_TLV@v,w
  8040  0F96  00A2               	movwf	___awmod@dividend
  8041  0F97  319E  263B  318D   	fcall	___awmod
  8042  0F9A  0020               	movlb	0	; select bank0
  8043  0F9B  0821               	movf	?___awmod+1,w
  8044  0F9C  00A8               	movwf	abs@a+1
  8045  0F9D  0820               	movf	?___awmod,w
  8046  0F9E  00A7               	movwf	abs@a
  8047  0F9F  319A  228C  318D   	fcall	_abs
  8048  0FA2  0020               	movlb	0	; select bank0
  8049  0FA3  0828               	movf	?_abs+1,w
  8050  0FA4  00C6               	movwf	?_printf+5
  8051  0FA5  0827               	movf	?_abs,w
  8052  0FA6  00C5               	movwf	?_printf+4
  8053  0FA7  319B  2308         	fcall	_printf
  8054                           
  8055                           ;protocol.c: 261: } else {
  8056  0FA9  0008               	return
  8057  0FAA                     l5669:	
  8058                           
  8059                           ;protocol.c: 262: printf("-%d.%02d\n", v/100, abs(v%100));
  8060  0FAA  3033               	movlw	low (STR_73| (0+32768))
  8061  0FAB  0020               	movlb	0	; select bank0
  8062  0FAC  00C1               	movwf	printf@f
  8063  0FAD  3091               	movlw	high (STR_73| (0+32768))
  8064  0FAE  00C2               	movwf	printf@f+1
  8065  0FAF  3064               	movlw	100
  8066  0FB0  00AB               	movwf	___awdiv@divisor
  8067  0FB1  3000               	movlw	0
  8068  0FB2  00AC               	movwf	___awdiv@divisor+1
  8069  0FB3  0854               	movf	PROTOCOL_Print_TLV@v+1,w
  8070  0FB4  00AE               	movwf	___awdiv@dividend+1
  8071  0FB5  0853               	movf	PROTOCOL_Print_TLV@v,w
  8072  0FB6  00AD               	movwf	___awdiv@dividend
  8073  0FB7  319F  27AE  318D   	fcall	___awdiv
  8074  0FBA  0020               	movlb	0	; select bank0
  8075  0FBB  082C               	movf	?___awdiv+1,w
  8076  0FBC  00C4               	movwf	?_printf+3
  8077  0FBD  082B               	movf	?___awdiv,w
  8078  0FBE  00C3               	movwf	?_printf+2
  8079  0FBF  3064               	movlw	100
  8080  0FC0  00A0               	movwf	___awmod@divisor
  8081  0FC1  3000               	movlw	0
  8082  0FC2  00A1               	movwf	___awmod@divisor+1
  8083  0FC3  0854               	movf	PROTOCOL_Print_TLV@v+1,w
  8084  0FC4  00A3               	movwf	___awmod@dividend+1
  8085  0FC5  0853               	movf	PROTOCOL_Print_TLV@v,w
  8086  0FC6  00A2               	movwf	___awmod@dividend
  8087  0FC7  319E  263B  318D   	fcall	___awmod
  8088  0FCA  0020               	movlb	0	; select bank0
  8089  0FCB  0821               	movf	?___awmod+1,w
  8090  0FCC  00A8               	movwf	abs@a+1
  8091  0FCD  0820               	movf	?___awmod,w
  8092  0FCE  00A7               	movwf	abs@a
  8093  0FCF  319A  228C  318D   	fcall	_abs
  8094  0FD2  0020               	movlb	0	; select bank0
  8095  0FD3  0828               	movf	?_abs+1,w
  8096  0FD4  00C6               	movwf	?_printf+5
  8097  0FD5  0827               	movf	?_abs,w
  8098  0FD6  00C5               	movwf	?_printf+4
  8099  0FD7  319B  2308         	fcall	_printf
  8100                           
  8101                           ;protocol.c: 263: }
  8102                           ;protocol.c: 264: break;
  8103  0FD9  0008               	return
  8104  0FDA                     l5671:	
  8105                           ;protocol.c: 265: case 0x06:
  8106                           
  8107                           
  8108                           ;protocol.c: 266: printf("NO_DATA\n");
  8109  0FDA  3079               	movlw	low (STR_74| (0+32768))
  8110  0FDB  0020               	movlb	0	; select bank0
  8111  0FDC  00C1               	movwf	printf@f
  8112  0FDD  3091               	movlw	high (STR_74| (0+32768))
  8113  0FDE  00C2               	movwf	printf@f+1
  8114  0FDF  319B  2308         	fcall	_printf
  8115                           
  8116                           ;protocol.c: 267: break;
  8117  0FE1  0008               	return
  8118  0FE2                     l5673:	
  8119                           ;protocol.c: 268: default:
  8120                           
  8121                           
  8122                           ;protocol.c: 269: printf("ILLEGAL_TYPE\n");
  8123  0FE2  3004               	movlw	low (STR_75| (0+32768))
  8124  0FE3  0020               	movlb	0	; select bank0
  8125  0FE4  00C1               	movwf	printf@f
  8126  0FE5  3091               	movlw	high (STR_75| (0+32768))
  8127  0FE6  00C2               	movwf	printf@f+1
  8128  0FE7  319B  2308         	fcall	_printf
  8129                           
  8130                           ;protocol.c: 271: }
  8131                           
  8132                           ;protocol.c: 270: break;
  8133  0FE9  0008               	return
  8134  0FEA                     l5677:	
  8135  0FEA  0020               	movlb	0	; select bank0
  8136  0FEB  084C               	movf	PROTOCOL_Print_TLV@type,w
  8137                           
  8138                           ; Switch size 1, requested type "space"
  8139                           ; Number of cases is 6, Range of values is 1 to 6
  8140                           ; switch strategies available:
  8141                           ; Name         Instructions Cycles
  8142                           ; simple_byte           19    10 (average)
  8143                           ; direct_byte           21     9 (fixed)
  8144                           ; jumptable            263     9 (fixed)
  8145                           ;	Chosen strategy is simple_byte
  8146  0FEC  3A01               	xorlw	1	; case 1
  8147  0FED  1903               	skipnz
  8148  0FEE  2D99               	goto	l5585
  8149  0FEF  3A03               	xorlw	3	; case 2
  8150  0FF0  1903               	skipnz
  8151  0FF1  2DDA               	goto	l5599
  8152  0FF2  3A01               	xorlw	1	; case 3
  8153  0FF3  1903               	skipnz
  8154  0FF4  2E17               	goto	l5613
  8155  0FF5  3A07               	xorlw	7	; case 4
  8156  0FF6  1903               	skipnz
  8157  0FF7  2E77               	goto	l5627
  8158  0FF8  3A01               	xorlw	1	; case 5
  8159  0FF9  1903               	skipnz
  8160  0FFA  2ED7               	goto	l5641
  8161  0FFB  3A03               	xorlw	3	; case 6
  8162  0FFC  1903               	skipnz
  8163  0FFD  2FDA               	goto	l5671
  8164  0FFE  2FE2               	goto	l5673
  8165  0FFF  0008               	return
  8166  1000                     __end_of_PROTOCOL_Print_TLV:	
  8167                           
  8168                           	psect	text21
  8169  1ABC                     __ptext21:	
  8170 ;; *************** function _concat *****************
  8171 ;; Defined at:
  8172 ;;		line 192 in file "protocol.c"
  8173 ;; Parameters:    Size  Location     Type
  8174 ;;  msb             1    wreg     unsigned char 
  8175 ;;  lsb             1    0[BANK0 ] unsigned char 
  8176 ;; Auto vars:     Size  Location     Type
  8177 ;;  msb             1    7[BANK0 ] unsigned char 
  8178 ;; Return value:  Size  Location     Type
  8179 ;;                  2    0[BANK0 ] unsigned int 
  8180 ;; Registers used:
  8181 ;;		wreg, status,2, status,0
  8182 ;; Tracked objects:
  8183 ;;		On entry : 0/0
  8184 ;;		On exit  : 0/0
  8185 ;;		Unchanged: 0/0
  8186 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8187 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8188 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8189 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8190 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8191 ;;Total ram usage:        8 bytes
  8192 ;; Hardware stack levels used:    1
  8193 ;; Hardware stack levels required when called:    3
  8194 ;; This function calls:
  8195 ;;		Nothing
  8196 ;; This function is called by:
  8197 ;;		_PROTOCOL_Print_TLV
  8198 ;; This function uses a non-reentrant model
  8199 ;;
  8200                           
  8201                           
  8202                           ;psect for function _concat
  8203  1ABC                     _concat:	
  8204                           
  8205                           ;incstack = 0
  8206                           ; Regs used in _concat: [wreg+status,2+status,0]
  8207                           ;concat@msb stored from wreg
  8208  1ABC  0020               	movlb	0	; select bank0
  8209  1ABD  00A7               	movwf	concat@msb
  8210                           
  8211                           ;protocol.c: 193: return (uint16_t)msb * 256 + (uint16_t)lsb;
  8212  1ABE  0820               	movf	concat@lsb,w
  8213  1ABF  00A2               	movwf	??_concat
  8214  1AC0  01A3               	clrf	??_concat+1
  8215  1AC1  0827               	movf	concat@msb,w
  8216  1AC2  00A4               	movwf	??_concat+2
  8217  1AC3  01A5               	clrf	??_concat+3
  8218  1AC4  0824               	movf	??_concat+2,w
  8219  1AC5  00A5               	movwf	??_concat+3
  8220  1AC6  01A4               	clrf	??_concat+2
  8221  1AC7  0822               	movf	??_concat,w
  8222  1AC8  0724               	addwf	??_concat+2,w
  8223  1AC9  00A0               	movwf	?_concat
  8224  1ACA  0823               	movf	??_concat+1,w
  8225  1ACB  3D25               	addwfc	??_concat+3,w
  8226  1ACC  00A1               	movwf	?_concat+1
  8227  1ACD  0008               	return
  8228  1ACE                     __end_of_concat:	
  8229                           
  8230                           	psect	text22
  8231  1A8C                     __ptext22:	
  8232 ;; *************** function _abs *****************
  8233 ;; Defined at:
  8234 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\abs.c"
  8235 ;; Parameters:    Size  Location     Type
  8236 ;;  a               2    7[BANK0 ] int 
  8237 ;; Auto vars:     Size  Location     Type
  8238 ;;		None
  8239 ;; Return value:  Size  Location     Type
  8240 ;;                  2    7[BANK0 ] int 
  8241 ;; Registers used:
  8242 ;;		wreg, status,2, status,0
  8243 ;; Tracked objects:
  8244 ;;		On entry : 0/0
  8245 ;;		On exit  : 0/0
  8246 ;;		Unchanged: 0/0
  8247 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8248 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8249 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8250 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8251 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8252 ;;Total ram usage:        4 bytes
  8253 ;; Hardware stack levels used:    1
  8254 ;; Hardware stack levels required when called:    3
  8255 ;; This function calls:
  8256 ;;		Nothing
  8257 ;; This function is called by:
  8258 ;;		_edge_meter
  8259 ;;		_PROTOCOL_Print_TLV
  8260 ;; This function uses a non-reentrant model
  8261 ;;
  8262                           
  8263                           
  8264                           ;psect for function _abs
  8265  1A8C                     _abs:	
  8266                           
  8267                           ;incstack = 0
  8268                           ; Regs used in _abs: [wreg+status,2+status,0]
  8269  1A8C  0020               	movlb	0	; select bank0
  8270  1A8D  1FA8               	btfss	abs@a+1,7
  8271  1A8E  0008               	return
  8272  1A8F  0927               	comf	abs@a,w
  8273  1A90  00A9               	movwf	??_abs
  8274  1A91  0928               	comf	abs@a+1,w
  8275  1A92  00AA               	movwf	??_abs+1
  8276  1A93  0AA9               	incf	??_abs,f
  8277  1A94  1903               	skipnz
  8278  1A95  0AAA               	incf	??_abs+1,f
  8279  1A96  0829               	movf	??_abs,w
  8280  1A97  00A7               	movwf	?_abs
  8281  1A98  082A               	movf	??_abs+1,w
  8282  1A99  00A8               	movwf	?_abs+1
  8283  1A9A  0008               	return
  8284  1A9B                     __end_of_abs:	
  8285                           
  8286                           	psect	text23
  8287  1E3B                     __ptext23:	
  8288 ;; *************** function ___awmod *****************
  8289 ;; Defined at:
  8290 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awmod.c"
  8291 ;; Parameters:    Size  Location     Type
  8292 ;;  divisor         2    0[BANK0 ] int 
  8293 ;;  dividend        2    2[BANK0 ] int 
  8294 ;; Auto vars:     Size  Location     Type
  8295 ;;  sign            1    6[BANK0 ] unsigned char 
  8296 ;;  counter         1    5[BANK0 ] unsigned char 
  8297 ;; Return value:  Size  Location     Type
  8298 ;;                  2    0[BANK0 ] int 
  8299 ;; Registers used:
  8300 ;;		wreg, status,2, status,0
  8301 ;; Tracked objects:
  8302 ;;		On entry : 0/0
  8303 ;;		On exit  : 0/0
  8304 ;;		Unchanged: 0/0
  8305 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8306 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8307 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8308 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8309 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8310 ;;Total ram usage:        7 bytes
  8311 ;; Hardware stack levels used:    1
  8312 ;; Hardware stack levels required when called:    3
  8313 ;; This function calls:
  8314 ;;		Nothing
  8315 ;; This function is called by:
  8316 ;;		_PROTOCOL_Print_TLV
  8317 ;; This function uses a non-reentrant model
  8318 ;;
  8319                           
  8320                           
  8321                           ;psect for function ___awmod
  8322  1E3B                     ___awmod:	
  8323                           
  8324                           ;incstack = 0
  8325                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  8326  1E3B  0020               	movlb	0	; select bank0
  8327  1E3C  01A6               	clrf	___awmod@sign
  8328  1E3D  1FA3               	btfss	___awmod@dividend+1,7
  8329  1E3E  2E46               	goto	l4241
  8330  1E3F  09A2               	comf	___awmod@dividend,f
  8331  1E40  09A3               	comf	___awmod@dividend+1,f
  8332  1E41  0AA2               	incf	___awmod@dividend,f
  8333  1E42  1903               	skipnz
  8334  1E43  0AA3               	incf	___awmod@dividend+1,f
  8335  1E44  01A6               	clrf	___awmod@sign
  8336  1E45  0AA6               	incf	___awmod@sign,f
  8337  1E46                     l4241:	
  8338  1E46  1FA1               	btfss	___awmod@divisor+1,7
  8339  1E47  2E4D               	goto	l4245
  8340  1E48  09A0               	comf	___awmod@divisor,f
  8341  1E49  09A1               	comf	___awmod@divisor+1,f
  8342  1E4A  0AA0               	incf	___awmod@divisor,f
  8343  1E4B  1903               	skipnz
  8344  1E4C  0AA1               	incf	___awmod@divisor+1,f
  8345  1E4D                     l4245:	
  8346  1E4D  0820               	movf	___awmod@divisor,w
  8347  1E4E  0421               	iorwf	___awmod@divisor+1,w
  8348  1E4F  1903               	btfsc	3,2
  8349  1E50  2E74               	goto	l4263
  8350  1E51  01A5               	clrf	___awmod@counter
  8351  1E52  0AA5               	incf	___awmod@counter,f
  8352  1E53                     l4253:	
  8353  1E53  1BA1               	btfsc	___awmod@divisor+1,7
  8354  1E54  2E5F               	goto	l4255
  8355  1E55  3001               	movlw	1
  8356  1E56                     u4455:	
  8357  1E56  35A0               	lslf	___awmod@divisor,f
  8358  1E57  0DA1               	rlf	___awmod@divisor+1,f
  8359  1E58  0B89               	decfsz	9,f
  8360  1E59  2E56               	goto	u4455
  8361  1E5A  3001               	movlw	1
  8362  1E5B  00A4               	movwf	??___awmod
  8363  1E5C  0824               	movf	??___awmod,w
  8364  1E5D  07A5               	addwf	___awmod@counter,f
  8365  1E5E  2E53               	goto	l4253
  8366  1E5F                     l4255:	
  8367  1E5F  0821               	movf	___awmod@divisor+1,w
  8368  1E60  0223               	subwf	___awmod@dividend+1,w
  8369  1E61  1D03               	skipz
  8370  1E62  2E65               	goto	u4475
  8371  1E63  0820               	movf	___awmod@divisor,w
  8372  1E64  0222               	subwf	___awmod@dividend,w
  8373  1E65                     u4475:	
  8374  1E65  1C03               	skipc
  8375  1E66  2E6B               	goto	l4259
  8376  1E67  0820               	movf	___awmod@divisor,w
  8377  1E68  02A2               	subwf	___awmod@dividend,f
  8378  1E69  0821               	movf	___awmod@divisor+1,w
  8379  1E6A  3BA3               	subwfb	___awmod@dividend+1,f
  8380  1E6B                     l4259:	
  8381  1E6B  3001               	movlw	1
  8382  1E6C                     u4485:	
  8383  1E6C  36A1               	lsrf	___awmod@divisor+1,f
  8384  1E6D  0CA0               	rrf	___awmod@divisor,f
  8385  1E6E  0B89               	decfsz	9,f
  8386  1E6F  2E6C               	goto	u4485
  8387  1E70  3001               	movlw	1
  8388  1E71  02A5               	subwf	___awmod@counter,f
  8389  1E72  1D03               	btfss	3,2
  8390  1E73  2E5F               	goto	l4255
  8391  1E74                     l4263:	
  8392  1E74  0826               	movf	___awmod@sign,w
  8393  1E75  1903               	btfsc	3,2
  8394  1E76  2E7C               	goto	l4267
  8395  1E77  09A2               	comf	___awmod@dividend,f
  8396  1E78  09A3               	comf	___awmod@dividend+1,f
  8397  1E79  0AA2               	incf	___awmod@dividend,f
  8398  1E7A  1903               	skipnz
  8399  1E7B  0AA3               	incf	___awmod@dividend+1,f
  8400  1E7C                     l4267:	
  8401  1E7C  0823               	movf	___awmod@dividend+1,w
  8402  1E7D  00A1               	movwf	?___awmod+1
  8403  1E7E  0822               	movf	___awmod@dividend,w
  8404  1E7F  00A0               	movwf	?___awmod
  8405  1E80  0008               	return
  8406  1E81                     __end_of___awmod:	
  8407                           
  8408                           	psect	text24
  8409  1DD7                     __ptext24:	
  8410 ;; *************** function _detected *****************
  8411 ;; Defined at:
  8412 ;;		line 222 in file "main.c"
  8413 ;; Parameters:    Size  Location     Type
  8414 ;;  dev_addr        1    wreg     unsigned char 
  8415 ;; Auto vars:     Size  Location     Type
  8416 ;;  dev_addr        1   26[BANK0 ] unsigned char 
  8417 ;;  exist           1   25[BANK0 ] unsigned char 
  8418 ;;  x               1   24[BANK0 ] unsigned char 
  8419 ;;  y               1   23[BANK0 ] unsigned char 
  8420 ;; Return value:  Size  Location     Type
  8421 ;;                  1    wreg      unsigned char 
  8422 ;; Registers used:
  8423 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8424 ;; Tracked objects:
  8425 ;;		On entry : 0/0
  8426 ;;		On exit  : 0/0
  8427 ;;		Unchanged: 0/0
  8428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8429 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8430 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8431 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8432 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8433 ;;Total ram usage:        7 bytes
  8434 ;; Hardware stack levels used:    1
  8435 ;; Hardware stack levels required when called:    4
  8436 ;; This function calls:
  8437 ;;		___awdiv
  8438 ;; This function is called by:
  8439 ;;		_fetch
  8440 ;; This function uses a non-reentrant model
  8441 ;;
  8442                           
  8443                           
  8444                           ;psect for function _detected
  8445  1DD7                     _detected:	
  8446                           
  8447                           ;incstack = 0
  8448                           ; Regs used in _detected: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  8449                           ;detected@dev_addr stored from wreg
  8450  1DD7  0020               	movlb	0	; select bank0
  8451  1DD8  00BA               	movwf	detected@dev_addr
  8452                           
  8453                           ;main.c: 223: uint8_t y = dev_addr / 8;
  8454  1DD9  3008               	movlw	8
  8455  1DDA  00AB               	movwf	___awdiv@divisor
  8456  1DDB  3000               	movlw	0
  8457  1DDC  00AC               	movwf	___awdiv@divisor+1
  8458  1DDD  083A               	movf	detected@dev_addr,w
  8459  1DDE  00B4               	movwf	??_detected
  8460  1DDF  01B5               	clrf	??_detected+1
  8461  1DE0  0834               	movf	??_detected,w
  8462  1DE1  00AD               	movwf	___awdiv@dividend
  8463  1DE2  0835               	movf	??_detected+1,w
  8464  1DE3  00AE               	movwf	___awdiv@dividend+1
  8465  1DE4  319F  27AE  319D   	fcall	___awdiv
  8466  1DE7  0020               	movlb	0	; select bank0
  8467  1DE8  082B               	movf	?___awdiv,w
  8468  1DE9  00B6               	movwf	??_detected+2
  8469  1DEA  0836               	movf	??_detected+2,w
  8470  1DEB  00B7               	movwf	detected@y
  8471                           
  8472                           ;main.c: 224: uint8_t x = dev_addr % 8;
  8473  1DEC  083A               	movf	detected@dev_addr,w
  8474  1DED  3907               	andlw	7
  8475  1DEE  00B4               	movwf	??_detected
  8476  1DEF  0834               	movf	??_detected,w
  8477  1DF0  00B8               	movwf	detected@x
  8478                           
  8479                           ;main.c: 225: bool exist = 0;
  8480  1DF1  01B9               	clrf	detected@exist
  8481                           
  8482                           ;main.c: 226: if ((dev_map[y] & (0x01 << x)) > 0) {
  8483  1DF2  0837               	movf	detected@y,w
  8484  1DF3  3E25               	addlw	(low (_dev_map| (0+256)))& (0+255)
  8485  1DF4  0086               	movwf	6
  8486  1DF5  3001               	movlw	1	; select bank2/3
  8487  1DF6  0087               	movwf	7
  8488  1DF7  3001               	movlw	1
  8489  1DF8  00B4               	movwf	??_detected
  8490  1DF9  0A38               	incf	detected@x,w
  8491  1DFA  2DFC               	goto	u4874
  8492  1DFB                     u4875:	
  8493  1DFB  35B4               	lslf	??_detected,f
  8494  1DFC                     u4874:	
  8495  1DFC  0B89               	decfsz	9,f
  8496  1DFD  2DFB               	goto	u4875
  8497  1DFE  0834               	movf	??_detected,w
  8498  1DFF  0501               	andwf	1,w
  8499  1E00  1903               	btfsc	3,2
  8500  1E01  2E04               	goto	l4549
  8501                           
  8502                           ;main.c: 227: exist = 1;
  8503  1E02  01B9               	clrf	detected@exist
  8504  1E03  0AB9               	incf	detected@exist,f
  8505  1E04                     l4549:	
  8506                           
  8507                           ;main.c: 228: }
  8508                           ;main.c: 229: return exist;
  8509  1E04  0839               	movf	detected@exist,w
  8510  1E05  0008               	return
  8511  1E06                     __end_of_detected:	
  8512                           
  8513                           	psect	text25
  8514  0990                     __ptext25:	
  8515 ;; *************** function _exec_remote_cmd *****************
  8516 ;; Defined at:
  8517 ;;		line 70 in file "main.c"
  8518 ;; Parameters:    Size  Location     Type
  8519 ;;  idx             1    wreg     unsigned char 
  8520 ;; Auto vars:     Size  Location     Type
  8521 ;;  idx             1   50[BANK1 ] unsigned char 
  8522 ;;  send_buf       50    0[BANK1 ] unsigned char [50]
  8523 ;;  buf             2   55[BANK1 ] PTR unsigned char 
  8524 ;;		 -> cmd_buf(192), 
  8525 ;;  data            1   54[BANK1 ] unsigned char 
  8526 ;;  status          1   53[BANK1 ] unsigned char 
  8527 ;;  i               1   52[BANK1 ] unsigned char 
  8528 ;;  j               1   51[BANK1 ] unsigned char 
  8529 ;; Return value:  Size  Location     Type
  8530 ;;                  1    wreg      void 
  8531 ;; Registers used:
  8532 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  8533 ;; Tracked objects:
  8534 ;;		On entry : 0/0
  8535 ;;		On exit  : 0/0
  8536 ;;		Unchanged: 0/0
  8537 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  8538 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8539 ;;      Locals:         0       0      57       0       0       0       0       0       0       0       0       0       
      +0       0
  8540 ;;      Temps:          0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
  8541 ;;      Totals:         0       5      57       0       0       0       0       0       0       0       0       0       
      +0       0
  8542 ;;Total ram usage:       62 bytes
  8543 ;; Hardware stack levels used:    1
  8544 ;; Hardware stack levels required when called:    7
  8545 ;; This function calls:
  8546 ;;		___wmul
  8547 ;;		_atoi
  8548 ;;		_i2c1_read
  8549 ;;		_i2c1_write
  8550 ;;		_i2c1_write_no_data
  8551 ;;		_printf
  8552 ;;		_strncmp
  8553 ;; This function is called by:
  8554 ;;		_inv_handler
  8555 ;; This function uses a non-reentrant model
  8556 ;;
  8557                           
  8558                           
  8559                           ;psect for function _exec_remote_cmd
  8560  0990                     _exec_remote_cmd:	
  8561                           
  8562                           ;incstack = 0
  8563                           ; Regs used in _exec_remote_cmd: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  8564                           ;exec_remote_cmd@idx stored from wreg
  8565  0990  0021               	movlb	1	; select bank1
  8566  0991  00D2               	movwf	exec_remote_cmd@idx^(0+128)
  8567                           
  8568                           ;main.c: 71: uint8_t data;
  8569                           ;main.c: 72: uint8_t i, j;
  8570                           ;main.c: 73: uint8_t status;
  8571                           ;main.c: 75: uint8_t send_buf[48 + 2];
  8572                           ;main.c: 77: char *buf = cmd_buf[idx];
  8573  0992  0852               	movf	exec_remote_cmd@idx^(0+128),w
  8574  0993  0020               	movlb	0	; select bank0
  8575  0994  00CC               	movwf	??_exec_remote_cmd
  8576  0995  01CD               	clrf	??_exec_remote_cmd+1
  8577  0996  084C               	movf	??_exec_remote_cmd,w
  8578  0997  00A0               	movwf	___wmul@multiplier
  8579  0998  084D               	movf	??_exec_remote_cmd+1,w
  8580  0999  00A1               	movwf	___wmul@multiplier+1
  8581  099A  3030               	movlw	48
  8582  099B  00A2               	movwf	___wmul@multiplicand
  8583  099C  3000               	movlw	0
  8584  099D  00A3               	movwf	___wmul@multiplicand+1
  8585  099E  319B  238B  3189   	fcall	___wmul
  8586  09A1  3030               	movlw	48
  8587  09A2  0020               	movlb	0	; select bank0
  8588  09A3  00CE               	movwf	??_exec_remote_cmd+2
  8589  09A4  3023               	movlw	35
  8590  09A5  00CF               	movwf	??_exec_remote_cmd+3
  8591  09A6  0820               	movf	?___wmul,w
  8592  09A7  074E               	addwf	??_exec_remote_cmd+2,w
  8593  09A8  0021               	movlb	1	; select bank1
  8594  09A9  00D7               	movwf	exec_remote_cmd@buf^(0+128)
  8595  09AA  0020               	movlb	0	; select bank0
  8596  09AB  0821               	movf	?___wmul+1,w
  8597  09AC  3D4F               	addwfc	??_exec_remote_cmd+3,w
  8598  09AD  0021               	movlb	1	; select bank1
  8599  09AE  00D8               	movwf	(exec_remote_cmd@buf+1)^(0+128)
  8600                           
  8601                           ;main.c: 78: if (buf[0] == '\0') return;
  8602  09AF  0857               	movf	exec_remote_cmd@buf^(0+128),w
  8603  09B0  0086               	movwf	6
  8604  09B1  0858               	movf	(exec_remote_cmd@buf+1)^(0+128),w
  8605  09B2  0087               	movwf	7
  8606  09B3  0801               	movf	1,w
  8607  09B4  1903               	btfsc	3,2
  8608  09B5  0008               	return
  8609                           
  8610                           ;main.c: 80: if (!strncmp(("WHO"), (buf), 3)) {
  8611  09B6  30F8               	movlw	low (STR_1| (0+32768))
  8612  09B7  0020               	movlb	0	; select bank0
  8613  09B8  00A0               	movwf	strncmp@s1
  8614  09B9  3091               	movlw	high (STR_1| (0+32768))
  8615  09BA  00A1               	movwf	strncmp@s1+1
  8616  09BB  0021               	movlb	1	; select bank1
  8617  09BC  0858               	movf	(exec_remote_cmd@buf+1)^(0+128),w
  8618  09BD  0020               	movlb	0	; select bank0
  8619  09BE  00A3               	movwf	strncmp@s2+1
  8620  09BF  0021               	movlb	1	; select bank1
  8621  09C0  0857               	movf	exec_remote_cmd@buf^(0+128),w
  8622  09C1  0020               	movlb	0	; select bank0
  8623  09C2  00A2               	movwf	strncmp@s2
  8624  09C3  3003               	movlw	3
  8625  09C4  00A4               	movwf	strncmp@len
  8626  09C5  3000               	movlw	0
  8627  09C6  00A5               	movwf	strncmp@len+1
  8628  09C7  3187  27BE  3189   	fcall	_strncmp
  8629  09CA  0020               	movlb	0	; select bank0
  8630  09CB  0820               	movf	?_strncmp,w
  8631  09CC  0421               	iorwf	?_strncmp+1,w
  8632  09CD  1D03               	btfss	3,2
  8633  09CE  29F5               	goto	l5793
  8634                           
  8635                           ;main.c: 81: status = i2c1_read(BACKPLANE_SLAVE_ADDRESS, 0x01, &data, 1);
  8636  09CF  0022               	movlb	2	; select bank2
  8637  09D0  0868               	movf	_BACKPLANE_SLAVE_ADDRESS^(0+256),w
  8638  09D1  0020               	movlb	0	; select bank0
  8639  09D2  00CC               	movwf	??_exec_remote_cmd
  8640  09D3  01CD               	clrf	??_exec_remote_cmd+1
  8641  09D4  084C               	movf	??_exec_remote_cmd,w
  8642  09D5  00B0               	movwf	i2c1_read@dev_addr
  8643  09D6  084D               	movf	??_exec_remote_cmd+1,w
  8644  09D7  00B1               	movwf	i2c1_read@dev_addr+1
  8645  09D8  01B2               	clrf	i2c1_read@reg_addr
  8646  09D9  0AB2               	incf	i2c1_read@reg_addr,f
  8647  09DA  30D6               	movlw	low exec_remote_cmd@data
  8648  09DB  00B3               	movwf	i2c1_read@pbuf
  8649  09DC  3000               	movlw	high exec_remote_cmd@data
  8650  09DD  00B4               	movwf	i2c1_read@pbuf+1
  8651  09DE  01B5               	clrf	i2c1_read@len
  8652  09DF  0AB5               	incf	i2c1_read@len,f
  8653  09E0  3192  228F  3189   	fcall	_i2c1_read
  8654  09E3  0020               	movlb	0	; select bank0
  8655  09E4  00CE               	movwf	??_exec_remote_cmd+2
  8656  09E5  084E               	movf	??_exec_remote_cmd+2,w
  8657  09E6  0021               	movlb	1	; select bank1
  8658  09E7  00D5               	movwf	exec_remote_cmd@status^(0+128)
  8659                           
  8660                           ;main.c: 82: if (status == 0) printf("$:WHO:%d\n", data);
  8661  09E8  0855               	movf	exec_remote_cmd@status^(0+128),w
  8662  09E9  1D03               	btfss	3,2
  8663  09EA  29F0               	goto	l5791
  8664  09EB  3065               	movlw	low (STR_2| (0+32768))
  8665  09EC  0020               	movlb	0	; select bank0
  8666  09ED  00C1               	movwf	printf@f
  8667  09EE  3091               	movlw	high (STR_2| (0+32768))
  8668  09EF  2B09               	goto	L7
  8669  09F0                     l5791:	
  8670                           
  8671                           ;main.c: 83: else printf("!\n");
  8672  09F0  301C               	movlw	low (STR_3| (0+32768))
  8673  09F1  0020               	movlb	0	; select bank0
  8674  09F2  00C1               	movwf	printf@f
  8675  09F3  3092               	movlw	high (STR_3| (0+32768))
  8676  09F4  2B78               	goto	L8
  8677  09F5                     l5793:	
  8678                           ;main.c: 84: } else if (!strncmp(("SAV"), (buf), 3)) {
  8679                           
  8680  09F5  3014               	movlw	low (STR_4| (0+32768))
  8681  09F6  0020               	movlb	0	; select bank0
  8682  09F7  00A0               	movwf	strncmp@s1
  8683  09F8  3092               	movlw	high (STR_4| (0+32768))
  8684  09F9  00A1               	movwf	strncmp@s1+1
  8685  09FA  0021               	movlb	1	; select bank1
  8686  09FB  0858               	movf	(exec_remote_cmd@buf+1)^(0+128),w
  8687  09FC  0020               	movlb	0	; select bank0
  8688  09FD  00A3               	movwf	strncmp@s2+1
  8689  09FE  0021               	movlb	1	; select bank1
  8690  09FF  0857               	movf	exec_remote_cmd@buf^(0+128),w
  8691  0A00  0020               	movlb	0	; select bank0
  8692  0A01  00A2               	movwf	strncmp@s2
  8693  0A02  3003               	movlw	3
  8694  0A03  00A4               	movwf	strncmp@len
  8695  0A04  3000               	movlw	0
  8696  0A05  00A5               	movwf	strncmp@len+1
  8697  0A06  3187  27BE  3189   	fcall	_strncmp
  8698  0A09  0020               	movlb	0	; select bank0
  8699  0A0A  0820               	movf	?_strncmp,w
  8700  0A0B  0421               	iorwf	?_strncmp+1,w
  8701  0A0C  1D03               	btfss	3,2
  8702  0A0D  2A19               	goto	l5797
  8703                           
  8704                           ;main.c: 85: status = i2c1_write_no_data(BACKPLANE_SLAVE_ADDRESS, 0x03);
  8705  0A0E  0022               	movlb	2	; select bank2
  8706  0A0F  0868               	movf	_BACKPLANE_SLAVE_ADDRESS^(0+256),w
  8707  0A10  0020               	movlb	0	; select bank0
  8708  0A11  00CC               	movwf	??_exec_remote_cmd
  8709  0A12  01CD               	clrf	??_exec_remote_cmd+1
  8710  0A13  084C               	movf	??_exec_remote_cmd,w
  8711  0A14  00AE               	movwf	i2c1_write_no_data@dev_addr
  8712  0A15  084D               	movf	??_exec_remote_cmd+1,w
  8713  0A16  00AF               	movwf	i2c1_write_no_data@dev_addr+1
  8714  0A17  3003               	movlw	3
  8715  0A18  2A3C               	goto	L6
  8716  0A19                     l5797:	
  8717                           ;main.c: 86: } else if (!strncmp(("STA"), (buf), 3)) {
  8718                           
  8719  0A19  30DC               	movlw	low (STR_5| (0+32768))
  8720  0A1A  0020               	movlb	0	; select bank0
  8721  0A1B  00A0               	movwf	strncmp@s1
  8722  0A1C  3091               	movlw	high (STR_5| (0+32768))
  8723  0A1D  00A1               	movwf	strncmp@s1+1
  8724  0A1E  0021               	movlb	1	; select bank1
  8725  0A1F  0858               	movf	(exec_remote_cmd@buf+1)^(0+128),w
  8726  0A20  0020               	movlb	0	; select bank0
  8727  0A21  00A3               	movwf	strncmp@s2+1
  8728  0A22  0021               	movlb	1	; select bank1
  8729  0A23  0857               	movf	exec_remote_cmd@buf^(0+128),w
  8730  0A24  0020               	movlb	0	; select bank0
  8731  0A25  00A2               	movwf	strncmp@s2
  8732  0A26  3003               	movlw	3
  8733  0A27  00A4               	movwf	strncmp@len
  8734  0A28  3000               	movlw	0
  8735  0A29  00A5               	movwf	strncmp@len+1
  8736  0A2A  3187  27BE  3189   	fcall	_strncmp
  8737  0A2D  0020               	movlb	0	; select bank0
  8738  0A2E  0820               	movf	?_strncmp,w
  8739  0A2F  0421               	iorwf	?_strncmp+1,w
  8740  0A30  1D03               	btfss	3,2
  8741  0A31  2A48               	goto	l5801
  8742                           
  8743                           ;main.c: 87: status = i2c1_write_no_data(BACKPLANE_SLAVE_ADDRESS, 0x04);
  8744  0A32  0022               	movlb	2	; select bank2
  8745  0A33  0868               	movf	_BACKPLANE_SLAVE_ADDRESS^(0+256),w
  8746  0A34  0020               	movlb	0	; select bank0
  8747  0A35  00CC               	movwf	??_exec_remote_cmd
  8748  0A36  01CD               	clrf	??_exec_remote_cmd+1
  8749  0A37  084C               	movf	??_exec_remote_cmd,w
  8750  0A38  00AE               	movwf	i2c1_write_no_data@dev_addr
  8751  0A39  084D               	movf	??_exec_remote_cmd+1,w
  8752  0A3A  00AF               	movwf	i2c1_write_no_data@dev_addr+1
  8753  0A3B  3004               	movlw	4
  8754  0A3C                     L6:	
  8755  0A3C  00CE               	movwf	??_exec_remote_cmd+2
  8756  0A3D  084E               	movf	??_exec_remote_cmd+2,w
  8757  0A3E  00B0               	movwf	i2c1_write_no_data@reg_addr
  8758  0A3F  319D  2528  3189   	fcall	_i2c1_write_no_data
  8759  0A42  0020               	movlb	0	; select bank0
  8760  0A43  00CF               	movwf	??_exec_remote_cmd+3
  8761  0A44  084F               	movf	??_exec_remote_cmd+3,w
  8762  0A45  0021               	movlb	1	; select bank1
  8763  0A46  00D5               	movwf	exec_remote_cmd@status^(0+128)
  8764                           
  8765                           ;main.c: 88: } else if (!strncmp(("STP"), (buf), 3)) {
  8766  0A47  2B7B               	goto	l5839
  8767  0A48                     l5801:	
  8768  0A48  3000               	movlw	low (STR_6| (0+32768))
  8769  0A49  0020               	movlb	0	; select bank0
  8770  0A4A  00A0               	movwf	strncmp@s1
  8771  0A4B  3092               	movlw	high (STR_6| (0+32768))
  8772  0A4C  00A1               	movwf	strncmp@s1+1
  8773  0A4D  0021               	movlb	1	; select bank1
  8774  0A4E  0858               	movf	(exec_remote_cmd@buf+1)^(0+128),w
  8775  0A4F  0020               	movlb	0	; select bank0
  8776  0A50  00A3               	movwf	strncmp@s2+1
  8777  0A51  0021               	movlb	1	; select bank1
  8778  0A52  0857               	movf	exec_remote_cmd@buf^(0+128),w
  8779  0A53  0020               	movlb	0	; select bank0
  8780  0A54  00A2               	movwf	strncmp@s2
  8781  0A55  3003               	movlw	3
  8782  0A56  00A4               	movwf	strncmp@len
  8783  0A57  3000               	movlw	0
  8784  0A58  00A5               	movwf	strncmp@len+1
  8785  0A59  3187  27BE  3189   	fcall	_strncmp
  8786  0A5C  0020               	movlb	0	; select bank0
  8787  0A5D  0820               	movf	?_strncmp,w
  8788  0A5E  0421               	iorwf	?_strncmp+1,w
  8789  0A5F  1D03               	btfss	3,2
  8790  0A60  2A83               	goto	l5811
  8791                           
  8792                           ;main.c: 89: status = i2c1_write_no_data(BACKPLANE_SLAVE_ADDRESS, 0x05);
  8793  0A61  0022               	movlb	2	; select bank2
  8794  0A62  0868               	movf	_BACKPLANE_SLAVE_ADDRESS^(0+256),w
  8795  0A63  0020               	movlb	0	; select bank0
  8796  0A64  00CC               	movwf	??_exec_remote_cmd
  8797  0A65  01CD               	clrf	??_exec_remote_cmd+1
  8798  0A66  084C               	movf	??_exec_remote_cmd,w
  8799  0A67  00AE               	movwf	i2c1_write_no_data@dev_addr
  8800  0A68  084D               	movf	??_exec_remote_cmd+1,w
  8801  0A69  00AF               	movwf	i2c1_write_no_data@dev_addr+1
  8802  0A6A  3005               	movlw	5
  8803  0A6B  00CE               	movwf	??_exec_remote_cmd+2
  8804  0A6C  084E               	movf	??_exec_remote_cmd+2,w
  8805  0A6D  00B0               	movwf	i2c1_write_no_data@reg_addr
  8806  0A6E  319D  2528  3189   	fcall	_i2c1_write_no_data
  8807  0A71  0020               	movlb	0	; select bank0
  8808  0A72  00CF               	movwf	??_exec_remote_cmd+3
  8809  0A73  084F               	movf	??_exec_remote_cmd+3,w
  8810  0A74  0021               	movlb	1	; select bank1
  8811  0A75  00D5               	movwf	exec_remote_cmd@status^(0+128)
  8812                           
  8813                           ;main.c: 90: if (status == 0) printf("*:STP:ACK\n");
  8814  0A76  0855               	movf	exec_remote_cmd@status^(0+128),w
  8815  0A77  1D03               	btfss	3,2
  8816  0A78  2A7E               	goto	l5809
  8817  0A79  301E               	movlw	low (STR_7| (0+32768))
  8818  0A7A  0020               	movlb	0	; select bank0
  8819  0A7B  00C1               	movwf	printf@f
  8820  0A7C  3091               	movlw	high (STR_7| (0+32768))
  8821  0A7D  2B78               	goto	L8
  8822  0A7E                     l5809:	
  8823                           
  8824                           ;main.c: 91: else printf("!:STP:NACK\n");
  8825  0A7E  3012               	movlw	low (STR_8| (0+32768))
  8826  0A7F  0020               	movlb	0	; select bank0
  8827  0A80  00C1               	movwf	printf@f
  8828  0A81  3091               	movlw	high (STR_8| (0+32768))
  8829  0A82  2B78               	goto	L8
  8830  0A83                     l5811:	
  8831                           ;main.c: 92: } else if (!strncmp(("SET"), (buf), 3)) {
  8832                           
  8833  0A83  3010               	movlw	low (STR_9| (0+32768))
  8834  0A84  0020               	movlb	0	; select bank0
  8835  0A85  00A0               	movwf	strncmp@s1
  8836  0A86  3092               	movlw	high (STR_9| (0+32768))
  8837  0A87  00A1               	movwf	strncmp@s1+1
  8838  0A88  0021               	movlb	1	; select bank1
  8839  0A89  0858               	movf	(exec_remote_cmd@buf+1)^(0+128),w
  8840  0A8A  0020               	movlb	0	; select bank0
  8841  0A8B  00A3               	movwf	strncmp@s2+1
  8842  0A8C  0021               	movlb	1	; select bank1
  8843  0A8D  0857               	movf	exec_remote_cmd@buf^(0+128),w
  8844  0A8E  0020               	movlb	0	; select bank0
  8845  0A8F  00A2               	movwf	strncmp@s2
  8846  0A90  3003               	movlw	3
  8847  0A91  00A4               	movwf	strncmp@len
  8848  0A92  3000               	movlw	0
  8849  0A93  00A5               	movwf	strncmp@len+1
  8850  0A94  3187  27BE  3189   	fcall	_strncmp
  8851  0A97  0020               	movlb	0	; select bank0
  8852  0A98  0820               	movf	?_strncmp,w
  8853  0A99  0421               	iorwf	?_strncmp+1,w
  8854  0A9A  1D03               	btfss	3,2
  8855  0A9B  2AD6               	goto	l5815
  8856                           
  8857                           ;main.c: 93: data = atoi(&buf[4]);
  8858  0A9C  0021               	movlb	1	; select bank1
  8859  0A9D  0857               	movf	exec_remote_cmd@buf^(0+128),w
  8860  0A9E  3E04               	addlw	4
  8861  0A9F  0020               	movlb	0	; select bank0
  8862  0AA0  00CC               	movwf	??_exec_remote_cmd
  8863  0AA1  3000               	movlw	0
  8864  0AA2  0021               	movlb	1	; select bank1
  8865  0AA3  3D58               	addwfc	(exec_remote_cmd@buf+1)^(0+128),w
  8866  0AA4  0020               	movlb	0	; select bank0
  8867  0AA5  00CD               	movwf	??_exec_remote_cmd+1
  8868  0AA6  084C               	movf	??_exec_remote_cmd,w
  8869  0AA7  00A6               	movwf	atoi@s
  8870  0AA8  084D               	movf	??_exec_remote_cmd+1,w
  8871  0AA9  00A7               	movwf	atoi@s+1
  8872  0AAA  3194  2451  3189   	fcall	_atoi
  8873  0AAD  0020               	movlb	0	; select bank0
  8874  0AAE  0826               	movf	?_atoi,w
  8875  0AAF  00CE               	movwf	??_exec_remote_cmd+2
  8876  0AB0  084E               	movf	??_exec_remote_cmd+2,w
  8877  0AB1  0021               	movlb	1	; select bank1
  8878  0AB2  00D6               	movwf	exec_remote_cmd@data^(0+128)
  8879                           
  8880                           ;main.c: 94: i2c1_write_no_data(BACKPLANE_SLAVE_ADDRESS, 0x08);
  8881  0AB3  0022               	movlb	2	; select bank2
  8882  0AB4  0868               	movf	_BACKPLANE_SLAVE_ADDRESS^(0+256),w
  8883  0AB5  0020               	movlb	0	; select bank0
  8884  0AB6  00CC               	movwf	??_exec_remote_cmd
  8885  0AB7  01CD               	clrf	??_exec_remote_cmd+1
  8886  0AB8  084C               	movf	??_exec_remote_cmd,w
  8887  0AB9  00AE               	movwf	i2c1_write_no_data@dev_addr
  8888  0ABA  084D               	movf	??_exec_remote_cmd+1,w
  8889  0ABB  00AF               	movwf	i2c1_write_no_data@dev_addr+1
  8890  0ABC  3008               	movlw	8
  8891  0ABD  00CE               	movwf	??_exec_remote_cmd+2
  8892  0ABE  084E               	movf	??_exec_remote_cmd+2,w
  8893  0ABF  00B0               	movwf	i2c1_write_no_data@reg_addr
  8894  0AC0  319D  2528  3189   	fcall	_i2c1_write_no_data
  8895                           
  8896                           ;main.c: 95: i2c1_write_no_data(BACKPLANE_SLAVE_ADDRESS, data);
  8897  0AC3  0022               	movlb	2	; select bank2
  8898  0AC4  0868               	movf	_BACKPLANE_SLAVE_ADDRESS^(0+256),w
  8899  0AC5  0020               	movlb	0	; select bank0
  8900  0AC6  00CC               	movwf	??_exec_remote_cmd
  8901  0AC7  01CD               	clrf	??_exec_remote_cmd+1
  8902  0AC8  084C               	movf	??_exec_remote_cmd,w
  8903  0AC9  00AE               	movwf	i2c1_write_no_data@dev_addr
  8904  0ACA  084D               	movf	??_exec_remote_cmd+1,w
  8905  0ACB  00AF               	movwf	i2c1_write_no_data@dev_addr+1
  8906  0ACC  0021               	movlb	1	; select bank1
  8907  0ACD  0856               	movf	exec_remote_cmd@data^(0+128),w
  8908  0ACE  0020               	movlb	0	; select bank0
  8909  0ACF  00CE               	movwf	??_exec_remote_cmd+2
  8910  0AD0  084E               	movf	??_exec_remote_cmd+2,w
  8911  0AD1  00B0               	movwf	i2c1_write_no_data@reg_addr
  8912  0AD2  319D  2528  3189   	fcall	_i2c1_write_no_data
  8913                           
  8914                           ;main.c: 96: } else if (!strncmp(("GET"), (buf), 3)) {
  8915  0AD5  2B7B               	goto	l5839
  8916  0AD6                     l5815:	
  8917  0AD6  300C               	movlw	low (STR_10| (0+32768))
  8918  0AD7  0020               	movlb	0	; select bank0
  8919  0AD8  00A0               	movwf	strncmp@s1
  8920  0AD9  3092               	movlw	high (STR_10| (0+32768))
  8921  0ADA  00A1               	movwf	strncmp@s1+1
  8922  0ADB  0021               	movlb	1	; select bank1
  8923  0ADC  0858               	movf	(exec_remote_cmd@buf+1)^(0+128),w
  8924  0ADD  0020               	movlb	0	; select bank0
  8925  0ADE  00A3               	movwf	strncmp@s2+1
  8926  0ADF  0021               	movlb	1	; select bank1
  8927  0AE0  0857               	movf	exec_remote_cmd@buf^(0+128),w
  8928  0AE1  0020               	movlb	0	; select bank0
  8929  0AE2  00A2               	movwf	strncmp@s2
  8930  0AE3  3003               	movlw	3
  8931  0AE4  00A4               	movwf	strncmp@len
  8932  0AE5  3000               	movlw	0
  8933  0AE6  00A5               	movwf	strncmp@len+1
  8934  0AE7  3187  27BE  3189   	fcall	_strncmp
  8935  0AEA  0020               	movlb	0	; select bank0
  8936  0AEB  0820               	movf	?_strncmp,w
  8937  0AEC  0421               	iorwf	?_strncmp+1,w
  8938  0AED  1D03               	btfss	3,2
  8939  0AEE  2B14               	goto	l5821
  8940                           
  8941                           ;main.c: 97: i2c1_read(BACKPLANE_SLAVE_ADDRESS, 0x09, &data, 1);
  8942  0AEF  0022               	movlb	2	; select bank2
  8943  0AF0  0868               	movf	_BACKPLANE_SLAVE_ADDRESS^(0+256),w
  8944  0AF1  0020               	movlb	0	; select bank0
  8945  0AF2  00CC               	movwf	??_exec_remote_cmd
  8946  0AF3  01CD               	clrf	??_exec_remote_cmd+1
  8947  0AF4  084C               	movf	??_exec_remote_cmd,w
  8948  0AF5  00B0               	movwf	i2c1_read@dev_addr
  8949  0AF6  084D               	movf	??_exec_remote_cmd+1,w
  8950  0AF7  00B1               	movwf	i2c1_read@dev_addr+1
  8951  0AF8  3009               	movlw	9
  8952  0AF9  00CE               	movwf	??_exec_remote_cmd+2
  8953  0AFA  084E               	movf	??_exec_remote_cmd+2,w
  8954  0AFB  00B2               	movwf	i2c1_read@reg_addr
  8955  0AFC  30D6               	movlw	low exec_remote_cmd@data
  8956  0AFD  00B3               	movwf	i2c1_read@pbuf
  8957  0AFE  3000               	movlw	high exec_remote_cmd@data
  8958  0AFF  00B4               	movwf	i2c1_read@pbuf+1
  8959  0B00  01B5               	clrf	i2c1_read@len
  8960  0B01  0AB5               	incf	i2c1_read@len,f
  8961  0B02  3192  228F  3189   	fcall	_i2c1_read
  8962                           
  8963                           ;main.c: 98: printf("$:GET:%d\n", data);
  8964  0B05  306F               	movlw	low (STR_11| (0+32768))
  8965  0B06  0020               	movlb	0	; select bank0
  8966  0B07  00C1               	movwf	printf@f
  8967  0B08  3091               	movlw	high (STR_11| (0+32768))
  8968  0B09                     L7:	
  8969  0B09  00C2               	movwf	printf@f+1
  8970  0B0A  0021               	movlb	1	; select bank1
  8971  0B0B  0856               	movf	exec_remote_cmd@data^(0+128),w
  8972  0B0C  0020               	movlb	0	; select bank0
  8973  0B0D  00CC               	movwf	??_exec_remote_cmd
  8974  0B0E  01CD               	clrf	??_exec_remote_cmd+1
  8975  0B0F  084C               	movf	??_exec_remote_cmd,w
  8976  0B10  00C3               	movwf	?_printf+2
  8977  0B11  084D               	movf	??_exec_remote_cmd+1,w
  8978  0B12  00C4               	movwf	?_printf+3
  8979  0B13  2B79               	goto	L5
  8980  0B14                     l5821:	
  8981                           ;main.c: 100: } else {
  8982                           
  8983                           
  8984                           ;main.c: 101: i = 0;
  8985  0B14  0021               	movlb	1	; select bank1
  8986  0B15  01D4               	clrf	exec_remote_cmd@i^(0+128)
  8987                           
  8988                           ;main.c: 102: j = 2;
  8989  0B16  3002               	movlw	2
  8990  0B17  0020               	movlb	0	; select bank0
  8991  0B18  00CC               	movwf	??_exec_remote_cmd
  8992  0B19  084C               	movf	??_exec_remote_cmd,w
  8993  0B1A  0021               	movlb	1	; select bank1
  8994  0B1B  00D3               	movwf	exec_remote_cmd@j^(0+128)
  8995  0B1C                     l5825:	
  8996                           ;main.c: 103: do {
  8997                           
  8998                           
  8999                           ;main.c: 104: send_buf[j++] = (uint8_t)buf[i];
  9000  0B1C  0854               	movf	exec_remote_cmd@i^(0+128),w
  9001  0B1D  0020               	movlb	0	; select bank0
  9002  0B1E  00CC               	movwf	??_exec_remote_cmd
  9003  0B1F  01CD               	clrf	??_exec_remote_cmd+1
  9004  0B20  084C               	movf	??_exec_remote_cmd,w
  9005  0B21  0021               	movlb	1	; select bank1
  9006  0B22  0757               	addwf	exec_remote_cmd@buf^(0+128),w
  9007  0B23  0086               	movwf	6
  9008  0B24  0020               	movlb	0	; select bank0
  9009  0B25  084D               	movf	??_exec_remote_cmd+1,w
  9010  0B26  0021               	movlb	1	; select bank1
  9011  0B27  3D58               	addwfc	(exec_remote_cmd@buf+1)^(0+128),w
  9012  0B28  0087               	movwf	7
  9013  0B29  0801               	movf	1,w
  9014  0B2A  0020               	movlb	0	; select bank0
  9015  0B2B  00CE               	movwf	??_exec_remote_cmd+2
  9016  0B2C  0021               	movlb	1	; select bank1
  9017  0B2D  0853               	movf	exec_remote_cmd@j^(0+128),w
  9018  0B2E  3EA0               	addlw	(low (exec_remote_cmd@send_buf| 0))& (0+255)
  9019  0B2F  0086               	movwf	6
  9020  0B30  0187               	clrf	7
  9021  0B31  0020               	movlb	0	; select bank0
  9022  0B32  084E               	movf	??_exec_remote_cmd+2,w
  9023  0B33  0081               	movwf	1
  9024  0B34  3001               	movlw	1
  9025  0B35  00CC               	movwf	??_exec_remote_cmd
  9026  0B36  084C               	movf	??_exec_remote_cmd,w
  9027  0B37  0021               	movlb	1	; select bank1
  9028  0B38  07D3               	addwf	exec_remote_cmd@j^(0+128),f
  9029                           
  9030                           ;main.c: 105: } while (buf[i++] != '\0');
  9031  0B39  0854               	movf	exec_remote_cmd@i^(0+128),w
  9032  0B3A  0AD4               	incf	exec_remote_cmd@i^(0+128),f
  9033  0B3B  0020               	movlb	0	; select bank0
  9034  0B3C  00CC               	movwf	??_exec_remote_cmd
  9035  0B3D  01CD               	clrf	??_exec_remote_cmd+1
  9036  0B3E  084C               	movf	??_exec_remote_cmd,w
  9037  0B3F  0021               	movlb	1	; select bank1
  9038  0B40  0757               	addwf	exec_remote_cmd@buf^(0+128),w
  9039  0B41  0086               	movwf	6
  9040  0B42  0020               	movlb	0	; select bank0
  9041  0B43  084D               	movf	??_exec_remote_cmd+1,w
  9042  0B44  0021               	movlb	1	; select bank1
  9043  0B45  3D58               	addwfc	(exec_remote_cmd@buf+1)^(0+128),w
  9044  0B46  0087               	movwf	7
  9045  0B47  0801               	movf	1,w
  9046  0B48  1D03               	btfss	3,2
  9047  0B49  2B1C               	goto	l5825
  9048                           
  9049                           ;main.c: 106: send_buf[0] = 0x0a;
  9050  0B4A  300A               	movlw	10
  9051  0B4B  0020               	movlb	0	; select bank0
  9052  0B4C  00CC               	movwf	??_exec_remote_cmd
  9053  0B4D  084C               	movf	??_exec_remote_cmd,w
  9054  0B4E  0021               	movlb	1	; select bank1
  9055  0B4F  00A0               	movwf	exec_remote_cmd@send_buf^(0+128)
  9056                           
  9057                           ;main.c: 107: send_buf[1] = i;
  9058  0B50  0854               	movf	exec_remote_cmd@i^(0+128),w
  9059  0B51  0020               	movlb	0	; select bank0
  9060  0B52  00CC               	movwf	??_exec_remote_cmd
  9061  0B53  084C               	movf	??_exec_remote_cmd,w
  9062  0B54  0021               	movlb	1	; select bank1
  9063  0B55  00A1               	movwf	(exec_remote_cmd@send_buf^(0+128)+1)
  9064                           
  9065                           ;main.c: 108: status = i2c1_write(BACKPLANE_SLAVE_ADDRESS, send_buf, j);
  9066  0B56  0022               	movlb	2	; select bank2
  9067  0B57  0868               	movf	_BACKPLANE_SLAVE_ADDRESS^(0+256),w
  9068  0B58  0020               	movlb	0	; select bank0
  9069  0B59  00CC               	movwf	??_exec_remote_cmd
  9070  0B5A  01CD               	clrf	??_exec_remote_cmd+1
  9071  0B5B  084C               	movf	??_exec_remote_cmd,w
  9072  0B5C  00AE               	movwf	i2c1_write@dev_addr
  9073  0B5D  084D               	movf	??_exec_remote_cmd+1,w
  9074  0B5E  00AF               	movwf	i2c1_write@dev_addr+1
  9075  0B5F  30A0               	movlw	(low (exec_remote_cmd@send_buf| 0))& (0+255)
  9076  0B60  00CE               	movwf	??_exec_remote_cmd+2
  9077  0B61  084E               	movf	??_exec_remote_cmd+2,w
  9078  0B62  00B0               	movwf	i2c1_write@pbuf
  9079  0B63  0021               	movlb	1	; select bank1
  9080  0B64  0853               	movf	exec_remote_cmd@j^(0+128),w
  9081  0B65  0020               	movlb	0	; select bank0
  9082  0B66  00CF               	movwf	??_exec_remote_cmd+3
  9083  0B67  084F               	movf	??_exec_remote_cmd+3,w
  9084  0B68  00B1               	movwf	i2c1_write@len
  9085  0B69  319C  24D6  3189   	fcall	_i2c1_write
  9086  0B6C  0020               	movlb	0	; select bank0
  9087  0B6D  00D0               	movwf	??_exec_remote_cmd+4
  9088  0B6E  0850               	movf	??_exec_remote_cmd+4,w
  9089  0B6F  0021               	movlb	1	; select bank1
  9090  0B70  00D5               	movwf	exec_remote_cmd@status^(0+128)
  9091                           
  9092                           ;main.c: 109: if (status != 0) printf("!:NO ACK FROM I2C SLAVE\n");
  9093  0B71  0855               	movf	exec_remote_cmd@status^(0+128),w
  9094  0B72  1903               	btfsc	3,2
  9095  0B73  2B7B               	goto	l5839
  9096  0B74  3086               	movlw	low (STR_12| (0+32768))
  9097  0B75  0020               	movlb	0	; select bank0
  9098  0B76  00C1               	movwf	printf@f
  9099  0B77  3090               	movlw	high (STR_12| (0+32768))
  9100  0B78                     L8:	
  9101  0B78  00C2               	movwf	printf@f+1
  9102  0B79                     L5:	
  9103  0B79  319B  2308         	fcall	_printf
  9104  0B7B                     l5839:	
  9105                           
  9106                           ;main.c: 111: }
  9107                           ;main.c: 112: buf[0] = '\0';
  9108  0B7B  0021               	movlb	1	; select bank1
  9109  0B7C  0857               	movf	exec_remote_cmd@buf^(0+128),w
  9110  0B7D  0086               	movwf	6
  9111  0B7E  0858               	movf	(exec_remote_cmd@buf+1)^(0+128),w
  9112  0B7F  0087               	movwf	7
  9113  0B80  0181               	clrf	1
  9114  0B81  0008               	return
  9115  0B82                     __end_of_exec_remote_cmd:	
  9116                           
  9117                           	psect	text26
  9118  1CD6                     __ptext26:	
  9119 ;; *************** function _i2c1_write *****************
  9120 ;; Defined at:
  9121 ;;		line 8 in file "i2c1_util.c"
  9122 ;; Parameters:    Size  Location     Type
  9123 ;;  dev_addr        2   14[BANK0 ] unsigned int 
  9124 ;;  pbuf            1   16[BANK0 ] PTR unsigned char 
  9125 ;;		 -> exec_remote_cmd@send_buf(50), 
  9126 ;;  len             1   17[BANK0 ] unsigned char 
  9127 ;; Auto vars:     Size  Location     Type
  9128 ;;  status          1   21[BANK0 ] enum E3078
  9129 ;;  write_status    1   20[BANK0 ] unsigned char 
  9130 ;; Return value:  Size  Location     Type
  9131 ;;                  1    wreg      unsigned char 
  9132 ;; Registers used:
  9133 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9134 ;; Tracked objects:
  9135 ;;		On entry : 0/0
  9136 ;;		On exit  : 0/0
  9137 ;;		Unchanged: 0/0
  9138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9139 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9140 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9141 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9142 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9143 ;;Total ram usage:        8 bytes
  9144 ;; Hardware stack levels used:    1
  9145 ;; Hardware stack levels required when called:    5
  9146 ;; This function calls:
  9147 ;;		_I2C1_MasterWrite
  9148 ;; This function is called by:
  9149 ;;		_exec_remote_cmd
  9150 ;; This function uses a non-reentrant model
  9151 ;;
  9152                           
  9153                           
  9154                           ;psect for function _i2c1_write
  9155  1CD6                     _i2c1_write:	
  9156                           
  9157                           ;i2c1_util.c: 10: I2C1_MESSAGE_STATUS status;
  9158                           ;i2c1_util.c: 11: uint8_t write_status;
  9159                           ;i2c1_util.c: 12: _delay((unsigned long)((100)*(32000000/4000000.0)));
  9160                           
  9161                           ;incstack = 0
  9162                           ; Regs used in _i2c1_write: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
  9163  1CD6  30A0               	movlw	160
  9164  1CD7                     u7137:	
  9165  1CD7  3200               	nop2
  9166  1CD8  0B89               	decfsz	9,f
  9167  1CD9  2CD7               	goto	u7137
  9168                           
  9169                           ;i2c1_util.c: 13: I2C1_MasterWrite(pbuf, len, dev_addr, &status);
  9170  1CDA  0020               	movlb	0	; select bank0
  9171  1CDB  0831               	movf	i2c1_write@len,w
  9172  1CDC  00B2               	movwf	??_i2c1_write
  9173  1CDD  0832               	movf	??_i2c1_write,w
  9174  1CDE  00A7               	movwf	I2C1_MasterWrite@length
  9175  1CDF  082F               	movf	i2c1_write@dev_addr+1,w
  9176  1CE0  00A9               	movwf	I2C1_MasterWrite@address+1
  9177  1CE1  082E               	movf	i2c1_write@dev_addr,w
  9178  1CE2  00A8               	movwf	I2C1_MasterWrite@address
  9179  1CE3  3035               	movlw	(low (i2c1_write@status| 0))& (0+255)
  9180  1CE4  00B3               	movwf	??_i2c1_write+1
  9181  1CE5  0833               	movf	??_i2c1_write+1,w
  9182  1CE6  00AA               	movwf	I2C1_MasterWrite@pflag
  9183  1CE7  0830               	movf	i2c1_write@pbuf,w
  9184  1CE8  319C  24FE  319C   	fcall	_I2C1_MasterWrite
  9185  1CEB                     l4529:	
  9186                           ;i2c1_util.c: 14: while (status == I2C1_MESSAGE_PENDING) {_delay((unsigned long)((100)*(
      +                          32000000/4000000.0)));};
  9187                           
  9188  1CEB  3002               	movlw	2
  9189  1CEC  0020               	movlb	0	; select bank0
  9190  1CED  0635               	xorwf	i2c1_write@status,w
  9191  1CEE  1D03               	btfss	3,2
  9192  1CEF  2CF5               	goto	l4531
  9193  1CF0  30A0               	movlw	160
  9194  1CF1                     u7147:	
  9195  1CF1  3200               	nop2
  9196  1CF2  0B89               	decfsz	9,f
  9197  1CF3  2CF1               	goto	u7147
  9198  1CF4  2CEB               	goto	l4529
  9199  1CF5                     l4531:	
  9200                           
  9201                           ;i2c1_util.c: 15: if (status == I2C1_MESSAGE_COMPLETE) {
  9202  1CF5  0835               	movf	i2c1_write@status,w
  9203  1CF6  1D03               	btfss	3,2
  9204  1CF7  2CFA               	goto	l645
  9205                           
  9206                           ;i2c1_util.c: 16: write_status = 0;
  9207  1CF8  01B4               	clrf	i2c1_write@write_status
  9208                           
  9209                           ;i2c1_util.c: 17: } else {
  9210  1CF9  2CFC               	goto	l4535
  9211  1CFA                     l645:	
  9212                           
  9213                           ;i2c1_util.c: 18: write_status = 1;
  9214  1CFA  01B4               	clrf	i2c1_write@write_status
  9215  1CFB  0AB4               	incf	i2c1_write@write_status,f
  9216  1CFC                     l4535:	
  9217                           
  9218                           ;i2c1_util.c: 19: }
  9219                           ;i2c1_util.c: 20: return write_status;
  9220  1CFC  0834               	movf	i2c1_write@write_status,w
  9221  1CFD  0008               	return
  9222  1CFE                     __end_of_i2c1_write:	
  9223                           
  9224                           	psect	text27
  9225  1A10                     __ptext27:	
  9226 ;; *************** function _TMR0_HasOverflowOccured *****************
  9227 ;; Defined at:
  9228 ;;		line 101 in file "mcc_generated_files/tmr0.c"
  9229 ;; Parameters:    Size  Location     Type
  9230 ;;		None
  9231 ;; Auto vars:     Size  Location     Type
  9232 ;;		None
  9233 ;; Return value:  Size  Location     Type
  9234 ;;                  1    wreg      unsigned char 
  9235 ;; Registers used:
  9236 ;;		wreg, status,2, status,0
  9237 ;; Tracked objects:
  9238 ;;		On entry : 0/0
  9239 ;;		On exit  : 0/0
  9240 ;;		Unchanged: 0/0
  9241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9242 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9243 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9244 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9245 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9246 ;;Total ram usage:        0 bytes
  9247 ;; Hardware stack levels used:    1
  9248 ;; Hardware stack levels required when called:    3
  9249 ;; This function calls:
  9250 ;;		Nothing
  9251 ;; This function is called by:
  9252 ;;		_PROTOCOL_Loop
  9253 ;; This function uses a non-reentrant model
  9254 ;;
  9255                           
  9256                           
  9257                           ;psect for function _TMR0_HasOverflowOccured
  9258  1A10                     _TMR0_HasOverflowOccured:	
  9259                           
  9260                           ;tmr0.c: 104: return(INTCONbits.TMR0IF);
  9261                           
  9262                           ;incstack = 0
  9263                           ; Regs used in _TMR0_HasOverflowOccured: [wreg+status,2+status,0]
  9264  1A10  0C0B               	rrf	11,w	;volatile
  9265  1A11  0C89               	rrf	9,f
  9266  1A12  3901               	andlw	1
  9267  1A13  0008               	return
  9268  1A14                     __end_of_TMR0_HasOverflowOccured:	
  9269                           
  9270                           	psect	text28
  9271  1A9B                     __ptext28:	
  9272 ;; *************** function _PROTOCOL_Write_Device_Address *****************
  9273 ;; Defined at:
  9274 ;;		line 84 in file "protocol.c"
  9275 ;; Parameters:    Size  Location     Type
  9276 ;;  device_id_i2    1    wreg     unsigned char 
  9277 ;; Auto vars:     Size  Location     Type
  9278 ;;  device_id_i2    1    4[BANK0 ] unsigned char 
  9279 ;; Return value:  Size  Location     Type
  9280 ;;                  1    wreg      void 
  9281 ;; Registers used:
  9282 ;;		wreg, status,2, status,0, pclath, cstack
  9283 ;; Tracked objects:
  9284 ;;		On entry : 0/0
  9285 ;;		On exit  : 0/0
  9286 ;;		Unchanged: 0/0
  9287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9288 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9289 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9290 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9291 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9292 ;;Total ram usage:        2 bytes
  9293 ;; Hardware stack levels used:    1
  9294 ;; Hardware stack levels required when called:    4
  9295 ;; This function calls:
  9296 ;;		_DATAEE_WriteByte
  9297 ;; This function is called by:
  9298 ;;		_PROTOCOL_Loop
  9299 ;; This function uses a non-reentrant model
  9300 ;;
  9301                           
  9302                           
  9303                           ;psect for function _PROTOCOL_Write_Device_Address
  9304  1A9B                     _PROTOCOL_Write_Device_Address:	
  9305                           
  9306                           ;incstack = 0
  9307                           ; Regs used in _PROTOCOL_Write_Device_Address: [wreg+status,2+status,0+pclath+cstack]
  9308                           ;PROTOCOL_Write_Device_Address@device_id_i2c stored from wreg
  9309  1A9B  0020               	movlb	0	; select bank0
  9310  1A9C  00A4               	movwf	PROTOCOL_Write_Device_Address@device_id_i2c
  9311                           
  9312                           ;protocol.c: 85: DATAEE_WriteByte(0, device_id_i2c);
  9313  1A9D  0824               	movf	PROTOCOL_Write_Device_Address@device_id_i2c,w
  9314  1A9E  00A3               	movwf	??_PROTOCOL_Write_Device_Address
  9315  1A9F  0823               	movf	??_PROTOCOL_Write_Device_Address,w
  9316  1AA0  00A0               	movwf	DATAEE_WriteByte@bData
  9317  1AA1  3000               	movlw	0
  9318  1AA2  319C  2441         	fcall	_DATAEE_WriteByte
  9319                           
  9320                           ;protocol.c: 86: slave_address = device_id_i2c;
  9321  1AA4  0020               	movlb	0	; select bank0
  9322  1AA5  0824               	movf	PROTOCOL_Write_Device_Address@device_id_i2c,w
  9323  1AA6  00A3               	movwf	??_PROTOCOL_Write_Device_Address
  9324  1AA7  0823               	movf	??_PROTOCOL_Write_Device_Address,w
  9325  1AA8  0022               	movlb	2	; select bank2
  9326  1AA9  00CA               	movwf	_slave_address^(0+256)
  9327  1AAA  0008               	return
  9328  1AAB                     __end_of_PROTOCOL_Write_Device_Address:	
  9329                           
  9330                           	psect	text29
  9331  1A62                     __ptext29:	
  9332 ;; *************** function _PROTOCOL_STP *****************
  9333 ;; Defined at:
  9334 ;;		line 98 in file "protocol.c"
  9335 ;; Parameters:    Size  Location     Type
  9336 ;;		None
  9337 ;; Auto vars:     Size  Location     Type
  9338 ;;		None
  9339 ;; Return value:  Size  Location     Type
  9340 ;;                  1    wreg      void 
  9341 ;; Registers used:
  9342 ;;		wreg, status,2, status,0, pclath, cstack
  9343 ;; Tracked objects:
  9344 ;;		On entry : 0/0
  9345 ;;		On exit  : 0/0
  9346 ;;		Unchanged: 0/0
  9347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9351 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9352 ;;Total ram usage:        0 bytes
  9353 ;; Hardware stack levels used:    1
  9354 ;; Hardware stack levels required when called:    4
  9355 ;; This function calls:
  9356 ;;		Absolute function
  9357 ;;		_stop_handler
  9358 ;; This function is called by:
  9359 ;;		_PROTOCOL_Loop
  9360 ;; This function uses a non-reentrant model
  9361 ;;
  9362                           
  9363                           
  9364                           ;psect for function _PROTOCOL_STP
  9365  1A62                     _PROTOCOL_STP:	
  9366                           
  9367                           ;protocol.c: 99: if (PROTOCOL_Stop_Handler) PROTOCOL_Stop_Handler();
  9368                           
  9369                           ;incstack = 0
  9370                           ; Regs used in _PROTOCOL_STP: [wreg+status,2+status,0+pclath+cstack]
  9371  1A62  0022               	movlb	2	; select bank2
  9372  1A63  0835               	movf	_PROTOCOL_Stop_Handler^(0+256),w
  9373  1A64  0436               	iorwf	(_PROTOCOL_Stop_Handler+1)^(0+256),w
  9374  1A65  1903               	btfsc	3,2
  9375  1A66  2A6C               	goto	l5923
  9376  1A67  0836               	movf	(_PROTOCOL_Stop_Handler+1)^(0+256),w
  9377  1A68  008A               	movwf	10
  9378  1A69  0835               	movf	_PROTOCOL_Stop_Handler^(0+256),w
  9379  1A6A  000A               	callw
  9380  1A6B  319A               	pagesel	$
  9381  1A6C                     l5923:	
  9382                           
  9383                           ;protocol.c: 100: running = 0;
  9384  1A6C  0022               	movlb	2	; select bank2
  9385  1A6D  01D3               	clrf	_running^(0+256)
  9386  1A6E  0008               	return
  9387  1A6F                     __end_of_PROTOCOL_STP:	
  9388                           
  9389                           	psect	text30
  9390  1A6F                     __ptext30:	
  9391 ;; *************** function _PROTOCOL_STA *****************
  9392 ;; Defined at:
  9393 ;;		line 93 in file "protocol.c"
  9394 ;; Parameters:    Size  Location     Type
  9395 ;;		None
  9396 ;; Auto vars:     Size  Location     Type
  9397 ;;		None
  9398 ;; Return value:  Size  Location     Type
  9399 ;;                  1    wreg      void 
  9400 ;; Registers used:
  9401 ;;		wreg, status,2, status,0, pclath, cstack
  9402 ;; Tracked objects:
  9403 ;;		On entry : 0/0
  9404 ;;		On exit  : 0/0
  9405 ;;		Unchanged: 0/0
  9406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9410 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9411 ;;Total ram usage:        0 bytes
  9412 ;; Hardware stack levels used:    1
  9413 ;; Hardware stack levels required when called:    4
  9414 ;; This function calls:
  9415 ;;		Absolute function
  9416 ;;		_start_handler
  9417 ;; This function is called by:
  9418 ;;		_PROTOCOL_Loop
  9419 ;; This function uses a non-reentrant model
  9420 ;;
  9421                           
  9422                           
  9423                           ;psect for function _PROTOCOL_STA
  9424  1A6F                     _PROTOCOL_STA:	
  9425                           
  9426                           ;protocol.c: 94: if (PROTOCOL_Start_Handler) PROTOCOL_Start_Handler();
  9427                           
  9428                           ;incstack = 0
  9429                           ; Regs used in _PROTOCOL_STA: [wreg+status,2+status,0+pclath+cstack]
  9430  1A6F  0022               	movlb	2	; select bank2
  9431  1A70  0837               	movf	_PROTOCOL_Start_Handler^(0+256),w
  9432  1A71  0438               	iorwf	(_PROTOCOL_Start_Handler+1)^(0+256),w
  9433  1A72  1903               	btfsc	3,2
  9434  1A73  2A79               	goto	l5917
  9435  1A74  0838               	movf	(_PROTOCOL_Start_Handler+1)^(0+256),w
  9436  1A75  008A               	movwf	10
  9437  1A76  0837               	movf	_PROTOCOL_Start_Handler^(0+256),w
  9438  1A77  000A               	callw
  9439  1A78  319A               	pagesel	$
  9440  1A79                     l5917:	
  9441                           
  9442                           ;protocol.c: 95: running = 1;
  9443  1A79  0022               	movlb	2	; select bank2
  9444  1A7A  01D3               	clrf	_running^(0+256)
  9445  1A7B  0AD3               	incf	_running^(0+256),f
  9446  1A7C  0008               	return
  9447  1A7D                     __end_of_PROTOCOL_STA:	
  9448                           
  9449                           	psect	text31
  9450  1A0C                     __ptext31:	
  9451 ;; *************** function _start_handler *****************
  9452 ;; Defined at:
  9453 ;;		line 62 in file "main.c"
  9454 ;; Parameters:    Size  Location     Type
  9455 ;;		None
  9456 ;; Auto vars:     Size  Location     Type
  9457 ;;		None
  9458 ;; Return value:  Size  Location     Type
  9459 ;;                  1    wreg      void 
  9460 ;; Registers used:
  9461 ;;		None
  9462 ;; Tracked objects:
  9463 ;;		On entry : 0/0
  9464 ;;		On exit  : 0/0
  9465 ;;		Unchanged: 0/0
  9466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9467 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9468 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9469 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9470 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9471 ;;Total ram usage:        0 bytes
  9472 ;; Hardware stack levels used:    1
  9473 ;; Hardware stack levels required when called:    3
  9474 ;; This function calls:
  9475 ;;		Nothing
  9476 ;; This function is called by:
  9477 ;;		_main
  9478 ;;		_PROTOCOL_STA
  9479 ;; This function uses a non-reentrant model
  9480 ;;
  9481                           
  9482                           
  9483                           ;psect for function _start_handler
  9484  1A0C                     _start_handler:	
  9485                           
  9486                           ;main.c: 63: running = 1;
  9487                           
  9488                           ;incstack = 0
  9489                           ; Regs used in _start_handler: []
  9490  1A0C  0022               	movlb	2	; select bank2
  9491  1A0D  01D3               	clrf	_running^(0+256)
  9492  1A0E  0AD3               	incf	_running^(0+256),f
  9493  1A0F  0008               	return
  9494  1A10                     __end_of_start_handler:	
  9495                           
  9496                           	psect	text32
  9497  1A23                     __ptext32:	
  9498 ;; *************** function _PROTOCOL_SET *****************
  9499 ;; Defined at:
  9500 ;;		line 111 in file "protocol.c"
  9501 ;; Parameters:    Size  Location     Type
  9502 ;;  value_          1    wreg     unsigned char 
  9503 ;; Auto vars:     Size  Location     Type
  9504 ;;  value_          1    1[BANK0 ] unsigned char 
  9505 ;; Return value:  Size  Location     Type
  9506 ;;                  1    wreg      void 
  9507 ;; Registers used:
  9508 ;;		wreg, status,2, status,0
  9509 ;; Tracked objects:
  9510 ;;		On entry : 0/0
  9511 ;;		On exit  : 0/0
  9512 ;;		Unchanged: 0/0
  9513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9514 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9515 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9516 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9517 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9518 ;;Total ram usage:        2 bytes
  9519 ;; Hardware stack levels used:    1
  9520 ;; Hardware stack levels required when called:    3
  9521 ;; This function calls:
  9522 ;;		Nothing
  9523 ;; This function is called by:
  9524 ;;		_PROTOCOL_Loop
  9525 ;; This function uses a non-reentrant model
  9526 ;;
  9527                           
  9528                           
  9529                           ;psect for function _PROTOCOL_SET
  9530  1A23                     _PROTOCOL_SET:	
  9531                           
  9532                           ;incstack = 0
  9533                           ; Regs used in _PROTOCOL_SET: [wreg+status,2+status,0]
  9534                           ;PROTOCOL_SET@value_ stored from wreg
  9535  1A23  0020               	movlb	0	; select bank0
  9536  1A24  00A1               	movwf	PROTOCOL_SET@value_
  9537                           
  9538                           ;protocol.c: 112: value = value_;
  9539  1A25  0821               	movf	PROTOCOL_SET@value_,w
  9540  1A26  00A0               	movwf	??_PROTOCOL_SET
  9541  1A27  0820               	movf	??_PROTOCOL_SET,w
  9542  1A28  0022               	movlb	2	; select bank2
  9543  1A29  00C8               	movwf	_value^(0+256)
  9544  1A2A  0008               	return
  9545  1A2B                     __end_of_PROTOCOL_SET:	
  9546                           
  9547                           	psect	text33
  9548  1A34                     __ptext33:	
  9549 ;; *************** function _PROTOCOL_SAV *****************
  9550 ;; Defined at:
  9551 ;;		line 107 in file "protocol.c"
  9552 ;; Parameters:    Size  Location     Type
  9553 ;;		None
  9554 ;; Auto vars:     Size  Location     Type
  9555 ;;		None
  9556 ;; Return value:  Size  Location     Type
  9557 ;;                  1    wreg      void 
  9558 ;; Registers used:
  9559 ;;		wreg, status,2, status,0, pclath, cstack
  9560 ;; Tracked objects:
  9561 ;;		On entry : 0/0
  9562 ;;		On exit  : 0/0
  9563 ;;		Unchanged: 0/0
  9564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9567 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9568 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9569 ;;Total ram usage:        1 bytes
  9570 ;; Hardware stack levels used:    1
  9571 ;; Hardware stack levels required when called:    4
  9572 ;; This function calls:
  9573 ;;		_DATAEE_WriteByte
  9574 ;; This function is called by:
  9575 ;;		_PROTOCOL_Loop
  9576 ;; This function uses a non-reentrant model
  9577 ;;
  9578                           
  9579                           
  9580                           ;psect for function _PROTOCOL_SAV
  9581  1A34                     _PROTOCOL_SAV:	
  9582                           
  9583                           ;protocol.c: 108: DATAEE_WriteByte(1, value);
  9584                           
  9585                           ;incstack = 0
  9586                           ; Regs used in _PROTOCOL_SAV: [wreg+status,2+status,0+pclath+cstack]
  9587  1A34  0022               	movlb	2	; select bank2
  9588  1A35  0848               	movf	_value^(0+256),w
  9589  1A36  0020               	movlb	0	; select bank0
  9590  1A37  00A3               	movwf	??_PROTOCOL_SAV
  9591  1A38  0823               	movf	??_PROTOCOL_SAV,w
  9592  1A39  00A0               	movwf	DATAEE_WriteByte@bData
  9593  1A3A  3001               	movlw	1
  9594  1A3B  319C  2441         	fcall	_DATAEE_WriteByte
  9595  1A3D  0008               	return
  9596  1A3E                     __end_of_PROTOCOL_SAV:	
  9597                           
  9598                           	psect	text34
  9599  1A09                     __ptext34:	
  9600 ;; *************** function _PROTOCOL_Read_Device_Address *****************
  9601 ;; Defined at:
  9602 ;;		line 89 in file "protocol.c"
  9603 ;; Parameters:    Size  Location     Type
  9604 ;;		None
  9605 ;; Auto vars:     Size  Location     Type
  9606 ;;		None
  9607 ;; Return value:  Size  Location     Type
  9608 ;;                  1    wreg      unsigned char 
  9609 ;; Registers used:
  9610 ;;		wreg
  9611 ;; Tracked objects:
  9612 ;;		On entry : 0/0
  9613 ;;		On exit  : 0/0
  9614 ;;		Unchanged: 0/0
  9615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9619 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9620 ;;Total ram usage:        0 bytes
  9621 ;; Hardware stack levels used:    1
  9622 ;; Hardware stack levels required when called:    3
  9623 ;; This function calls:
  9624 ;;		Nothing
  9625 ;; This function is called by:
  9626 ;;		_PROTOCOL_Loop
  9627 ;; This function uses a non-reentrant model
  9628 ;;
  9629                           
  9630                           
  9631                           ;psect for function _PROTOCOL_Read_Device_Address
  9632  1A09                     _PROTOCOL_Read_Device_Address:	
  9633                           
  9634                           ;protocol.c: 90: return slave_address;
  9635                           
  9636                           ;incstack = 0
  9637                           ; Regs used in _PROTOCOL_Read_Device_Address: [wreg]
  9638  1A09  0022               	movlb	2	; select bank2
  9639  1A0A  084A               	movf	_slave_address^(0+256),w
  9640  1A0B  0008               	return
  9641  1A0C                     __end_of_PROTOCOL_Read_Device_Address:	
  9642                           
  9643                           	psect	text35
  9644  1AE0                     __ptext35:	
  9645 ;; *************** function _PROTOCOL_EXT *****************
  9646 ;; Defined at:
  9647 ;;		line 116 in file "protocol.c"
  9648 ;; Parameters:    Size  Location     Type
  9649 ;;  char_buf        1    wreg     PTR unsigned char 
  9650 ;;		 -> buf(48), 
  9651 ;; Auto vars:     Size  Location     Type
  9652 ;;  char_buf        1   59[BANK0 ] PTR unsigned char 
  9653 ;;		 -> buf(48), 
  9654 ;; Return value:  Size  Location     Type
  9655 ;;                  1    wreg      void 
  9656 ;; Registers used:
  9657 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9658 ;; Tracked objects:
  9659 ;;		On entry : 0/0
  9660 ;;		On exit  : 0/0
  9661 ;;		Unchanged: 0/0
  9662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9663 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9664 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9665 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9666 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9667 ;;Total ram usage:        1 bytes
  9668 ;; Hardware stack levels used:    1
  9669 ;; Hardware stack levels required when called:    9
  9670 ;; This function calls:
  9671 ;;		Absolute function
  9672 ;;		_command_handler
  9673 ;; This function is called by:
  9674 ;;		_PROTOCOL_Loop
  9675 ;; This function uses a non-reentrant model
  9676 ;;
  9677                           
  9678                           
  9679                           ;psect for function _PROTOCOL_EXT
  9680  1AE0                     _PROTOCOL_EXT:	
  9681                           
  9682                           ;incstack = 0
  9683                           ; Regs used in _PROTOCOL_EXT: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9684                           ;PROTOCOL_EXT@char_buf stored from wreg
  9685  1AE0  0020               	movlb	0	; select bank0
  9686  1AE1  00DB               	movwf	PROTOCOL_EXT@char_buf
  9687                           
  9688                           ;protocol.c: 117: if (PROTOCOL_Extension_Handler) PROTOCOL_Extension_Handler(char_buf);
  9689  1AE2  0022               	movlb	2	; select bank2
  9690  1AE3  082F               	movf	_PROTOCOL_Extension_Handler^(0+256),w
  9691  1AE4  0430               	iorwf	(_PROTOCOL_Extension_Handler+1)^(0+256),w
  9692  1AE5  1903               	btfsc	3,2
  9693  1AE6  0008               	return
  9694  1AE7  0020               	movlb	0	; select bank0
  9695  1AE8  085B               	movf	PROTOCOL_EXT@char_buf,w
  9696  1AE9  00D0               	movwf	command_handler@buf
  9697  1AEA  3002               	movlw	2
  9698  1AEB  00D1               	movwf	command_handler@buf+1
  9699  1AEC  0022               	movlb	2	; select bank2
  9700  1AED  0830               	movf	(_PROTOCOL_Extension_Handler+1)^(0+256),w
  9701  1AEE  008A               	movwf	10
  9702  1AEF  082F               	movf	_PROTOCOL_Extension_Handler^(0+256),w
  9703  1AF0  000A               	callw
  9704  1AF1  319A               	pagesel	$
  9705  1AF2  0008               	return
  9706  1AF3                     __end_of_PROTOCOL_EXT:	
  9707                           
  9708                           	psect	text36
  9709  0B82                     __ptext36:	
  9710 ;; *************** function _command_handler *****************
  9711 ;; Defined at:
  9712 ;;		line 401 in file "main.c"
  9713 ;; Parameters:    Size  Location     Type
  9714 ;;  buf             2   48[BANK0 ] PTR unsigned char 
  9715 ;;		 -> buf(48), edge_meter@buf(48), 
  9716 ;; Auto vars:     Size  Location     Type
  9717 ;;  i               1   58[BANK0 ] unsigned char 
  9718 ;;  dev_addr        1   57[BANK0 ] unsigned char 
  9719 ;; Return value:  Size  Location     Type
  9720 ;;                  1    wreg      void 
  9721 ;; Registers used:
  9722 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
  9723 ;; Tracked objects:
  9724 ;;		On entry : 0/0
  9725 ;;		On exit  : 0/0
  9726 ;;		Unchanged: 0/0
  9727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
  9728 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9729 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9730 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9731 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
  9732 ;;Total ram usage:       11 bytes
  9733 ;; Hardware stack levels used:    1
  9734 ;; Hardware stack levels required when called:    8
  9735 ;; This function calls:
  9736 ;;		_DATAEE_WriteByte
  9737 ;;		___awdiv
  9738 ;;		_atoi
  9739 ;;		_check_plg
  9740 ;;		_print_dev_map
  9741 ;;		_printf
  9742 ;;		_put_cmd
  9743 ;;		_strncmp
  9744 ;; This function is called by:
  9745 ;;		_edge_meter
  9746 ;;		_main
  9747 ;;		_PROTOCOL_EXT
  9748 ;;		_PROTOCOL_Loop
  9749 ;; This function uses a non-reentrant model
  9750 ;;
  9751                           
  9752                           
  9753                           ;psect for function _command_handler
  9754  0B82                     _command_handler:	
  9755                           
  9756                           ;main.c: 402: static uint8_t pos = 0;
  9757                           ;main.c: 403: uint8_t i;
  9758                           ;main.c: 404: uint8_t dev_addr;
  9759                           ;main.c: 405: if (!strncmp(("I2C"), (buf), 3)) {
  9760                           
  9761                           ;incstack = 0
  9762                           ; Regs used in _command_handler: [wreg-fsr1h+status,2+status,0+pclath+cstack]
  9763  0B82  30E0               	movlw	low (STR_24| (0+32768))
  9764  0B83  0020               	movlb	0	; select bank0
  9765  0B84  00A0               	movwf	strncmp@s1
  9766  0B85  3091               	movlw	high (STR_24| (0+32768))
  9767  0B86  00A1               	movwf	strncmp@s1+1
  9768  0B87  0851               	movf	command_handler@buf+1,w
  9769  0B88  00A3               	movwf	strncmp@s2+1
  9770  0B89  0850               	movf	command_handler@buf,w
  9771  0B8A  00A2               	movwf	strncmp@s2
  9772  0B8B  3003               	movlw	3
  9773  0B8C  00A4               	movwf	strncmp@len
  9774  0B8D  3000               	movlw	0
  9775  0B8E  00A5               	movwf	strncmp@len+1
  9776  0B8F  3187  27BE  318B   	fcall	_strncmp
  9777  0B92  0020               	movlb	0	; select bank0
  9778  0B93  0820               	movf	?_strncmp,w
  9779  0B94  0421               	iorwf	?_strncmp+1,w
  9780  0B95  1D03               	btfss	3,2
  9781  0B96  2BAA               	goto	l5503
  9782                           
  9783                           ;main.c: 406: BACKPLANE_SLAVE_ADDRESS = atoi(&buf[4]);
  9784  0B97  0850               	movf	command_handler@buf,w
  9785  0B98  3E04               	addlw	4
  9786  0B99  00D2               	movwf	??_command_handler
  9787  0B9A  3000               	movlw	0
  9788  0B9B  3D51               	addwfc	command_handler@buf+1,w
  9789  0B9C  00D3               	movwf	??_command_handler+1
  9790  0B9D  0852               	movf	??_command_handler,w
  9791  0B9E  00A6               	movwf	atoi@s
  9792  0B9F  0853               	movf	??_command_handler+1,w
  9793  0BA0  00A7               	movwf	atoi@s+1
  9794  0BA1  3194  2451         	fcall	_atoi
  9795  0BA3  0020               	movlb	0	; select bank0
  9796  0BA4  0826               	movf	?_atoi,w
  9797  0BA5  00D4               	movwf	??_command_handler+2
  9798  0BA6  0854               	movf	??_command_handler+2,w
  9799  0BA7  0022               	movlb	2	; select bank2
  9800  0BA8  00E8               	movwf	_BACKPLANE_SLAVE_ADDRESS^(0+256)
  9801                           
  9802                           ;main.c: 407: } else if (!strncmp(("MAP"), (buf), 3)) {
  9803  0BA9  0008               	return
  9804  0BAA                     l5503:	
  9805  0BAA  30FC               	movlw	low (STR_25| (0+32768))
  9806  0BAB  0020               	movlb	0	; select bank0
  9807  0BAC  00A0               	movwf	strncmp@s1
  9808  0BAD  3091               	movlw	high (STR_25| (0+32768))
  9809  0BAE  00A1               	movwf	strncmp@s1+1
  9810  0BAF  0851               	movf	command_handler@buf+1,w
  9811  0BB0  00A3               	movwf	strncmp@s2+1
  9812  0BB1  0850               	movf	command_handler@buf,w
  9813  0BB2  00A2               	movwf	strncmp@s2
  9814  0BB3  3003               	movlw	3
  9815  0BB4  00A4               	movwf	strncmp@len
  9816  0BB5  3000               	movlw	0
  9817  0BB6  00A5               	movwf	strncmp@len+1
  9818  0BB7  3187  27BE  318B   	fcall	_strncmp
  9819  0BBA  0020               	movlb	0	; select bank0
  9820  0BBB  0820               	movf	?_strncmp,w
  9821  0BBC  0421               	iorwf	?_strncmp+1,w
  9822  0BBD  1D03               	btfss	3,2
  9823  0BBE  2BC2               	goto	l5507
  9824                           
  9825                           ;main.c: 408: print_dev_map();
  9826  0BBF  319E  2681         	fcall	_print_dev_map
  9827                           
  9828                           ;main.c: 409: } else if (!strncmp(("SCN"), (buf), 3)) {
  9829  0BC1  0008               	return
  9830  0BC2                     l5507:	
  9831  0BC2  30F4               	movlw	low (STR_26| (0+32768))
  9832  0BC3  0020               	movlb	0	; select bank0
  9833  0BC4  00A0               	movwf	strncmp@s1
  9834  0BC5  3091               	movlw	high (STR_26| (0+32768))
  9835  0BC6  00A1               	movwf	strncmp@s1+1
  9836  0BC7  0851               	movf	command_handler@buf+1,w
  9837  0BC8  00A3               	movwf	strncmp@s2+1
  9838  0BC9  0850               	movf	command_handler@buf,w
  9839  0BCA  00A2               	movwf	strncmp@s2
  9840  0BCB  3003               	movlw	3
  9841  0BCC  00A4               	movwf	strncmp@len
  9842  0BCD  3000               	movlw	0
  9843  0BCE  00A5               	movwf	strncmp@len+1
  9844  0BCF  3187  27BE  318B   	fcall	_strncmp
  9845  0BD2  0020               	movlb	0	; select bank0
  9846  0BD3  0820               	movf	?_strncmp,w
  9847  0BD4  0421               	iorwf	?_strncmp+1,w
  9848  0BD5  1D03               	btfss	3,2
  9849  0BD6  2BDA               	goto	l5511
  9850                           
  9851                           ;main.c: 410: check_plg();
  9852  0BD7  319A  22F3         	fcall	_check_plg
  9853                           
  9854                           ;main.c: 411: } else if (!strncmp(("POS"), (buf), 3)) {
  9855  0BD9  0008               	return
  9856  0BDA                     l5511:	
  9857  0BDA  3008               	movlw	low (STR_27| (0+32768))
  9858  0BDB  0020               	movlb	0	; select bank0
  9859  0BDC  00A0               	movwf	strncmp@s1
  9860  0BDD  3092               	movlw	high (STR_27| (0+32768))
  9861  0BDE  00A1               	movwf	strncmp@s1+1
  9862  0BDF  0851               	movf	command_handler@buf+1,w
  9863  0BE0  00A3               	movwf	strncmp@s2+1
  9864  0BE1  0850               	movf	command_handler@buf,w
  9865  0BE2  00A2               	movwf	strncmp@s2
  9866  0BE3  3003               	movlw	3
  9867  0BE4  00A4               	movwf	strncmp@len
  9868  0BE5  3000               	movlw	0
  9869  0BE6  00A5               	movwf	strncmp@len+1
  9870  0BE7  3187  27BE  318B   	fcall	_strncmp
  9871  0BEA  0020               	movlb	0	; select bank0
  9872  0BEB  0820               	movf	?_strncmp,w
  9873  0BEC  0421               	iorwf	?_strncmp+1,w
  9874  0BED  1D03               	btfss	3,2
  9875  0BEE  2C0C               	goto	l5519
  9876                           
  9877                           ;main.c: 412: pos = atoi(&buf[4]);
  9878  0BEF  0850               	movf	command_handler@buf,w
  9879  0BF0  3E04               	addlw	4
  9880  0BF1  00D2               	movwf	??_command_handler
  9881  0BF2  3000               	movlw	0
  9882  0BF3  3D51               	addwfc	command_handler@buf+1,w
  9883  0BF4  00D3               	movwf	??_command_handler+1
  9884  0BF5  0852               	movf	??_command_handler,w
  9885  0BF6  00A6               	movwf	atoi@s
  9886  0BF7  0853               	movf	??_command_handler+1,w
  9887  0BF8  00A7               	movwf	atoi@s+1
  9888  0BF9  3194  2451  318B   	fcall	_atoi
  9889  0BFC  0020               	movlb	0	; select bank0
  9890  0BFD  0826               	movf	?_atoi,w
  9891  0BFE  00D4               	movwf	??_command_handler+2
  9892  0BFF  0854               	movf	??_command_handler+2,w
  9893  0C00  00F9               	movwf	command_handler@pos
  9894                           
  9895                           ;main.c: 413: if (pos > 27) printf("!:POS:POS LARGER THAN 27\n");
  9896  0C01  301C               	movlw	28
  9897  0C02  0279               	subwf	command_handler@pos,w
  9898  0C03  1C03               	skipc
  9899  0C04  0008               	return
  9900  0C05  306C               	movlw	low (STR_28| (0+32768))
  9901  0C06  00C1               	movwf	printf@f
  9902  0C07  3090               	movlw	high (STR_28| (0+32768))
  9903  0C08  00C2               	movwf	printf@f+1
  9904  0C09  319B  2308         	fcall	_printf
  9905                           
  9906                           ;main.c: 414: } else if (!strncmp(("WSC"), (buf), 3)) {
  9907  0C0B  0008               	return
  9908  0C0C                     l5519:	
  9909  0C0C  30EC               	movlw	low (STR_29| (0+32768))
  9910  0C0D  0020               	movlb	0	; select bank0
  9911  0C0E  00A0               	movwf	strncmp@s1
  9912  0C0F  3091               	movlw	high (STR_29| (0+32768))
  9913  0C10  00A1               	movwf	strncmp@s1+1
  9914  0C11  0851               	movf	command_handler@buf+1,w
  9915  0C12  00A3               	movwf	strncmp@s2+1
  9916  0C13  0850               	movf	command_handler@buf,w
  9917  0C14  00A2               	movwf	strncmp@s2
  9918  0C15  3003               	movlw	3
  9919  0C16  00A4               	movwf	strncmp@len
  9920  0C17  3000               	movlw	0
  9921  0C18  00A5               	movwf	strncmp@len+1
  9922  0C19  3187  27BE  318B   	fcall	_strncmp
  9923  0C1C  0020               	movlb	0	; select bank0
  9924  0C1D  0820               	movf	?_strncmp,w
  9925  0C1E  0421               	iorwf	?_strncmp+1,w
  9926  0C1F  1D03               	btfss	3,2
  9927  0C20  2C6D               	goto	l5531
  9928                           
  9929                           ;main.c: 415: if (pos <= 27) {
  9930  0C21  301C               	movlw	28
  9931  0C22  0279               	subwf	command_handler@pos,w
  9932  0C23  1803               	skipnc
  9933  0C24  2C66               	goto	l5529
  9934                           
  9935                           ;main.c: 416: dev_addr = atoi(&buf[4]);
  9936  0C25  0850               	movf	command_handler@buf,w
  9937  0C26  3E04               	addlw	4
  9938  0C27  00D2               	movwf	??_command_handler
  9939  0C28  3000               	movlw	0
  9940  0C29  3D51               	addwfc	command_handler@buf+1,w
  9941  0C2A  00D3               	movwf	??_command_handler+1
  9942  0C2B  0852               	movf	??_command_handler,w
  9943  0C2C  00A6               	movwf	atoi@s
  9944  0C2D  0853               	movf	??_command_handler+1,w
  9945  0C2E  00A7               	movwf	atoi@s+1
  9946  0C2F  3194  2451  318B   	fcall	_atoi
  9947  0C32  0020               	movlb	0	; select bank0
  9948  0C33  0826               	movf	?_atoi,w
  9949  0C34  00D4               	movwf	??_command_handler+2
  9950  0C35  0854               	movf	??_command_handler+2,w
  9951  0C36  00D9               	movwf	command_handler@dev_addr
  9952                           
  9953                           ;main.c: 417: DATAEE_WriteByte(1 + pos + 1, dev_addr);
  9954  0C37  0859               	movf	command_handler@dev_addr,w
  9955  0C38  00D2               	movwf	??_command_handler
  9956  0C39  0852               	movf	??_command_handler,w
  9957  0C3A  00A0               	movwf	DATAEE_WriteByte@bData
  9958  0C3B  0879               	movf	command_handler@pos,w
  9959  0C3C  3E02               	addlw	2
  9960  0C3D  319C  2441  318B   	fcall	_DATAEE_WriteByte
  9961                           
  9962                           ;main.c: 418: schedule[pos/4][pos%4] = dev_addr;
  9963  0C40  0020               	movlb	0	; select bank0
  9964  0C41  0859               	movf	command_handler@dev_addr,w
  9965  0C42  00D2               	movwf	??_command_handler
  9966  0C43  3004               	movlw	4
  9967  0C44  00AB               	movwf	___awdiv@divisor
  9968  0C45  3000               	movlw	0
  9969  0C46  00AC               	movwf	___awdiv@divisor+1
  9970  0C47  0879               	movf	command_handler@pos,w
  9971  0C48  00D3               	movwf	??_command_handler+1
  9972  0C49  01D4               	clrf	??_command_handler+2
  9973  0C4A  0853               	movf	??_command_handler+1,w
  9974  0C4B  00AD               	movwf	___awdiv@dividend
  9975  0C4C  0854               	movf	??_command_handler+2,w
  9976  0C4D  00AE               	movwf	___awdiv@dividend+1
  9977  0C4E  319F  27AE  318B   	fcall	___awdiv
  9978  0C51  0020               	movlb	0	; select bank0
  9979  0C52  082B               	movf	?___awdiv,w
  9980  0C53  00D5               	movwf	??_command_handler+3
  9981  0C54  3002               	movlw	2
  9982  0C55                     u6295:	
  9983  0C55  35D5               	lslf	??_command_handler+3,f
  9984  0C56  0B89               	decfsz	9,f
  9985  0C57  2C55               	goto	u6295
  9986  0C58  30A0               	movlw	(low (_schedule| (0+256)))& (0+255)
  9987  0C59  0755               	addwf	??_command_handler+3,w
  9988  0C5A  00D6               	movwf	??_command_handler+4
  9989  0C5B  0879               	movf	command_handler@pos,w
  9990  0C5C  3903               	andlw	3
  9991  0C5D  0756               	addwf	??_command_handler+4,w
  9992  0C5E  00D7               	movwf	??_command_handler+5
  9993  0C5F  0857               	movf	??_command_handler+5,w
  9994  0C60  0086               	movwf	6
  9995  0C61  3001               	movlw	1	; select bank3/4
  9996  0C62  0087               	movwf	7
  9997  0C63  0852               	movf	??_command_handler,w
  9998  0C64  0081               	movwf	1
  9999                           
 10000                           ;main.c: 419: } else {
 10001  0C65  0008               	return
 10002  0C66                     l5529:	
 10003                           
 10004                           ;main.c: 420: printf("!:WSC:POS LARGER THAN 27\n");
 10005  0C66  3052               	movlw	low (STR_30| (0+32768))
 10006  0C67  00C1               	movwf	printf@f
 10007  0C68  3090               	movlw	high (STR_30| (0+32768))
 10008  0C69  00C2               	movwf	printf@f+1
 10009  0C6A  319B  2308         	fcall	_printf
 10010                           
 10011                           ;main.c: 421: }
 10012                           ;main.c: 422: } else if (!strncmp(("RSC"), (buf), 3)) {
 10013  0C6C  0008               	return
 10014  0C6D                     l5531:	
 10015  0C6D  30E8               	movlw	low (STR_31| (0+32768))
 10016  0C6E  0020               	movlb	0	; select bank0
 10017  0C6F  00A0               	movwf	strncmp@s1
 10018  0C70  3091               	movlw	high (STR_31| (0+32768))
 10019  0C71  00A1               	movwf	strncmp@s1+1
 10020  0C72  0851               	movf	command_handler@buf+1,w
 10021  0C73  00A3               	movwf	strncmp@s2+1
 10022  0C74  0850               	movf	command_handler@buf,w
 10023  0C75  00A2               	movwf	strncmp@s2
 10024  0C76  3003               	movlw	3
 10025  0C77  00A4               	movwf	strncmp@len
 10026  0C78  3000               	movlw	0
 10027  0C79  00A5               	movwf	strncmp@len+1
 10028  0C7A  3187  27BE  318B   	fcall	_strncmp
 10029  0C7D  0020               	movlb	0	; select bank0
 10030  0C7E  0820               	movf	?_strncmp,w
 10031  0C7F  0421               	iorwf	?_strncmp+1,w
 10032  0C80  1D03               	btfss	3,2
 10033  0C81  2CF6               	goto	l5553
 10034                           
 10035                           ;main.c: 423: printf("$:RSC:");
 10036  0C82  30A1               	movlw	low (STR_32| (0+32768))
 10037  0C83  00C1               	movwf	printf@f
 10038  0C84  3091               	movlw	high (STR_32| (0+32768))
 10039  0C85  00C2               	movwf	printf@f+1
 10040  0C86  319B  2308  318B   	fcall	_printf
 10041                           
 10042                           ;main.c: 424: for (i=0; i<27; i++) {
 10043  0C89  0020               	movlb	0	; select bank0
 10044  0C8A  01DA               	clrf	command_handler@i
 10045  0C8B  301B               	movlw	27
 10046  0C8C  025A               	subwf	command_handler@i,w
 10047  0C8D  1803               	btfsc	3,0
 10048  0C8E  2CE6               	goto	l5551
 10049  0C8F                     l5541:	
 10050                           
 10051                           ;main.c: 425: if ((i+1) % 4 == 0) {
 10052  0C8F  085A               	movf	command_handler@i,w
 10053  0C90  3E01               	addlw	1
 10054  0C91  3903               	andlw	3
 10055  0C92  1D03               	btfss	3,2
 10056  0C93  2CAE               	goto	l5545
 10057                           
 10058                           ;main.c: 426: printf("%d|", schedule[i/4][i%4]);
 10059  0C94  3018               	movlw	low (STR_33| (0+32768))
 10060  0C95  00C1               	movwf	printf@f
 10061  0C96  3092               	movlw	high (STR_33| (0+32768))
 10062  0C97  00C2               	movwf	printf@f+1
 10063  0C98  3004               	movlw	4
 10064  0C99  00AB               	movwf	___awdiv@divisor
 10065  0C9A  3000               	movlw	0
 10066  0C9B  00AC               	movwf	___awdiv@divisor+1
 10067  0C9C  085A               	movf	command_handler@i,w
 10068  0C9D  00D2               	movwf	??_command_handler
 10069  0C9E  01D3               	clrf	??_command_handler+1
 10070  0C9F  0852               	movf	??_command_handler,w
 10071  0CA0  00AD               	movwf	___awdiv@dividend
 10072  0CA1  0853               	movf	??_command_handler+1,w
 10073  0CA2  00AE               	movwf	___awdiv@dividend+1
 10074  0CA3  319F  27AE  318B   	fcall	___awdiv
 10075  0CA6  0020               	movlb	0	; select bank0
 10076  0CA7  082B               	movf	?___awdiv,w
 10077  0CA8  00D4               	movwf	??_command_handler+2
 10078  0CA9  3002               	movlw	2
 10079  0CAA                     u6335:	
 10080  0CAA  35D4               	lslf	??_command_handler+2,f
 10081  0CAB  0B89               	decfsz	9,f
 10082  0CAC  2CAA               	goto	u6335
 10083  0CAD  2CC8               	goto	L9
 10084  0CAE                     l5545:	
 10085                           ;main.c: 427: } else {
 10086                           
 10087                           
 10088                           ;main.c: 428: printf("%d,", schedule[i/4][i%4]);
 10089  0CAE  30D8               	movlw	low (STR_14| (0+32768))
 10090  0CAF  0020               	movlb	0	; select bank0
 10091  0CB0  00C1               	movwf	printf@f
 10092  0CB1  3091               	movlw	high (STR_14| (0+32768))
 10093  0CB2  00C2               	movwf	printf@f+1
 10094  0CB3  3004               	movlw	4
 10095  0CB4  00AB               	movwf	___awdiv@divisor
 10096  0CB5  3000               	movlw	0
 10097  0CB6  00AC               	movwf	___awdiv@divisor+1
 10098  0CB7  085A               	movf	command_handler@i,w
 10099  0CB8  00D2               	movwf	??_command_handler
 10100  0CB9  01D3               	clrf	??_command_handler+1
 10101  0CBA  0852               	movf	??_command_handler,w
 10102  0CBB  00AD               	movwf	___awdiv@dividend
 10103  0CBC  0853               	movf	??_command_handler+1,w
 10104  0CBD  00AE               	movwf	___awdiv@dividend+1
 10105  0CBE  319F  27AE  318B   	fcall	___awdiv
 10106  0CC1  0020               	movlb	0	; select bank0
 10107  0CC2  082B               	movf	?___awdiv,w
 10108  0CC3  00D4               	movwf	??_command_handler+2
 10109  0CC4  3002               	movlw	2
 10110  0CC5                     u6345:	
 10111  0CC5  35D4               	lslf	??_command_handler+2,f
 10112  0CC6  0B89               	decfsz	9,f
 10113  0CC7  2CC5               	goto	u6345
 10114  0CC8                     L9:	
 10115  0CC8  30A0               	movlw	(low (_schedule| (0+256)))& (0+255)
 10116  0CC9  0754               	addwf	??_command_handler+2,w
 10117  0CCA  00D5               	movwf	??_command_handler+3
 10118  0CCB  085A               	movf	command_handler@i,w
 10119  0CCC  3903               	andlw	3
 10120  0CCD  0755               	addwf	??_command_handler+3,w
 10121  0CCE  00D6               	movwf	??_command_handler+4
 10122  0CCF  0856               	movf	??_command_handler+4,w
 10123  0CD0  0086               	movwf	6
 10124  0CD1  3001               	movlw	1	; select bank3/4
 10125  0CD2  0087               	movwf	7
 10126  0CD3  0801               	movf	1,w
 10127  0CD4  00D7               	movwf	??_command_handler+5
 10128  0CD5  01D8               	clrf	??_command_handler+6
 10129  0CD6  0857               	movf	??_command_handler+5,w
 10130  0CD7  00C3               	movwf	?_printf+2
 10131  0CD8  0858               	movf	??_command_handler+6,w
 10132  0CD9  00C4               	movwf	?_printf+3
 10133  0CDA  319B  2308  318B   	fcall	_printf
 10134  0CDD  3001               	movlw	1
 10135  0CDE  0020               	movlb	0	; select bank0
 10136  0CDF  00D2               	movwf	??_command_handler
 10137  0CE0  0852               	movf	??_command_handler,w
 10138  0CE1  07DA               	addwf	command_handler@i,f
 10139  0CE2  301B               	movlw	27
 10140  0CE3  025A               	subwf	command_handler@i,w
 10141  0CE4  1C03               	skipc
 10142  0CE5  2C8F               	goto	l5541
 10143  0CE6                     l5551:	
 10144                           
 10145                           ;main.c: 429: }
 10146                           ;main.c: 430: }
 10147                           ;main.c: 431: printf("%d\n", schedule[6][3]);
 10148  0CE6  302F               	movlw	low ((STR_55+6)| (0+32768))
 10149  0CE7  00C1               	movwf	printf@f
 10150  0CE8  3091               	movlw	high ((STR_55+6)| (0+32768))
 10151  0CE9  00C2               	movwf	printf@f+1
 10152  0CEA  0023               	movlb	3	; select bank3
 10153  0CEB  083B               	movf	(_schedule^(0+384)+27),w
 10154  0CEC  0020               	movlb	0	; select bank0
 10155  0CED  00D2               	movwf	??_command_handler
 10156  0CEE  01D3               	clrf	??_command_handler+1
 10157  0CEF  0852               	movf	??_command_handler,w
 10158  0CF0  00C3               	movwf	?_printf+2
 10159  0CF1  0853               	movf	??_command_handler+1,w
 10160  0CF2  00C4               	movwf	?_printf+3
 10161  0CF3  319B  2308         	fcall	_printf
 10162                           
 10163                           ;main.c: 432: } else if (!strncmp(("CSC"), (buf), 3)) {
 10164  0CF5  0008               	return
 10165  0CF6                     l5553:	
 10166  0CF6  30E4               	movlw	low (STR_36| (0+32768))
 10167  0CF7  0020               	movlb	0	; select bank0
 10168  0CF8  00A0               	movwf	strncmp@s1
 10169  0CF9  3091               	movlw	high (STR_36| (0+32768))
 10170  0CFA  00A1               	movwf	strncmp@s1+1
 10171  0CFB  0851               	movf	command_handler@buf+1,w
 10172  0CFC  00A3               	movwf	strncmp@s2+1
 10173  0CFD  0850               	movf	command_handler@buf,w
 10174  0CFE  00A2               	movwf	strncmp@s2
 10175  0CFF  3003               	movlw	3
 10176  0D00  00A4               	movwf	strncmp@len
 10177  0D01  3000               	movlw	0
 10178  0D02  00A5               	movwf	strncmp@len+1
 10179  0D03  3187  27BE  318B   	fcall	_strncmp
 10180  0D06  0020               	movlb	0	; select bank0
 10181  0D07  0820               	movf	?_strncmp,w
 10182  0D08  0421               	iorwf	?_strncmp+1,w
 10183  0D09  1D03               	btfss	3,2
 10184  0D0A  2D3D               	goto	l5569
 10185                           
 10186                           ;main.c: 433: for (i=0; i<28; i++) {
 10187  0D0B  01DA               	clrf	command_handler@i
 10188  0D0C                     L10:	
 10189  0D0C  301C               	movlw	28
 10190  0D0D  025A               	subwf	command_handler@i,w
 10191  0D0E  1803               	btfsc	3,0
 10192  0D0F  0008               	return
 10193                           
 10194                           ;main.c: 434: DATAEE_WriteByte(1+i+1, 0);
 10195  0D10  01A0               	clrf	DATAEE_WriteByte@bData
 10196  0D11  085A               	movf	command_handler@i,w
 10197  0D12  3E02               	addlw	2
 10198  0D13  319C  2441  318B   	fcall	_DATAEE_WriteByte
 10199                           
 10200                           ;main.c: 435: schedule[i/4][i%4] = 0;
 10201  0D16  3004               	movlw	4
 10202  0D17  0020               	movlb	0	; select bank0
 10203  0D18  00AB               	movwf	___awdiv@divisor
 10204  0D19  3000               	movlw	0
 10205  0D1A  00AC               	movwf	___awdiv@divisor+1
 10206  0D1B  085A               	movf	command_handler@i,w
 10207  0D1C  00D2               	movwf	??_command_handler
 10208  0D1D  01D3               	clrf	??_command_handler+1
 10209  0D1E  0852               	movf	??_command_handler,w
 10210  0D1F  00AD               	movwf	___awdiv@dividend
 10211  0D20  0853               	movf	??_command_handler+1,w
 10212  0D21  00AE               	movwf	___awdiv@dividend+1
 10213  0D22  319F  27AE  318B   	fcall	___awdiv
 10214  0D25  0020               	movlb	0	; select bank0
 10215  0D26  082B               	movf	?___awdiv,w
 10216  0D27  00D4               	movwf	??_command_handler+2
 10217  0D28  3002               	movlw	2
 10218  0D29                     u6385:	
 10219  0D29  35D4               	lslf	??_command_handler+2,f
 10220  0D2A  0B89               	decfsz	9,f
 10221  0D2B  2D29               	goto	u6385
 10222  0D2C  30A0               	movlw	(low (_schedule| (0+256)))& (0+255)
 10223  0D2D  0754               	addwf	??_command_handler+2,w
 10224  0D2E  00D5               	movwf	??_command_handler+3
 10225  0D2F  085A               	movf	command_handler@i,w
 10226  0D30  3903               	andlw	3
 10227  0D31  0755               	addwf	??_command_handler+3,w
 10228  0D32  00D6               	movwf	??_command_handler+4
 10229  0D33  0856               	movf	??_command_handler+4,w
 10230  0D34  0086               	movwf	6
 10231  0D35  3001               	movlw	1	; select bank3/4
 10232  0D36  0087               	movwf	7
 10233  0D37  0181               	clrf	1
 10234  0D38  3001               	movlw	1
 10235  0D39  00D2               	movwf	??_command_handler
 10236  0D3A  0852               	movf	??_command_handler,w
 10237  0D3B  07DA               	addwf	command_handler@i,f
 10238  0D3C  2D0C               	goto	L10
 10239  0D3D                     l5569:	
 10240                           ;main.c: 436: }
 10241                           ;main.c: 437: } else if (!strncmp(("EDG"), (buf), 3)) {
 10242                           
 10243  0D3D  30F0               	movlw	low (STR_37| (0+32768))
 10244  0D3E  00A0               	movwf	strncmp@s1
 10245  0D3F  3091               	movlw	high (STR_37| (0+32768))
 10246  0D40  00A1               	movwf	strncmp@s1+1
 10247  0D41  0851               	movf	command_handler@buf+1,w
 10248  0D42  00A3               	movwf	strncmp@s2+1
 10249  0D43  0850               	movf	command_handler@buf,w
 10250  0D44  00A2               	movwf	strncmp@s2
 10251  0D45  3003               	movlw	3
 10252  0D46  00A4               	movwf	strncmp@len
 10253  0D47  3000               	movlw	0
 10254  0D48  00A5               	movwf	strncmp@len+1
 10255  0D49  3187  27BE  318B   	fcall	_strncmp
 10256  0D4C  0020               	movlb	0	; select bank0
 10257  0D4D  0820               	movf	?_strncmp,w
 10258  0D4E  0421               	iorwf	?_strncmp+1,w
 10259  0D4F  1D03               	btfss	3,2
 10260  0D50  2D79               	goto	l5577
 10261                           
 10262                           ;main.c: 438: if (!strncmp("MTR", &buf[4], 3)) {
 10263  0D51  3004               	movlw	low (STR_38| (0+32768))
 10264  0D52  00A0               	movwf	strncmp@s1
 10265  0D53  3092               	movlw	high (STR_38| (0+32768))
 10266  0D54  00A1               	movwf	strncmp@s1+1
 10267  0D55  0850               	movf	command_handler@buf,w
 10268  0D56  3E04               	addlw	4
 10269  0D57  00D2               	movwf	??_command_handler
 10270  0D58  3000               	movlw	0
 10271  0D59  3D51               	addwfc	command_handler@buf+1,w
 10272  0D5A  00D3               	movwf	??_command_handler+1
 10273  0D5B  0852               	movf	??_command_handler,w
 10274  0D5C  00A2               	movwf	strncmp@s2
 10275  0D5D  0853               	movf	??_command_handler+1,w
 10276  0D5E  00A3               	movwf	strncmp@s2+1
 10277  0D5F  3003               	movlw	3
 10278  0D60  00A4               	movwf	strncmp@len
 10279  0D61  3000               	movlw	0
 10280  0D62  00A5               	movwf	strncmp@len+1
 10281  0D63  3187  27BE  318B   	fcall	_strncmp
 10282  0D66  0020               	movlb	0	; select bank0
 10283  0D67  0820               	movf	?_strncmp,w
 10284  0D68  0421               	iorwf	?_strncmp+1,w
 10285  0D69  1D03               	btfss	3,2
 10286  0D6A  2D71               	goto	l5575
 10287                           
 10288                           ;main.c: 439: edge_func = edge_meter;
 10289  0D6B  3088               	movlw	low _edge_meter
 10290  0D6C  0022               	movlb	2	; select bank2
 10291  0D6D  00BB               	movwf	_edge_func^(0+256)
 10292  0D6E  3003               	movlw	high _edge_meter
 10293  0D6F  00BC               	movwf	(_edge_func^(0+256)+1)
 10294                           
 10295                           ;main.c: 440: } else {
 10296  0D70  0008               	return
 10297  0D71                     l5575:	
 10298                           
 10299                           ;main.c: 441: printf("!:EDG:UNRECOGNIZED EDGE FUNC\n");
 10300  0D71  3034               	movlw	low (STR_39| (0+32768))
 10301  0D72  0020               	movlb	0	; select bank0
 10302  0D73  00C1               	movwf	printf@f
 10303  0D74  3090               	movlw	high (STR_39| (0+32768))
 10304  0D75  00C2               	movwf	printf@f+1
 10305  0D76  319B  2308         	fcall	_printf
 10306                           
 10307                           ;main.c: 442: }
 10308                           ;main.c: 443: } else if (BACKPLANE_SLAVE_ADDRESS != 0x01) {
 10309  0D78  0008               	return
 10310  0D79                     l5577:	
 10311  0D79  0022               	movlb	2	; select bank2
 10312  0D7A  0368               	decf	_BACKPLANE_SLAVE_ADDRESS^(0+256),w
 10313  0D7B  1903               	btfsc	3,2
 10314  0D7C  0008               	return
 10315                           
 10316                           ;main.c: 444: put_cmd(buf);
 10317  0D7D  0020               	movlb	0	; select bank0
 10318  0D7E  0851               	movf	command_handler@buf+1,w
 10319  0D7F  00AD               	movwf	put_cmd@buf+1
 10320  0D80  0850               	movf	command_handler@buf,w
 10321  0D81  00AC               	movwf	put_cmd@buf
 10322  0D82  319E  26C9         	fcall	_put_cmd
 10323  0D84  0008               	return
 10324  0D85                     __end_of_command_handler:	
 10325                           
 10326                           	psect	text37
 10327  07BE                     __ptext37:	
 10328 ;; *************** function _strncmp *****************
 10329 ;; Defined at:
 10330 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\strncmp.c"
 10331 ;; Parameters:    Size  Location     Type
 10332 ;;  s1              2    0[BANK0 ] PTR const unsigned char 
 10333 ;;		 -> STR_54(4), STR_53(4), STR_51(4), STR_50(4), 
 10334 ;;		 -> STR_47(4), STR_46(4), STR_45(4), STR_43(4), 
 10335 ;;		 -> STR_38(4), STR_37(4), STR_36(4), STR_31(4), 
 10336 ;;		 -> STR_29(4), STR_27(4), STR_26(4), STR_25(4), 
 10337 ;;		 -> STR_24(4), STR_10(4), STR_9(4), STR_6(4), 
 10338 ;;		 -> STR_5(4), STR_4(4), STR_1(4), 
 10339 ;;  s2              2    2[BANK0 ] PTR const unsigned char 
 10340 ;;		 -> buf(48), edge_meter@buf(48), cmd_buf(192), 
 10341 ;;  len             2    4[BANK0 ] unsigned int 
 10342 ;; Auto vars:     Size  Location     Type
 10343 ;;		None
 10344 ;; Return value:  Size  Location     Type
 10345 ;;                  2    0[BANK0 ] int 
 10346 ;; Registers used:
 10347 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 10348 ;; Tracked objects:
 10349 ;;		On entry : 0/0
 10350 ;;		On exit  : 0/0
 10351 ;;		Unchanged: 0/0
 10352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10353 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10354 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10355 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10356 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10357 ;;Total ram usage:        8 bytes
 10358 ;; Hardware stack levels used:    1
 10359 ;; Hardware stack levels required when called:    3
 10360 ;; This function calls:
 10361 ;;		Nothing
 10362 ;; This function is called by:
 10363 ;;		_exec_remote_cmd
 10364 ;;		_command_handler
 10365 ;;		_PROTOCOL_Loop
 10366 ;; This function uses a non-reentrant model
 10367 ;;
 10368                           
 10369                           
 10370                           ;psect for function _strncmp
 10371  07BE                     _strncmp:	
 10372  07BE                     l4021:	
 10373                           ;incstack = 0
 10374                           ; Regs used in _strncmp: [wreg-fsr1h+status,2+status,0+pclath]
 10375                           
 10376  07BE  3001               	movlw	1
 10377  07BF  0020               	movlb	0	; select bank0
 10378  07C0  02A4               	subwf	strncmp@len,f
 10379  07C1  3000               	movlw	0
 10380  07C2  3BA5               	subwfb	strncmp@len+1,f
 10381  07C3  0A24               	incf	strncmp@len,w
 10382  07C4  1903               	btfsc	3,2
 10383  07C5  0A25               	incf	strncmp@len+1,w
 10384  07C6  1903               	btfsc	3,2
 10385  07C7  2FFD               	goto	l4023
 10386  07C8  0020               	movlb	0	; select bank0
 10387  07C9  0820               	movf	strncmp@s1,w
 10388  07CA  0084               	movwf	4
 10389  07CB  0821               	movf	strncmp@s1+1,w
 10390  07CC  0085               	movwf	5
 10391  07CD  0012               	moviw fsr0++
 10392  07CE  1903               	btfsc	3,2
 10393  07CF  2FDC               	goto	l4015
 10394  07D0  0822               	movf	strncmp@s2,w
 10395  07D1  0086               	movwf	6
 10396  07D2  0823               	movf	strncmp@s2+1,w
 10397  07D3  0087               	movwf	7
 10398  07D4  0820               	movf	strncmp@s1,w
 10399  07D5  0084               	movwf	4
 10400  07D6  0821               	movf	strncmp@s1+1,w
 10401  07D7  0085               	movwf	5
 10402  07D8  0800               	movf	0,w	;code access
 10403  07D9  0601               	xorwf	1,w
 10404  07DA  1903               	skipnz
 10405  07DB  2FF4               	goto	l4019
 10406  07DC                     l4015:	
 10407  07DC  0822               	movf	strncmp@s2,w
 10408  07DD  0086               	movwf	6
 10409  07DE  0823               	movf	strncmp@s2+1,w
 10410  07DF  0087               	movwf	7
 10411  07E0  0801               	movf	1,w
 10412  07E1  00A6               	movwf	??_strncmp
 10413  07E2  01A7               	clrf	??_strncmp+1
 10414  07E3  09A6               	comf	??_strncmp,f
 10415  07E4  09A7               	comf	??_strncmp+1,f
 10416  07E5  0AA6               	incf	??_strncmp,f
 10417  07E6  1903               	skipnz
 10418  07E7  0AA7               	incf	??_strncmp+1,f
 10419  07E8  0820               	movf	strncmp@s1,w
 10420  07E9  0084               	movwf	4
 10421  07EA  0821               	movf	strncmp@s1+1,w
 10422  07EB  0085               	movwf	5
 10423  07EC  0800               	movf	0,w	;code access
 10424  07ED  0726               	addwf	??_strncmp,w
 10425  07EE  00A0               	movwf	?_strncmp
 10426  07EF  0827               	movf	??_strncmp+1,w
 10427  07F0  1803               	skipnc
 10428  07F1  0A27               	incf	??_strncmp+1,w
 10429  07F2  00A1               	movwf	?_strncmp+1
 10430  07F3  0008               	return
 10431  07F4                     l4019:	
 10432  07F4  3001               	movlw	1
 10433  07F5  07A0               	addwf	strncmp@s1,f
 10434  07F6  3000               	movlw	0
 10435  07F7  3DA1               	addwfc	strncmp@s1+1,f
 10436  07F8  3001               	movlw	1
 10437  07F9  07A2               	addwf	strncmp@s2,f
 10438  07FA  3000               	movlw	0
 10439  07FB  3DA3               	addwfc	strncmp@s2+1,f
 10440  07FC  2FBE               	goto	l4021
 10441  07FD                     l4023:	
 10442  07FD  01A0               	clrf	?_strncmp
 10443  07FE  01A1               	clrf	?_strncmp+1
 10444  07FF  0008               	return
 10445  0800                     __end_of_strncmp:	
 10446                           
 10447                           	psect	text38
 10448  1EC9                     __ptext38:	
 10449 ;; *************** function _put_cmd *****************
 10450 ;; Defined at:
 10451 ;;		line 343 in file "main.c"
 10452 ;; Parameters:    Size  Location     Type
 10453 ;;  buf             2   12[BANK0 ] PTR unsigned char 
 10454 ;;		 -> buf(48), edge_meter@buf(48), 
 10455 ;; Auto vars:     Size  Location     Type
 10456 ;;		None
 10457 ;; Return value:  Size  Location     Type
 10458 ;;                  1    wreg      void 
 10459 ;; Registers used:
 10460 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10461 ;; Tracked objects:
 10462 ;;		On entry : 0/0
 10463 ;;		On exit  : 0/0
 10464 ;;		Unchanged: 0/0
 10465 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10466 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10468 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10469 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10470 ;;Total ram usage:        6 bytes
 10471 ;; Hardware stack levels used:    1
 10472 ;; Hardware stack levels required when called:    4
 10473 ;; This function calls:
 10474 ;;		___wmul
 10475 ;;		_strcpy
 10476 ;; This function is called by:
 10477 ;;		_command_handler
 10478 ;; This function uses a non-reentrant model
 10479 ;;
 10480                           
 10481                           
 10482                           ;psect for function _put_cmd
 10483  1EC9                     _put_cmd:	
 10484                           
 10485                           ;main.c: 344: static int8_t idx = -1;
 10486                           ;main.c: 345: if (++idx > 3) idx = 0;
 10487                           
 10488                           ;incstack = 0
 10489                           ; Regs used in _put_cmd: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10490  1EC9  3001               	movlw	1
 10491  1ECA  0020               	movlb	0	; select bank0
 10492  1ECB  00AE               	movwf	??_put_cmd
 10493  1ECC  082E               	movf	??_put_cmd,w
 10494  1ECD  0022               	movlb	2	; select bank2
 10495  1ECE  07E5               	addwf	put_cmd@idx^(0+256),f
 10496  1ECF  0865               	movf	put_cmd@idx^(0+256),w
 10497  1ED0  3A80               	xorlw	128
 10498  1ED1  3E7C               	addlw	-132
 10499  1ED2  1803               	btfsc	3,0
 10500  1ED3  01E5               	clrf	put_cmd@idx^(0+256)
 10501                           
 10502                           ;main.c: 346: if (cmd_buf[idx][0] == '\0') strcpy(cmd_buf[idx], buf);
 10503  1ED4  0865               	movf	put_cmd@idx^(0+256),w
 10504  1ED5  0020               	movlb	0	; select bank0
 10505  1ED6  00AE               	movwf	??_put_cmd
 10506  1ED7  01AF               	clrf	??_put_cmd+1
 10507  1ED8  082E               	movf	??_put_cmd,w
 10508  1ED9  00A0               	movwf	___wmul@multiplier
 10509  1EDA  082F               	movf	??_put_cmd+1,w
 10510  1EDB  00A1               	movwf	___wmul@multiplier+1
 10511  1EDC  3030               	movlw	48
 10512  1EDD  00A2               	movwf	___wmul@multiplicand
 10513  1EDE  3000               	movlw	0
 10514  1EDF  00A3               	movwf	___wmul@multiplicand+1
 10515  1EE0  319B  238B  319E   	fcall	___wmul
 10516  1EE3  3030               	movlw	48
 10517  1EE4  0020               	movlb	0	; select bank0
 10518  1EE5  00B0               	movwf	??_put_cmd+2
 10519  1EE6  3023               	movlw	35
 10520  1EE7  00B1               	movwf	??_put_cmd+3
 10521  1EE8  0820               	movf	?___wmul,w
 10522  1EE9  0730               	addwf	??_put_cmd+2,w
 10523  1EEA  0086               	movwf	6
 10524  1EEB  0821               	movf	?___wmul+1,w
 10525  1EEC  3D31               	addwfc	??_put_cmd+3,w
 10526  1EED  0087               	movwf	7
 10527  1EEE  0801               	movf	1,w
 10528  1EEF  1D03               	btfss	3,2
 10529  1EF0  0008               	return
 10530  1EF1  0022               	movlb	2	; select bank2
 10531  1EF2  0865               	movf	put_cmd@idx^(0+256),w
 10532  1EF3  0020               	movlb	0	; select bank0
 10533  1EF4  00AE               	movwf	??_put_cmd
 10534  1EF5  01AF               	clrf	??_put_cmd+1
 10535  1EF6  082E               	movf	??_put_cmd,w
 10536  1EF7  00A0               	movwf	___wmul@multiplier
 10537  1EF8  082F               	movf	??_put_cmd+1,w
 10538  1EF9  00A1               	movwf	___wmul@multiplier+1
 10539  1EFA  3030               	movlw	48
 10540  1EFB  00A2               	movwf	___wmul@multiplicand
 10541  1EFC  3000               	movlw	0
 10542  1EFD  00A3               	movwf	___wmul@multiplicand+1
 10543  1EFE  319B  238B  319E   	fcall	___wmul
 10544  1F01  3030               	movlw	48
 10545  1F02  0020               	movlb	0	; select bank0
 10546  1F03  00B0               	movwf	??_put_cmd+2
 10547  1F04  3023               	movlw	35
 10548  1F05  00B1               	movwf	??_put_cmd+3
 10549  1F06  0820               	movf	?___wmul,w
 10550  1F07  0730               	addwf	??_put_cmd+2,w
 10551  1F08  00A6               	movwf	strcpy@to
 10552  1F09  0821               	movf	?___wmul+1,w
 10553  1F0A  3D31               	addwfc	??_put_cmd+3,w
 10554  1F0B  00A7               	movwf	strcpy@to+1
 10555  1F0C  082D               	movf	put_cmd@buf+1,w
 10556  1F0D  00A9               	movwf	strcpy@from+1
 10557  1F0E  082C               	movf	put_cmd@buf,w
 10558  1F0F  00A8               	movwf	strcpy@from
 10559  1F10  319B  231E         	fcall	_strcpy
 10560  1F12  0008               	return
 10561  1F13                     __end_of_put_cmd:	
 10562                           
 10563                           	psect	text39
 10564  1B1E                     __ptext39:	
 10565 ;; *************** function _strcpy *****************
 10566 ;; Defined at:
 10567 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\strcpy.c"
 10568 ;; Parameters:    Size  Location     Type
 10569 ;;  to              2    6[BANK0 ] PTR unsigned char 
 10570 ;;		 -> cmd_buf(192), 
 10571 ;;  from            2    8[BANK0 ] PTR const unsigned char 
 10572 ;;		 -> buf(48), edge_meter@buf(48), 
 10573 ;; Auto vars:     Size  Location     Type
 10574 ;;  cp              2   10[BANK0 ] PTR unsigned char 
 10575 ;;		 -> cmd_buf(192), 
 10576 ;; Return value:  Size  Location     Type
 10577 ;;                  2    6[BANK0 ] PTR unsigned char 
 10578 ;; Registers used:
 10579 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h
 10580 ;; Tracked objects:
 10581 ;;		On entry : 0/0
 10582 ;;		On exit  : 0/0
 10583 ;;		Unchanged: 0/0
 10584 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10585 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10586 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10588 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10589 ;;Total ram usage:        6 bytes
 10590 ;; Hardware stack levels used:    1
 10591 ;; Hardware stack levels required when called:    3
 10592 ;; This function calls:
 10593 ;;		Nothing
 10594 ;; This function is called by:
 10595 ;;		_put_cmd
 10596 ;; This function uses a non-reentrant model
 10597 ;;
 10598                           
 10599                           
 10600                           ;psect for function _strcpy
 10601  1B1E                     _strcpy:	
 10602                           
 10603                           ;incstack = 0
 10604                           ; Regs used in _strcpy: [wreg-fsr1h]
 10605  1B1E  0020               	movlb	0	; select bank0
 10606  1B1F  0827               	movf	strcpy@to+1,w
 10607  1B20  00AB               	movwf	strcpy@cp+1
 10608  1B21  0826               	movf	strcpy@to,w
 10609  1B22  00AA               	movwf	strcpy@cp
 10610  1B23                     l3987:	
 10611  1B23  082A               	movf	strcpy@cp,w
 10612  1B24  0086               	movwf	6
 10613  1B25  082B               	movf	strcpy@cp+1,w
 10614  1B26  0087               	movwf	7
 10615  1B27  0828               	movf	strcpy@from,w
 10616  1B28  0084               	movwf	4
 10617  1B29  0829               	movf	strcpy@from+1,w
 10618  1B2A  0085               	movwf	5
 10619  1B2B  0800               	movf	0,w
 10620  1B2C  3FC0               	movwi [0]fsr1
 10621  1B2D  0889               	movf	9,f
 10622  1B2E  1903               	btfsc	3,2
 10623  1B2F  0008               	return
 10624  1B30  3001               	movlw	1
 10625  1B31  07AA               	addwf	strcpy@cp,f
 10626  1B32  3000               	movlw	0
 10627  1B33  3DAB               	addwfc	strcpy@cp+1,f
 10628  1B34  3001               	movlw	1
 10629  1B35  07A8               	addwf	strcpy@from,f
 10630  1B36  3000               	movlw	0
 10631  1B37  3DA9               	addwfc	strcpy@from+1,f
 10632  1B38  2B23               	goto	l3987
 10633  1B39                     __end_of_strcpy:	
 10634                           ;	Return value of _strcpy is never used
 10635                           
 10636                           
 10637                           	psect	text40
 10638  1E81                     __ptext40:	
 10639 ;; *************** function _print_dev_map *****************
 10640 ;; Defined at:
 10641 ;;		line 232 in file "main.c"
 10642 ;; Parameters:    Size  Location     Type
 10643 ;;		None
 10644 ;; Auto vars:     Size  Location     Type
 10645 ;;  len             1   47[BANK0 ] unsigned char 
 10646 ;;  i               1   46[BANK0 ] unsigned char 
 10647 ;; Return value:  Size  Location     Type
 10648 ;;                  1    wreg      void 
 10649 ;; Registers used:
 10650 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10651 ;; Tracked objects:
 10652 ;;		On entry : 0/0
 10653 ;;		On exit  : 0/0
 10654 ;;		Unchanged: 0/0
 10655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10656 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10657 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10658 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10659 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10660 ;;Total ram usage:        4 bytes
 10661 ;; Hardware stack levels used:    1
 10662 ;; Hardware stack levels required when called:    7
 10663 ;; This function calls:
 10664 ;;		_dev_map_iterator
 10665 ;;		_printf
 10666 ;; This function is called by:
 10667 ;;		_command_handler
 10668 ;; This function uses a non-reentrant model
 10669 ;;
 10670                           
 10671                           
 10672                           ;psect for function _print_dev_map
 10673  1E81                     _print_dev_map:	
 10674                           
 10675                           ;main.c: 233: uint8_t i;
 10676                           ;main.c: 234: uint8_t len = devs;
 10677                           
 10678                           ;incstack = 0
 10679                           ; Regs used in _print_dev_map: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10680  1E81  0022               	movlb	2	; select bank2
 10681  1E82  0850               	movf	_devs^(0+256),w
 10682  1E83  0020               	movlb	0	; select bank0
 10683  1E84  00CC               	movwf	??_print_dev_map
 10684  1E85  084C               	movf	??_print_dev_map,w
 10685  1E86  00CF               	movwf	print_dev_map@len
 10686                           
 10687                           ;main.c: 235: if (len > 0) {
 10688  1E87  084F               	movf	print_dev_map@len,w
 10689  1E88  1903               	btfsc	3,2
 10690  1E89  2EC1               	goto	l5477
 10691                           
 10692                           ;main.c: 236: len--;
 10693  1E8A  3001               	movlw	1
 10694  1E8B  02CF               	subwf	print_dev_map@len,f
 10695                           
 10696                           ;main.c: 237: printf("$:MAP:");
 10697  1E8C  30A8               	movlw	low (STR_13| (0+32768))
 10698  1E8D  00C1               	movwf	printf@f
 10699  1E8E  3091               	movlw	high (STR_13| (0+32768))
 10700  1E8F  00C2               	movwf	printf@f+1
 10701  1E90  319B  2308  319E   	fcall	_printf
 10702                           
 10703                           ;main.c: 238: for (i=0; i<len; i++) printf("%d,", dev_map_iterator());
 10704  1E93  0020               	movlb	0	; select bank0
 10705  1E94  01CE               	clrf	print_dev_map@i
 10706  1E95                     l5473:	
 10707  1E95  084F               	movf	print_dev_map@len,w
 10708  1E96  024E               	subwf	print_dev_map@i,w
 10709  1E97  1803               	btfsc	3,0
 10710  1E98  2EB0               	goto	l5475
 10711  1E99  30D8               	movlw	low (STR_14| (0+32768))
 10712  1E9A  00C1               	movwf	printf@f
 10713  1E9B  3091               	movlw	high (STR_14| (0+32768))
 10714  1E9C  00C2               	movwf	printf@f+1
 10715  1E9D  3193  2392  319E   	fcall	_dev_map_iterator
 10716  1EA0  0020               	movlb	0	; select bank0
 10717  1EA1  00CC               	movwf	??_print_dev_map
 10718  1EA2  01CD               	clrf	??_print_dev_map+1
 10719  1EA3  084C               	movf	??_print_dev_map,w
 10720  1EA4  00C3               	movwf	?_printf+2
 10721  1EA5  084D               	movf	??_print_dev_map+1,w
 10722  1EA6  00C4               	movwf	?_printf+3
 10723  1EA7  319B  2308  319E   	fcall	_printf
 10724  1EAA  3001               	movlw	1
 10725  1EAB  0020               	movlb	0	; select bank0
 10726  1EAC  00CC               	movwf	??_print_dev_map
 10727  1EAD  084C               	movf	??_print_dev_map,w
 10728  1EAE  07CE               	addwf	print_dev_map@i,f
 10729  1EAF  2E95               	goto	l5473
 10730  1EB0                     l5475:	
 10731                           
 10732                           ;main.c: 239: printf("%d\n", dev_map_iterator());
 10733  1EB0  302F               	movlw	low ((STR_55+6)| (0+32768))
 10734  1EB1  00C1               	movwf	printf@f
 10735  1EB2  3091               	movlw	high ((STR_55+6)| (0+32768))
 10736  1EB3  00C2               	movwf	printf@f+1
 10737  1EB4  3193  2392  319E   	fcall	_dev_map_iterator
 10738  1EB7  0020               	movlb	0	; select bank0
 10739  1EB8  00CC               	movwf	??_print_dev_map
 10740  1EB9  01CD               	clrf	??_print_dev_map+1
 10741  1EBA  084C               	movf	??_print_dev_map,w
 10742  1EBB  00C3               	movwf	?_printf+2
 10743  1EBC  084D               	movf	??_print_dev_map+1,w
 10744  1EBD  00C4               	movwf	?_printf+3
 10745  1EBE  319B  2308         	fcall	_printf
 10746                           
 10747                           ;main.c: 240: } else {
 10748  1EC0  0008               	return
 10749  1EC1                     l5477:	
 10750                           
 10751                           ;main.c: 241: printf("!:MAP:NO SLAVE FOUND\n");
 10752  1EC1  30B6               	movlw	low (STR_16| (0+32768))
 10753  1EC2  0020               	movlb	0	; select bank0
 10754  1EC3  00C1               	movwf	printf@f
 10755  1EC4  3090               	movlw	high (STR_16| (0+32768))
 10756  1EC5  00C2               	movwf	printf@f+1
 10757  1EC6  319B  2308         	fcall	_printf
 10758  1EC8  0008               	return
 10759  1EC9                     __end_of_print_dev_map:	
 10760                           
 10761                           	psect	text41
 10762  1B08                     __ptext41:	
 10763 ;; *************** function _printf *****************
 10764 ;; Defined at:
 10765 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\printf.c"
 10766 ;; Parameters:    Size  Location     Type
 10767 ;;  f               2   33[BANK0 ] PTR const unsigned char 
 10768 ;;		 -> STR_87(10), STR_86(9), STR_85(10), STR_84(9), 
 10769 ;;		 -> STR_83(4), STR_82(4), STR_81(4), STR_80(4), 
 10770 ;;		 -> STR_79(4), STR_78(4), STR_77(4), STR_76(4), 
 10771 ;;		 -> STR_75(14), STR_74(9), STR_73(10), STR_72(9), 
 10772 ;;		 -> STR_71(10), STR_70(9), STR_69(7), STR_68(4), 
 10773 ;;		 -> STR_67(4), STR_66(9), STR_65(4), STR_64(4), 
 10774 ;;		 -> STR_63(10), STR_62(4), STR_61(4), STR_60(8), 
 10775 ;;		 -> STR_59(4), STR_58(4), STR_57(9), STR_56(6), 
 10776 ;;		 -> STR_55(10), STR_52(10), STR_48(10), STR_44(10), 
 10777 ;;		 -> STR_42(5), STR_39(30), STR_35(4), STR_34(4), 
 10778 ;;		 -> STR_33(4), STR_32(7), STR_30(26), STR_28(26), 
 10779 ;;		 -> STR_17(22), STR_16(22), STR_15(4), STR_14(4), 
 10780 ;;		 -> STR_13(7), STR_12(25), STR_11(10), STR_8(12), 
 10781 ;;		 -> STR_7(11), STR_3(3), STR_2(10), 
 10782 ;; Auto vars:     Size  Location     Type
 10783 ;;  pb              3   41[BANK0 ] struct __prbuf
 10784 ;;  ap              1   40[BANK0 ] PTR void [1]
 10785 ;;		 -> ?_sprintf(2), ?_printf(2), 
 10786 ;; Return value:  Size  Location     Type
 10787 ;;                  2   33[BANK0 ] int 
 10788 ;; Registers used:
 10789 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10790 ;; Tracked objects:
 10791 ;;		On entry : 0/0
 10792 ;;		On exit  : 0/0
 10793 ;;		Unchanged: 0/0
 10794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10795 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10796 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10797 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10798 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10799 ;;Total ram usage:       11 bytes
 10800 ;; Hardware stack levels used:    1
 10801 ;; Hardware stack levels required when called:    6
 10802 ;; This function calls:
 10803 ;;		__doprnt
 10804 ;; This function is called by:
 10805 ;;		_exec_remote_cmd
 10806 ;;		_print_dev_map
 10807 ;;		_fetch
 10808 ;;		_command_handler
 10809 ;;		_PROTOCOL_Loop
 10810 ;;		_PROTOCOL_Print_TLV
 10811 ;; This function uses a non-reentrant model
 10812 ;;
 10813                           
 10814                           
 10815                           ;psect for function _printf
 10816  1B08                     _printf:	
 10817                           
 10818                           ;incstack = 0
 10819                           ; Regs used in _printf: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10820  1B08  0020               	movlb	0	; select bank0
 10821  1B09  01C9               	clrf	printf@pb
 10822  1B0A  3018               	movlw	low _putch
 10823  1B0B  00CA               	movwf	low ((printf@pb| 0+1))
 10824  1B0C  301A               	movlw	high _putch
 10825  1B0D  00CB               	movwf	(low ((printf@pb| 0+1))+1)
 10826  1B0E  3043               	movlw	(low ((?_printf| 0+2)))& (0+255)
 10827  1B0F  00C7               	movwf	??_printf
 10828  1B10  0847               	movf	??_printf,w
 10829  1B11  00C8               	movwf	printf@ap
 10830                           
 10831                           ;	Return value of _printf is never used
 10832  1B12  0842               	movf	printf@f+1,w
 10833  1B13  00AF               	movwf	__doprnt@f+1
 10834  1B14  0841               	movf	printf@f,w
 10835  1B15  00AE               	movwf	__doprnt@f
 10836  1B16  3048               	movlw	(low (printf@ap| 0))& (0+255)
 10837  1B17  00C7               	movwf	??_printf
 10838  1B18  0847               	movf	??_printf,w
 10839  1B19  00B0               	movwf	__doprnt@ap
 10840  1B1A  3049               	movlw	(low (printf@pb| 0))& (0+255)
 10841  1B1B  3180  209A         	fcall	__doprnt
 10842  1B1D  0008               	return
 10843  1B1E                     __end_of_printf:	
 10844                           
 10845                           	psect	text42
 10846  009A                     __ptext42:	
 10847 ;; *************** function __doprnt *****************
 10848 ;; Defined at:
 10849 ;;		line 458 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\doprnt.c"
 10850 ;; Parameters:    Size  Location     Type
 10851 ;;  pb              1    wreg     PTR struct __prbuf
 10852 ;;		 -> sprintf@pb(3), printf@pb(3), 
 10853 ;;  f               2   14[BANK0 ] PTR const unsigned char 
 10854 ;;		 -> STR_87(10), STR_86(9), STR_85(10), STR_84(9), 
 10855 ;;		 -> STR_83(4), STR_82(4), STR_81(4), STR_80(4), 
 10856 ;;		 -> STR_79(4), STR_78(4), STR_77(4), STR_76(4), 
 10857 ;;		 -> STR_75(14), STR_74(9), STR_73(10), STR_72(9), 
 10858 ;;		 -> STR_71(10), STR_70(9), STR_69(7), STR_68(4), 
 10859 ;;		 -> STR_67(4), STR_66(9), STR_65(4), STR_64(4), 
 10860 ;;		 -> STR_63(10), STR_62(4), STR_61(4), STR_60(8), 
 10861 ;;		 -> STR_59(4), STR_58(4), STR_57(9), STR_56(6), 
 10862 ;;		 -> STR_55(10), STR_52(10), STR_48(10), STR_44(10), 
 10863 ;;		 -> STR_42(5), STR_39(30), STR_35(4), STR_34(4), 
 10864 ;;		 -> STR_33(4), STR_32(7), STR_30(26), STR_28(26), 
 10865 ;;		 -> STR_23(35), STR_22(5), STR_21(23), STR_20(17), 
 10866 ;;		 -> STR_19(5), STR_18(8), STR_17(22), STR_16(22), 
 10867 ;;		 -> STR_15(4), STR_14(4), STR_13(7), STR_12(25), 
 10868 ;;		 -> STR_11(10), STR_8(12), STR_7(11), STR_3(3), 
 10869 ;;		 -> STR_2(10), 
 10870 ;;  ap              1   16[BANK0 ] PTR PTR void 
 10871 ;;		 -> sprintf@ap(1), printf@ap(1), 
 10872 ;; Auto vars:     Size  Location     Type
 10873 ;;  pb              1   32[BANK0 ] PTR struct __prbuf
 10874 ;;		 -> sprintf@pb(3), printf@pb(3), 
 10875 ;;  tmpval          4    0        struct .
 10876 ;;  width           2   29[BANK0 ] int 
 10877 ;;  cp              2   26[BANK0 ] PTR const unsigned char 
 10878 ;;		 -> ?_sprintf(2), ?_printf(2), STR_49(4), buf(48), 
 10879 ;;		 -> STR_41(7), ROM(8192), _doprnt@c(1), STR_40(17), 
 10880 ;;		 -> edge_meter@buf(48), WHEEL_RADIUS(3), I2C1_ISR@i2c_address(2), NULL(0), 
 10881 ;;  len             2   24[BANK0 ] unsigned int 
 10882 ;;  val             2   22[BANK0 ] unsigned int 
 10883 ;;  c               1   31[BANK0 ] char 
 10884 ;;  flag            1   28[BANK0 ] unsigned char 
 10885 ;;  prec            1   21[BANK0 ] char 
 10886 ;; Return value:  Size  Location     Type
 10887 ;;                  2   14[BANK0 ] int 
 10888 ;; Registers used:
 10889 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 10890 ;; Tracked objects:
 10891 ;;		On entry : 0/0
 10892 ;;		On exit  : 0/0
 10893 ;;		Unchanged: 0/0
 10894 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 10895 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10896 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10897 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10898 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0
 10899 ;;Total ram usage:       19 bytes
 10900 ;; Hardware stack levels used:    1
 10901 ;; Hardware stack levels required when called:    5
 10902 ;; This function calls:
 10903 ;;		Absolute function
 10904 ;;		___lwdiv
 10905 ;;		___lwmod
 10906 ;;		___wmul
 10907 ;;		_isdigit
 10908 ;;		_putch
 10909 ;; This function is called by:
 10910 ;;		_printf
 10911 ;;		_sprintf
 10912 ;; This function uses a non-reentrant model
 10913 ;;
 10914                           
 10915                           
 10916                           ;psect for function __doprnt
 10917  009A                     __doprnt:	
 10918                           
 10919                           ;incstack = 0
 10920                           ; Regs used in __doprnt: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 10921                           ;__doprnt@pb stored from wreg
 10922  009A  0020               	movlb	0	; select bank0
 10923  009B  00C0               	movwf	__doprnt@pb
 10924  009C                     l5443:	
 10925                           ;doprnt.c: 499: signed char c;
 10926                           ;doprnt.c: 501: int width;
 10927                           ;doprnt.c: 506: signed char prec;
 10928                           ;doprnt.c: 508: unsigned char flag;
 10929                           ;doprnt.c: 523: union {
 10930                           ;doprnt.c: 524: unsigned long vd;
 10931                           ;doprnt.c: 525: double integ;
 10932                           ;doprnt.c: 526: } tmpval;
 10933                           ;doprnt.c: 528: unsigned int val;
 10934                           ;doprnt.c: 529: unsigned len;
 10935                           ;doprnt.c: 530: const char * cp;
 10936                           ;doprnt.c: 536: while(c = *f++) {
 10937                           
 10938  009C  0020               	movlb	0	; select bank0
 10939  009D  082F               	movf	__doprnt@f+1,w
 10940  009E  00B2               	movwf	??__doprnt+1
 10941  009F  082E               	movf	__doprnt@f,w
 10942  00A0  00B1               	movwf	??__doprnt
 10943  00A1  0AAE               	incf	__doprnt@f,f
 10944  00A2  1903               	skipnz
 10945  00A3  0AAF               	incf	__doprnt@f+1,f
 10946  00A4  0831               	movf	??__doprnt,w
 10947  00A5  0084               	movwf	4
 10948  00A6  0832               	movf	??__doprnt+1,w
 10949  00A7  0085               	movwf	5
 10950  00A8  0800               	movf	0,w	;code access
 10951  00A9  00B3               	movwf	??__doprnt+2
 10952  00AA  0833               	movf	??__doprnt+2,w
 10953  00AB  00BF               	movwf	__doprnt@c
 10954  00AC  083F               	movf	__doprnt@c,w
 10955  00AD  1903               	btfsc	3,2
 10956  00AE  2B84               	goto	l5445
 10957                           
 10958                           ;doprnt.c: 538: if(c != '%')
 10959  00AF  3025               	movlw	37
 10960  00B0  063F               	xorwf	__doprnt@c,w
 10961  00B1  1903               	btfsc	3,2
 10962  00B2  28DA               	goto	l5281
 10963                           
 10964                           ;doprnt.c: 540: {
 10965                           ;doprnt.c: 541: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
 10966  00B3  0A40               	incf	__doprnt@pb,w
 10967  00B4  0086               	movwf	6
 10968  00B5  0187               	clrf	7
 10969  00B6  0016               	moviw fsr1++
 10970  00B7  0401               	iorwf	1,w
 10971  00B8  1903               	btfsc	3,2
 10972  00B9  28C7               	goto	l5277
 10973  00BA  083F               	movf	__doprnt@c,w
 10974  00BB  00B1               	movwf	??__doprnt
 10975  00BC  0831               	movf	??__doprnt,w
 10976  00BD  00A2               	movwf	putch@txData
 10977  00BE  0A40               	incf	__doprnt@pb,w
 10978  00BF  0086               	movwf	6
 10979  00C0  0187               	clrf	7
 10980  00C1  3F41               	moviw [1]fsr1
 10981  00C2  008A               	movwf	10
 10982  00C3  3F40               	moviw [0]fsr1
 10983  00C4  000A               	callw
 10984  00C5  3180               	pagesel	$
 10985  00C6  289C               	goto	l5443
 10986  00C7                     l5277:	
 10987  00C7  0020               	movlb	0	; select bank0
 10988  00C8  083F               	movf	__doprnt@c,w
 10989  00C9  00B1               	movwf	??__doprnt
 10990  00CA  0840               	movf	__doprnt@pb,w
 10991  00CB  0086               	movwf	6
 10992  00CC  0187               	clrf	7
 10993  00CD  0801               	movf	1,w
 10994  00CE  0086               	movwf	6
 10995  00CF  0187               	clrf	7
 10996  00D0  0831               	movf	??__doprnt,w
 10997  00D1  0081               	movwf	1
 10998  00D2  3001               	movlw	1
 10999  00D3  00B1               	movwf	??__doprnt
 11000  00D4  0840               	movf	__doprnt@pb,w
 11001  00D5  0086               	movwf	6
 11002  00D6  0187               	clrf	7
 11003  00D7  0831               	movf	??__doprnt,w
 11004  00D8  0781               	addwf	1,f
 11005                           
 11006                           ;doprnt.c: 542: continue;
 11007  00D9  289C               	goto	l5443
 11008  00DA                     l5281:	
 11009                           
 11010                           ;doprnt.c: 543: }
 11011                           ;doprnt.c: 546: width = 0;
 11012  00DA  01BD               	clrf	__doprnt@width
 11013  00DB  01BE               	clrf	__doprnt@width+1
 11014                           
 11015                           ;doprnt.c: 548: flag = 0;
 11016  00DC  01BC               	clrf	__doprnt@flag
 11017                           
 11018                           ;doprnt.c: 551: switch(*f) {
 11019                           
 11020                           ;doprnt.c: 550: for(;;) {
 11021  00DD  28E3               	goto	l5287
 11022  00DE                     l684:	
 11023                           ;doprnt.c: 579: case '0':
 11024                           
 11025                           
 11026                           ;doprnt.c: 580: flag |= 0x04;
 11027  00DE  153C               	bsf	__doprnt@flag,2
 11028                           
 11029                           ;doprnt.c: 581: f++;
 11030  00DF  3001               	movlw	1
 11031  00E0  07AE               	addwf	__doprnt@f,f
 11032  00E1  3000               	movlw	0
 11033  00E2  3DAF               	addwfc	__doprnt@f+1,f
 11034  00E3                     l5287:	
 11035                           ;doprnt.c: 584: }
 11036                           
 11037                           ;doprnt.c: 582: continue;
 11038                           
 11039  00E3  082E               	movf	__doprnt@f,w
 11040  00E4  0084               	movwf	4
 11041  00E5  082F               	movf	__doprnt@f+1,w
 11042  00E6  0085               	movwf	5
 11043  00E7  0800               	movf	0,w	;code access
 11044                           
 11045                           ; Switch size 1, requested type "space"
 11046                           ; Number of cases is 1, Range of values is 48 to 48
 11047                           ; switch strategies available:
 11048                           ; Name         Instructions Cycles
 11049                           ; simple_byte            4     3 (average)
 11050                           ; direct_byte           11     9 (fixed)
 11051                           ; jumptable            263     9 (fixed)
 11052                           ;	Chosen strategy is simple_byte
 11053  00E8  3A30               	xorlw	48	; case 48
 11054  00E9  1903               	skipnz
 11055  00EA  28DE               	goto	l684
 11056  00EB  28EC               	goto	l5289
 11057  00EC                     l5289:	
 11058                           ;doprnt.c: 586: }
 11059                           
 11060                           ;doprnt.c: 585: break;
 11061                           
 11062                           
 11063                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
 11064  00EC  082E               	movf	__doprnt@f,w
 11065  00ED  0084               	movwf	4
 11066  00EE  082F               	movf	__doprnt@f+1,w
 11067  00EF  0085               	movwf	5
 11068  00F0  0800               	movf	0,w	;code access
 11069  00F1  319A  227D  3180   	fcall	_isdigit
 11070  00F4  1C03               	btfss	3,0
 11071  00F5  29D9               	goto	l5349
 11072                           
 11073                           ;doprnt.c: 598: width = 0;
 11074  00F6  0020               	movlb	0	; select bank0
 11075  00F7  01BD               	clrf	__doprnt@width
 11076  00F8  01BE               	clrf	__doprnt@width+1
 11077  00F9                     l5293:	
 11078                           ;doprnt.c: 599: do {
 11079                           
 11080                           
 11081                           ;doprnt.c: 600: width *= 10;
 11082  00F9  300A               	movlw	10
 11083  00FA  0020               	movlb	0	; select bank0
 11084  00FB  00A0               	movwf	___wmul@multiplier
 11085  00FC  3000               	movlw	0
 11086  00FD  00A1               	movwf	___wmul@multiplier+1
 11087  00FE  083E               	movf	__doprnt@width+1,w
 11088  00FF  00A3               	movwf	___wmul@multiplicand+1
 11089  0100  083D               	movf	__doprnt@width,w
 11090  0101  00A2               	movwf	___wmul@multiplicand
 11091  0102  319B  238B  3180   	fcall	___wmul
 11092  0105  0020               	movlb	0	; select bank0
 11093  0106  0821               	movf	?___wmul+1,w
 11094  0107  00BE               	movwf	__doprnt@width+1
 11095  0108  0820               	movf	?___wmul,w
 11096  0109  00BD               	movwf	__doprnt@width
 11097                           
 11098                           ;doprnt.c: 601: width += *f++ - '0';
 11099  010A  082E               	movf	__doprnt@f,w
 11100  010B  0084               	movwf	4
 11101  010C  082F               	movf	__doprnt@f+1,w
 11102  010D  0085               	movwf	5
 11103  010E  0800               	movf	0,w	;code access
 11104  010F  3ED0               	addlw	208
 11105  0110  00B1               	movwf	??__doprnt
 11106  0111  30FF               	movlw	255
 11107  0112  1803               	skipnc
 11108  0113  3000               	movlw	0
 11109  0114  00B2               	movwf	??__doprnt+1
 11110  0115  0831               	movf	??__doprnt,w
 11111  0116  07BD               	addwf	__doprnt@width,f
 11112  0117  0832               	movf	??__doprnt+1,w
 11113  0118  3DBE               	addwfc	__doprnt@width+1,f
 11114  0119  3001               	movlw	1
 11115  011A  07AE               	addwf	__doprnt@f,f
 11116  011B  3000               	movlw	0
 11117  011C  3DAF               	addwfc	__doprnt@f+1,f
 11118                           
 11119                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
 11120  011D  082E               	movf	__doprnt@f,w
 11121  011E  0084               	movwf	4
 11122  011F  082F               	movf	__doprnt@f+1,w
 11123  0120  0085               	movwf	5
 11124  0121  0800               	movf	0,w	;code access
 11125  0122  319A  227D  3180   	fcall	_isdigit
 11126  0125  1C03               	btfss	3,0
 11127  0126  29D9               	goto	l5349
 11128  0127  28F9               	goto	l5293
 11129  0128                     l5301:	
 11130                           ;doprnt.c: 728: case 's':
 11131                           
 11132                           ;doprnt.c: 698: case 'i':
 11133                           ;doprnt.c: 699: break;
 11134                           
 11135                           ;doprnt.c: 697: case 'd':
 11136                           
 11137                           ;doprnt.c: 638: goto alldone;
 11138                           
 11139                           ;doprnt.c: 637: case 0:
 11140                           
 11141                           ;doprnt.c: 608: }
 11142                           ;doprnt.c: 635: switch(c = *f++) {
 11143                           
 11144                           
 11145                           ;doprnt.c: 734: cp = (*(const char * *)__va_arg((*(const char * **)ap), (const char *)0)
      +                          );
 11146  0128  0020               	movlb	0	; select bank0
 11147  0129  0830               	movf	__doprnt@ap,w
 11148  012A  0086               	movwf	6
 11149  012B  0187               	clrf	7
 11150  012C  0801               	movf	1,w
 11151  012D  0084               	movwf	4
 11152  012E  0185               	clrf	5
 11153  012F  3002               	movlw	2
 11154  0130  0781               	addwf	1,f
 11155  0131  3F00               	moviw [0]fsr0
 11156  0132  00BA               	movwf	__doprnt@cp
 11157  0133  3F01               	moviw [1]fsr0
 11158  0134  00BB               	movwf	__doprnt@cp+1
 11159                           
 11160                           ;doprnt.c: 740: if(!cp)
 11161  0135  083A               	movf	__doprnt@cp,w
 11162  0136  043B               	iorwf	__doprnt@cp+1,w
 11163  0137  1D03               	btfss	3,2
 11164  0138  293D               	goto	l5307
 11165                           
 11166                           ;doprnt.c: 741: cp = "(null)";
 11167  0139  309A               	movlw	low (STR_41| (0+32768))
 11168  013A  00BA               	movwf	__doprnt@cp
 11169  013B  3091               	movlw	high (STR_41| (0+32768))
 11170  013C  00BB               	movwf	__doprnt@cp+1
 11171  013D                     l5307:	
 11172                           
 11173                           ;doprnt.c: 745: len = 0;
 11174  013D  01B8               	clrf	__doprnt@len
 11175  013E  01B9               	clrf	__doprnt@len+1
 11176  013F                     l5311:	
 11177                           ;doprnt.c: 746: while(cp[len])
 11178                           
 11179  013F  083A               	movf	__doprnt@cp,w
 11180  0140  0738               	addwf	__doprnt@len,w
 11181  0141  0084               	movwf	4
 11182  0142  083B               	movf	__doprnt@cp+1,w
 11183  0143  3D39               	addwfc	__doprnt@len+1,w
 11184  0144  0085               	movwf	5
 11185  0145  0012               	moviw fsr0++
 11186  0146  1903               	btfsc	3,2
 11187  0147  294D               	goto	l5313
 11188                           
 11189                           ;doprnt.c: 747: len++;
 11190  0148  3001               	movlw	1
 11191  0149  07B8               	addwf	__doprnt@len,f
 11192  014A  3000               	movlw	0
 11193  014B  3DB9               	addwfc	__doprnt@len+1,f
 11194  014C  293F               	goto	l5311
 11195  014D                     l5313:	
 11196                           ;doprnt.c: 750: dostring:
 11197                           
 11198                           
 11199                           ;doprnt.c: 757: if(width > len)
 11200  014D  083E               	movf	__doprnt@width+1,w
 11201  014E  0239               	subwf	__doprnt@len+1,w
 11202  014F  1D03               	skipz
 11203  0150  2953               	goto	u5915
 11204  0151  083D               	movf	__doprnt@width,w
 11205  0152  0238               	subwf	__doprnt@len,w
 11206  0153                     u5915:	
 11207  0153  1803               	skipnc
 11208  0154  295A               	goto	l5317
 11209                           
 11210                           ;doprnt.c: 758: width -= len;
 11211  0155  0838               	movf	__doprnt@len,w
 11212  0156  02BD               	subwf	__doprnt@width,f
 11213  0157  0839               	movf	__doprnt@len+1,w
 11214  0158  3BBE               	subwfb	__doprnt@width+1,f
 11215  0159  295C               	goto	l5327
 11216  015A                     l5317:	
 11217                           
 11218                           ;doprnt.c: 759: else
 11219                           ;doprnt.c: 760: width = 0;
 11220  015A  01BD               	clrf	__doprnt@width
 11221  015B  01BE               	clrf	__doprnt@width+1
 11222  015C                     l5327:	
 11223                           ;doprnt.c: 764: while(width--)
 11224                           
 11225  015C  30FF               	movlw	255
 11226  015D  0020               	movlb	0	; select bank0
 11227  015E  07BD               	addwf	__doprnt@width,f
 11228  015F  30FF               	movlw	255
 11229  0160  3DBE               	addwfc	__doprnt@width+1,f
 11230  0161  0A3D               	incf	__doprnt@width,w
 11231  0162  1903               	btfsc	3,2
 11232  0163  0A3E               	incf	__doprnt@width+1,w
 11233  0164  1903               	btfsc	3,2
 11234  0165  29C3               	goto	l5341
 11235                           
 11236                           ;doprnt.c: 765: if(pb->func) (pb->func(' ')); else ((*pb->ptr++ = ' '));
 11237  0166  0A40               	incf	__doprnt@pb,w
 11238  0167  0086               	movwf	6
 11239  0168  0187               	clrf	7
 11240  0169  0016               	moviw fsr1++
 11241  016A  0401               	iorwf	1,w
 11242  016B  1903               	btfsc	3,2
 11243  016C  297A               	goto	l5323
 11244  016D  3020               	movlw	32
 11245  016E  00B1               	movwf	??__doprnt
 11246  016F  0831               	movf	??__doprnt,w
 11247  0170  00A2               	movwf	putch@txData
 11248  0171  0A40               	incf	__doprnt@pb,w
 11249  0172  0086               	movwf	6
 11250  0173  0187               	clrf	7
 11251  0174  3F41               	moviw [1]fsr1
 11252  0175  008A               	movwf	10
 11253  0176  3F40               	moviw [0]fsr1
 11254  0177  000A               	callw
 11255  0178  3180               	pagesel	$
 11256  0179  295C               	goto	l5327
 11257  017A                     l5323:	
 11258  017A  3020               	movlw	32
 11259  017B  0020               	movlb	0	; select bank0
 11260  017C  00B1               	movwf	??__doprnt
 11261  017D  0840               	movf	__doprnt@pb,w
 11262  017E  0086               	movwf	6
 11263  017F  0187               	clrf	7
 11264  0180  0801               	movf	1,w
 11265  0181  0086               	movwf	6
 11266  0182  0187               	clrf	7
 11267  0183  0831               	movf	??__doprnt,w
 11268  0184  0081               	movwf	1
 11269  0185  3001               	movlw	1
 11270  0186  00B1               	movwf	??__doprnt
 11271  0187  0840               	movf	__doprnt@pb,w
 11272  0188  0086               	movwf	6
 11273  0189  0187               	clrf	7
 11274  018A  0831               	movf	??__doprnt,w
 11275  018B  0781               	addwf	1,f
 11276  018C  295C               	goto	l5327
 11277  018D                     l5329:	
 11278                           ;doprnt.c: 767: while(len--)
 11279                           
 11280                           
 11281                           ;doprnt.c: 768: if(pb->func) (pb->func(*cp++)); else ((*pb->ptr++ = *cp++));
 11282  018D  0A40               	incf	__doprnt@pb,w
 11283  018E  0086               	movwf	6
 11284  018F  0187               	clrf	7
 11285  0190  0016               	moviw fsr1++
 11286  0191  0401               	iorwf	1,w
 11287  0192  1903               	btfsc	3,2
 11288  0193  29AA               	goto	l5335
 11289  0194  083A               	movf	__doprnt@cp,w
 11290  0195  0084               	movwf	4
 11291  0196  083B               	movf	__doprnt@cp+1,w
 11292  0197  0085               	movwf	5
 11293  0198  0800               	movf	0,w	;code access
 11294  0199  00B1               	movwf	??__doprnt
 11295  019A  0831               	movf	??__doprnt,w
 11296  019B  00A2               	movwf	putch@txData
 11297  019C  0A40               	incf	__doprnt@pb,w
 11298  019D  0086               	movwf	6
 11299  019E  0187               	clrf	7
 11300  019F  3F41               	moviw [1]fsr1
 11301  01A0  008A               	movwf	10
 11302  01A1  3F40               	moviw [0]fsr1
 11303  01A2  000A               	callw
 11304  01A3  3180               	pagesel	$
 11305  01A4  3001               	movlw	1
 11306  01A5  0020               	movlb	0	; select bank0
 11307  01A6  07BA               	addwf	__doprnt@cp,f
 11308  01A7  3000               	movlw	0
 11309  01A8  3DBB               	addwfc	__doprnt@cp+1,f
 11310  01A9  29C3               	goto	l5341
 11311  01AA                     l5335:	
 11312  01AA  083A               	movf	__doprnt@cp,w
 11313  01AB  0084               	movwf	4
 11314  01AC  083B               	movf	__doprnt@cp+1,w
 11315  01AD  0085               	movwf	5
 11316  01AE  0800               	movf	0,w	;code access
 11317  01AF  00B1               	movwf	??__doprnt
 11318  01B0  0840               	movf	__doprnt@pb,w
 11319  01B1  0086               	movwf	6
 11320  01B2  0187               	clrf	7
 11321  01B3  0801               	movf	1,w
 11322  01B4  0086               	movwf	6
 11323  01B5  0187               	clrf	7
 11324  01B6  0831               	movf	??__doprnt,w
 11325  01B7  0081               	movwf	1
 11326  01B8  3001               	movlw	1
 11327  01B9  07BA               	addwf	__doprnt@cp,f
 11328  01BA  3000               	movlw	0
 11329  01BB  3DBB               	addwfc	__doprnt@cp+1,f
 11330  01BC  3001               	movlw	1
 11331  01BD  00B1               	movwf	??__doprnt
 11332  01BE  0840               	movf	__doprnt@pb,w
 11333  01BF  0086               	movwf	6
 11334  01C0  0187               	clrf	7
 11335  01C1  0831               	movf	??__doprnt,w
 11336  01C2  0781               	addwf	1,f
 11337  01C3                     l5341:	
 11338  01C3  3001               	movlw	1
 11339  01C4  02B8               	subwf	__doprnt@len,f
 11340  01C5  3000               	movlw	0
 11341  01C6  3BB9               	subwfb	__doprnt@len+1,f
 11342  01C7  0A38               	incf	__doprnt@len,w
 11343  01C8  1D03               	skipz
 11344  01C9  298D               	goto	l5329
 11345  01CA  0A39               	incf	__doprnt@len+1,w
 11346  01CB  1903               	btfsc	3,2
 11347  01CC  289C               	goto	l5443
 11348  01CD  298D               	goto	l5329
 11349  01CE                     l5343:	
 11350                           ;doprnt.c: 802: default:
 11351                           
 11352                           ;doprnt.c: 774: continue;
 11353                           
 11354                           
 11355                           ;doprnt.c: 805: cp = (char *)&c;
 11356  01CE  303F               	movlw	low __doprnt@c
 11357  01CF  00BA               	movwf	__doprnt@cp
 11358  01D0  3000               	movlw	high __doprnt@c
 11359  01D1  00BB               	movwf	__doprnt@cp+1
 11360                           
 11361                           ;doprnt.c: 806: len = 1;
 11362  01D2  3001               	movlw	1
 11363  01D3  00B8               	movwf	__doprnt@len
 11364  01D4  3000               	movlw	0
 11365  01D5  00B9               	movwf	__doprnt@len+1
 11366                           
 11367                           ;doprnt.c: 807: goto dostring;
 11368  01D6  294D               	goto	l5313
 11369  01D7                     l716:	
 11370                           ;doprnt.c: 817: case 'u':
 11371                           
 11372                           
 11373                           ;doprnt.c: 818: flag |= 0x40;
 11374  01D7  173C               	bsf	__doprnt@flag,6
 11375                           
 11376                           ;doprnt.c: 822: }
 11377                           
 11378                           ;doprnt.c: 819: break;
 11379  01D8  29F7               	goto	l696
 11380  01D9                     l5349:	
 11381  01D9  0020               	movlb	0	; select bank0
 11382  01DA  082F               	movf	__doprnt@f+1,w
 11383  01DB  00B2               	movwf	??__doprnt+1
 11384  01DC  082E               	movf	__doprnt@f,w
 11385  01DD  00B1               	movwf	??__doprnt
 11386  01DE  0AAE               	incf	__doprnt@f,f
 11387  01DF  1903               	skipnz
 11388  01E0  0AAF               	incf	__doprnt@f+1,f
 11389  01E1  0831               	movf	??__doprnt,w
 11390  01E2  0084               	movwf	4
 11391  01E3  0832               	movf	??__doprnt+1,w
 11392  01E4  0085               	movwf	5
 11393  01E5  0800               	movf	0,w	;code access
 11394  01E6  00BF               	movwf	__doprnt@c
 11395                           
 11396                           ; Switch size 1, requested type "space"
 11397                           ; Number of cases is 5, Range of values is 0 to 117
 11398                           ; switch strategies available:
 11399                           ; Name         Instructions Cycles
 11400                           ; simple_byte           16     9 (average)
 11401                           ; direct_byte          242     6 (fixed)
 11402                           ; jumptable            260     6 (fixed)
 11403                           ;	Chosen strategy is simple_byte
 11404  01E7  3A00               	xorlw	0	; case 0
 11405  01E8  1903               	skipnz
 11406  01E9  2B84               	goto	l5445
 11407  01EA  3A64               	xorlw	100	; case 100
 11408  01EB  1903               	skipnz
 11409  01EC  29F7               	goto	l696
 11410  01ED  3A0D               	xorlw	13	; case 105
 11411  01EE  1903               	skipnz
 11412  01EF  29F7               	goto	l696
 11413  01F0  3A1A               	xorlw	26	; case 115
 11414  01F1  1903               	skipnz
 11415  01F2  2928               	goto	l5301
 11416  01F3  3A06               	xorlw	6	; case 117
 11417  01F4  1903               	skipnz
 11418  01F5  29D7               	goto	l716
 11419  01F6  29CE               	goto	l5343
 11420  01F7                     l696:	
 11421                           
 11422                           ;doprnt.c: 1251: if((flag & 0x40) == 0x00)
 11423  01F7  0020               	movlb	0	; select bank0
 11424  01F8  1B3C               	btfsc	__doprnt@flag,6
 11425  01F9  2A12               	goto	l5359
 11426                           
 11427                           ;doprnt.c: 1253: {
 11428                           ;doprnt.c: 1259: val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
 11429  01FA  0830               	movf	__doprnt@ap,w
 11430  01FB  0086               	movwf	6
 11431  01FC  0187               	clrf	7
 11432  01FD  0801               	movf	1,w
 11433  01FE  0084               	movwf	4
 11434  01FF  0185               	clrf	5
 11435  0200  3002               	movlw	2
 11436  0201  0781               	addwf	1,f
 11437  0202  3F00               	moviw [0]fsr0
 11438  0203  00B6               	movwf	__doprnt@val
 11439  0204  3F01               	moviw [1]fsr0
 11440  0205  00B7               	movwf	__doprnt@val+1
 11441                           
 11442                           ;doprnt.c: 1261: if((int)val < 0) {
 11443  0206  1FB7               	btfss	__doprnt@val+1,7
 11444  0207  2A1E               	goto	l5361
 11445                           
 11446                           ;doprnt.c: 1262: flag |= 0x03;
 11447  0208  3003               	movlw	3
 11448  0209  00B1               	movwf	??__doprnt
 11449  020A  0831               	movf	??__doprnt,w
 11450  020B  04BC               	iorwf	__doprnt@flag,f
 11451                           
 11452                           ;doprnt.c: 1263: val = -val;
 11453  020C  09B6               	comf	__doprnt@val,f
 11454  020D  09B7               	comf	__doprnt@val+1,f
 11455  020E  0AB6               	incf	__doprnt@val,f
 11456  020F  1903               	skipnz
 11457  0210  0AB7               	incf	__doprnt@val+1,f
 11458                           
 11459                           ;doprnt.c: 1264: }
 11460                           ;doprnt.c: 1266: }
 11461  0211  2A1E               	goto	l5361
 11462  0212                     l5359:	
 11463                           
 11464                           ;doprnt.c: 1268: else
 11465                           ;doprnt.c: 1273: {
 11466                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
 11467  0212  0830               	movf	__doprnt@ap,w
 11468  0213  0086               	movwf	6
 11469  0214  0187               	clrf	7
 11470  0215  0801               	movf	1,w
 11471  0216  0084               	movwf	4
 11472  0217  0185               	clrf	5
 11473  0218  3002               	movlw	2
 11474  0219  0781               	addwf	1,f
 11475  021A  3F00               	moviw [0]fsr0
 11476  021B  00B6               	movwf	__doprnt@val
 11477  021C  3F01               	moviw [1]fsr0
 11478  021D  00B7               	movwf	__doprnt@val+1
 11479  021E                     l5361:	
 11480                           
 11481                           ;doprnt.c: 1287: }
 11482                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 11483  021E  01BF               	clrf	__doprnt@c
 11484  021F  0ABF               	incf	__doprnt@c,f
 11485  0220  3005               	movlw	5
 11486  0221  063F               	xorwf	__doprnt@c,w
 11487  0222  1903               	btfsc	3,2
 11488  0223  2A43               	goto	l5373
 11489  0224                     l5367:	
 11490                           
 11491                           ;doprnt.c: 1306: if(val < dpowers[c])
 11492  0224  083F               	movf	__doprnt@c,w
 11493  0225  00B1               	movwf	??__doprnt
 11494  0226  01B2               	clrf	??__doprnt+1
 11495  0227  35B1               	lslf	??__doprnt,f
 11496  0228  0DB2               	rlf	??__doprnt+1,f
 11497  0229  3000               	movlw	low (_dpowers| (0+32768))
 11498  022A  0731               	addwf	??__doprnt,w
 11499  022B  0084               	movwf	4
 11500  022C  3090               	movlw	high (_dpowers| (0+32768))
 11501  022D  3D32               	addwfc	??__doprnt+1,w
 11502  022E  0085               	movwf	5
 11503  022F  3F00               	moviw [0]fsr0
 11504  0230  00B3               	movwf	??__doprnt+2
 11505  0231  3F01               	moviw [1]fsr0
 11506  0232  00B4               	movwf	??__doprnt+3
 11507  0233  0834               	movf	??__doprnt+3,w
 11508  0234  0237               	subwf	__doprnt@val+1,w
 11509  0235  1D03               	skipz
 11510  0236  2A39               	goto	u5995
 11511  0237  0833               	movf	??__doprnt+2,w
 11512  0238  0236               	subwf	__doprnt@val,w
 11513  0239                     u5995:	
 11514  0239  1C03               	btfss	3,0
 11515  023A  2A43               	goto	l5373
 11516                           
 11517                           ;doprnt.c: 1307: break;
 11518  023B  3001               	movlw	1
 11519  023C  00B1               	movwf	??__doprnt
 11520  023D  0831               	movf	??__doprnt,w
 11521  023E  07BF               	addwf	__doprnt@c,f
 11522  023F  3005               	movlw	5
 11523  0240  063F               	xorwf	__doprnt@c,w
 11524  0241  1D03               	btfss	3,2
 11525  0242  2A24               	goto	l5367
 11526  0243                     l5373:	
 11527                           
 11528                           ;doprnt.c: 1345: if(width && flag & 0x03)
 11529  0243  083D               	movf	__doprnt@width,w
 11530  0244  043E               	iorwf	__doprnt@width+1,w
 11531  0245  1903               	btfsc	3,2
 11532  0246  2A4F               	goto	l723
 11533  0247  083C               	movf	__doprnt@flag,w
 11534  0248  3903               	andlw	3
 11535  0249  1903               	btfsc	3,2
 11536  024A  2A4F               	goto	l723
 11537                           
 11538                           ;doprnt.c: 1346: width--;
 11539  024B  30FF               	movlw	255
 11540  024C  07BD               	addwf	__doprnt@width,f
 11541  024D  30FF               	movlw	255
 11542  024E  3DBE               	addwfc	__doprnt@width+1,f
 11543  024F                     l723:	
 11544                           
 11545                           ;doprnt.c: 1381: if(width > c)
 11546  024F  083F               	movf	__doprnt@c,w
 11547  0250  00B1               	movwf	??__doprnt
 11548  0251  01B2               	clrf	??__doprnt+1
 11549  0252  1BB1               	btfsc	??__doprnt,7
 11550  0253  03B2               	decf	??__doprnt+1,f
 11551  0254  0832               	movf	??__doprnt+1,w
 11552  0255  3A80               	xorlw	128
 11553  0256  00B3               	movwf	??__doprnt+2
 11554  0257  083E               	movf	__doprnt@width+1,w
 11555  0258  3A80               	xorlw	128
 11556  0259  0233               	subwf	??__doprnt+2,w
 11557  025A  1D03               	skipz
 11558  025B  2A5E               	goto	u6035
 11559  025C  083D               	movf	__doprnt@width,w
 11560  025D  0231               	subwf	??__doprnt,w
 11561  025E                     u6035:	
 11562  025E  1803               	skipnc
 11563  025F  2A6B               	goto	l5381
 11564                           
 11565                           ;doprnt.c: 1382: width -= c;
 11566  0260  0020               	movlb	0	; select bank0
 11567  0261  083F               	movf	__doprnt@c,w
 11568  0262  00B1               	movwf	??__doprnt
 11569  0263  01B2               	clrf	??__doprnt+1
 11570  0264  1BB1               	btfsc	??__doprnt,7
 11571  0265  03B2               	decf	??__doprnt+1,f
 11572  0266  0831               	movf	??__doprnt,w
 11573  0267  02BD               	subwf	__doprnt@width,f
 11574  0268  0832               	movf	??__doprnt+1,w
 11575  0269  3BBE               	subwfb	__doprnt@width+1,f
 11576  026A  2A6E               	goto	l5383
 11577  026B                     l5381:	
 11578                           
 11579                           ;doprnt.c: 1383: else
 11580                           ;doprnt.c: 1384: width = 0;
 11581  026B  0020               	movlb	0	; select bank0
 11582  026C  01BD               	clrf	__doprnt@width
 11583  026D  01BE               	clrf	__doprnt@width+1
 11584  026E                     l5383:	
 11585                           
 11586                           ;doprnt.c: 1387: if(flag & 0x04) {
 11587  026E  1D3C               	btfss	__doprnt@flag,2
 11588  026F  2ACB               	goto	l5407
 11589                           
 11590                           ;doprnt.c: 1392: if(flag & 0x03)
 11591  0270  083C               	movf	__doprnt@flag,w
 11592  0271  3903               	andlw	3
 11593  0272  1903               	btfsc	3,2
 11594  0273  2A9A               	goto	l5395
 11595                           
 11596                           ;doprnt.c: 1393: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
 11597  0274  0A40               	incf	__doprnt@pb,w
 11598  0275  0086               	movwf	6
 11599  0276  0187               	clrf	7
 11600  0277  0016               	moviw fsr1++
 11601  0278  0401               	iorwf	1,w
 11602  0279  1903               	btfsc	3,2
 11603  027A  2A88               	goto	l5391
 11604  027B  302D               	movlw	45
 11605  027C  00B1               	movwf	??__doprnt
 11606  027D  0831               	movf	??__doprnt,w
 11607  027E  00A2               	movwf	putch@txData
 11608  027F  0A40               	incf	__doprnt@pb,w
 11609  0280  0086               	movwf	6
 11610  0281  0187               	clrf	7
 11611  0282  3F41               	moviw [1]fsr1
 11612  0283  008A               	movwf	10
 11613  0284  3F40               	moviw [0]fsr1
 11614  0285  000A               	callw
 11615  0286  3180               	pagesel	$
 11616  0287  2A9A               	goto	l5395
 11617  0288                     l5391:	
 11618  0288  302D               	movlw	45
 11619  0289  0020               	movlb	0	; select bank0
 11620  028A  00B1               	movwf	??__doprnt
 11621  028B  0840               	movf	__doprnt@pb,w
 11622  028C  0086               	movwf	6
 11623  028D  0187               	clrf	7
 11624  028E  0801               	movf	1,w
 11625  028F  0086               	movwf	6
 11626  0290  0187               	clrf	7
 11627  0291  0831               	movf	??__doprnt,w
 11628  0292  0081               	movwf	1
 11629  0293  3001               	movlw	1
 11630  0294  00B1               	movwf	??__doprnt
 11631  0295  0840               	movf	__doprnt@pb,w
 11632  0296  0086               	movwf	6
 11633  0297  0187               	clrf	7
 11634  0298  0831               	movf	??__doprnt,w
 11635  0299  0781               	addwf	1,f
 11636  029A                     l5395:	
 11637                           
 11638                           ;doprnt.c: 1415: if(width)
 11639  029A  0020               	movlb	0	; select bank0
 11640  029B                     L12:	
 11641  029B  083D               	movf	__doprnt@width,w
 11642  029C  043E               	iorwf	__doprnt@width+1,w
 11643  029D  1903               	btfsc	3,2
 11644  029E  2B28               	goto	l5429
 11645                           
 11646                           ;doprnt.c: 1417: if(pb->func) (pb->func('0')); else ((*pb->ptr++ = '0'));
 11647                           
 11648                           ;doprnt.c: 1416: do
 11649  029F  0A40               	incf	__doprnt@pb,w
 11650  02A0  0086               	movwf	6
 11651  02A1  0187               	clrf	7
 11652  02A2  0016               	moviw fsr1++
 11653  02A3  0401               	iorwf	1,w
 11654  02A4  1903               	btfsc	3,2
 11655  02A5  2AB3               	goto	l5401
 11656  02A6  3030               	movlw	48
 11657  02A7  00B1               	movwf	??__doprnt
 11658  02A8  0831               	movf	??__doprnt,w
 11659  02A9  00A2               	movwf	putch@txData
 11660  02AA  0A40               	incf	__doprnt@pb,w
 11661  02AB  0086               	movwf	6
 11662  02AC  0187               	clrf	7
 11663  02AD  3F41               	moviw [1]fsr1
 11664  02AE  008A               	movwf	10
 11665  02AF  3F40               	moviw [0]fsr1
 11666  02B0  000A               	callw
 11667  02B1  3180               	pagesel	$
 11668  02B2  2AC5               	goto	l5405
 11669  02B3                     l5401:	
 11670  02B3  3030               	movlw	48
 11671  02B4  0020               	movlb	0	; select bank0
 11672  02B5  00B1               	movwf	??__doprnt
 11673  02B6  0840               	movf	__doprnt@pb,w
 11674  02B7  0086               	movwf	6
 11675  02B8  0187               	clrf	7
 11676  02B9  0801               	movf	1,w
 11677  02BA  0086               	movwf	6
 11678  02BB  0187               	clrf	7
 11679  02BC  0831               	movf	??__doprnt,w
 11680  02BD  0081               	movwf	1
 11681  02BE  3001               	movlw	1
 11682  02BF  00B1               	movwf	??__doprnt
 11683  02C0  0840               	movf	__doprnt@pb,w
 11684  02C1  0086               	movwf	6
 11685  02C2  0187               	clrf	7
 11686  02C3  0831               	movf	??__doprnt,w
 11687  02C4  0781               	addwf	1,f
 11688  02C5                     l5405:	
 11689                           
 11690                           ;doprnt.c: 1418: while(--width);
 11691  02C5  30FF               	movlw	255
 11692  02C6  0020               	movlb	0	; select bank0
 11693  02C7  07BD               	addwf	__doprnt@width,f
 11694  02C8  30FF               	movlw	255
 11695  02C9  3DBE               	addwfc	__doprnt@width+1,f
 11696  02CA  2A9B               	goto	L12
 11697  02CB                     l5407:	
 11698                           ;doprnt.c: 1420: } else
 11699                           
 11700                           
 11701                           ;doprnt.c: 1422: {
 11702                           ;doprnt.c: 1424: if(width
 11703                           ;doprnt.c: 1428: )
 11704  02CB  083D               	movf	__doprnt@width,w
 11705  02CC  043E               	iorwf	__doprnt@width+1,w
 11706  02CD  1903               	btfsc	3,2
 11707  02CE  2AFE               	goto	l5419
 11708  02CF                     l5409:	
 11709                           ;doprnt.c: 1429: do
 11710                           
 11711                           
 11712                           ;doprnt.c: 1430: if(pb->func) (pb->func(' ')); else ((*pb->ptr++ = ' '));
 11713  02CF  0A40               	incf	__doprnt@pb,w
 11714  02D0  0086               	movwf	6
 11715  02D1  0187               	clrf	7
 11716  02D2  0016               	moviw fsr1++
 11717  02D3  0401               	iorwf	1,w
 11718  02D4  1903               	btfsc	3,2
 11719  02D5  2AE3               	goto	l5413
 11720  02D6  3020               	movlw	32
 11721  02D7  00B1               	movwf	??__doprnt
 11722  02D8  0831               	movf	??__doprnt,w
 11723  02D9  00A2               	movwf	putch@txData
 11724  02DA  0A40               	incf	__doprnt@pb,w
 11725  02DB  0086               	movwf	6
 11726  02DC  0187               	clrf	7
 11727  02DD  3F41               	moviw [1]fsr1
 11728  02DE  008A               	movwf	10
 11729  02DF  3F40               	moviw [0]fsr1
 11730  02E0  000A               	callw
 11731  02E1  3180               	pagesel	$
 11732  02E2  2AF5               	goto	l5417
 11733  02E3                     l5413:	
 11734  02E3  3020               	movlw	32
 11735  02E4  0020               	movlb	0	; select bank0
 11736  02E5  00B1               	movwf	??__doprnt
 11737  02E6  0840               	movf	__doprnt@pb,w
 11738  02E7  0086               	movwf	6
 11739  02E8  0187               	clrf	7
 11740  02E9  0801               	movf	1,w
 11741  02EA  0086               	movwf	6
 11742  02EB  0187               	clrf	7
 11743  02EC  0831               	movf	??__doprnt,w
 11744  02ED  0081               	movwf	1
 11745  02EE  3001               	movlw	1
 11746  02EF  00B1               	movwf	??__doprnt
 11747  02F0  0840               	movf	__doprnt@pb,w
 11748  02F1  0086               	movwf	6
 11749  02F2  0187               	clrf	7
 11750  02F3  0831               	movf	??__doprnt,w
 11751  02F4  0781               	addwf	1,f
 11752  02F5                     l5417:	
 11753                           
 11754                           ;doprnt.c: 1431: while(--width);
 11755  02F5  30FF               	movlw	255
 11756  02F6  0020               	movlb	0	; select bank0
 11757  02F7  07BD               	addwf	__doprnt@width,f
 11758  02F8  30FF               	movlw	255
 11759  02F9  3DBE               	addwfc	__doprnt@width+1,f
 11760  02FA  083D               	movf	__doprnt@width,w
 11761  02FB  043E               	iorwf	__doprnt@width+1,w
 11762  02FC  1D03               	btfss	3,2
 11763  02FD  2ACF               	goto	l5409
 11764  02FE                     l5419:	
 11765                           
 11766                           ;doprnt.c: 1438: if(flag & 0x03)
 11767  02FE  083C               	movf	__doprnt@flag,w
 11768  02FF  3903               	andlw	3
 11769  0300  1903               	btfsc	3,2
 11770  0301  2B28               	goto	l5429
 11771                           
 11772                           ;doprnt.c: 1439: if(pb->func) (pb->func('-')); else ((*pb->ptr++ = '-'));
 11773  0302  0A40               	incf	__doprnt@pb,w
 11774  0303  0086               	movwf	6
 11775  0304  0187               	clrf	7
 11776  0305  0016               	moviw fsr1++
 11777  0306  0401               	iorwf	1,w
 11778  0307  1903               	btfsc	3,2
 11779  0308  2B16               	goto	l5425
 11780  0309  302D               	movlw	45
 11781  030A  00B1               	movwf	??__doprnt
 11782  030B  0831               	movf	??__doprnt,w
 11783  030C  00A2               	movwf	putch@txData
 11784  030D  0A40               	incf	__doprnt@pb,w
 11785  030E  0086               	movwf	6
 11786  030F  0187               	clrf	7
 11787  0310  3F41               	moviw [1]fsr1
 11788  0311  008A               	movwf	10
 11789  0312  3F40               	moviw [0]fsr1
 11790  0313  000A               	callw
 11791  0314  3180               	pagesel	$
 11792  0315  2B28               	goto	l5429
 11793  0316                     l5425:	
 11794  0316  302D               	movlw	45
 11795  0317  0020               	movlb	0	; select bank0
 11796  0318  00B1               	movwf	??__doprnt
 11797  0319  0840               	movf	__doprnt@pb,w
 11798  031A  0086               	movwf	6
 11799  031B  0187               	clrf	7
 11800  031C  0801               	movf	1,w
 11801  031D  0086               	movwf	6
 11802  031E  0187               	clrf	7
 11803  031F  0831               	movf	??__doprnt,w
 11804  0320  0081               	movwf	1
 11805  0321  3001               	movlw	1
 11806  0322  00B1               	movwf	??__doprnt
 11807  0323  0840               	movf	__doprnt@pb,w
 11808  0324  0086               	movwf	6
 11809  0325  0187               	clrf	7
 11810  0326  0831               	movf	??__doprnt,w
 11811  0327  0781               	addwf	1,f
 11812  0328                     l5429:	
 11813                           
 11814                           ;doprnt.c: 1469: }
 11815                           ;doprnt.c: 1472: prec = c;
 11816  0328  0020               	movlb	0	; select bank0
 11817  0329  083F               	movf	__doprnt@c,w
 11818  032A  00B1               	movwf	??__doprnt
 11819  032B  0831               	movf	??__doprnt,w
 11820  032C  00B5               	movwf	__doprnt@prec
 11821  032D                     l5441:	
 11822                           ;doprnt.c: 1474: while(prec--) {
 11823                           
 11824  032D  30FF               	movlw	255
 11825  032E  0020               	movlb	0	; select bank0
 11826  032F  00B1               	movwf	??__doprnt
 11827  0330  0831               	movf	??__doprnt,w
 11828  0331  07B5               	addwf	__doprnt@prec,f
 11829  0332  0A35               	incf	__doprnt@prec,w
 11830  0333  1903               	btfsc	3,2
 11831  0334  289C               	goto	l5443
 11832                           
 11833                           ;doprnt.c: 1478: {
 11834                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
 11835  0335  300A               	movlw	10
 11836  0336  00A8               	movwf	___lwmod@divisor
 11837  0337  3000               	movlw	0
 11838  0338  00A9               	movwf	___lwmod@divisor+1
 11839  0339  0835               	movf	__doprnt@prec,w
 11840  033A  00B1               	movwf	??__doprnt
 11841  033B  01B2               	clrf	??__doprnt+1
 11842  033C  35B1               	lslf	??__doprnt,f
 11843  033D  0DB2               	rlf	??__doprnt+1,f
 11844  033E  3000               	movlw	low (_dpowers| (0+32768))
 11845  033F  0731               	addwf	??__doprnt,w
 11846  0340  0084               	movwf	4
 11847  0341  3090               	movlw	high (_dpowers| (0+32768))
 11848  0342  3D32               	addwfc	??__doprnt+1,w
 11849  0343  0085               	movwf	5
 11850  0344  3F00               	moviw [0]fsr0
 11851  0345  00A0               	movwf	___lwdiv@divisor
 11852  0346  3F01               	moviw [1]fsr0
 11853  0347  00A1               	movwf	___lwdiv@divisor+1
 11854  0348  0837               	movf	__doprnt@val+1,w
 11855  0349  00A3               	movwf	___lwdiv@dividend+1
 11856  034A  0836               	movf	__doprnt@val,w
 11857  034B  00A2               	movwf	___lwdiv@dividend
 11858  034C  319E  2606  3180   	fcall	___lwdiv
 11859  034F  0020               	movlb	0	; select bank0
 11860  0350  0821               	movf	?___lwdiv+1,w
 11861  0351  00AB               	movwf	___lwmod@dividend+1
 11862  0352  0820               	movf	?___lwdiv,w
 11863  0353  00AA               	movwf	___lwmod@dividend
 11864  0354  319D  25AA  3180   	fcall	___lwmod
 11865  0357  0020               	movlb	0	; select bank0
 11866  0358  0828               	movf	?___lwmod,w
 11867  0359  3E30               	addlw	48
 11868  035A  00B3               	movwf	??__doprnt+2
 11869  035B  0833               	movf	??__doprnt+2,w
 11870  035C  00BF               	movwf	__doprnt@c
 11871                           
 11872                           ;doprnt.c: 1523: }
 11873                           ;doprnt.c: 1524: if(pb->func) (pb->func(c)); else ((*pb->ptr++ = c));
 11874  035D  0A40               	incf	__doprnt@pb,w
 11875  035E  0086               	movwf	6
 11876  035F  0187               	clrf	7
 11877  0360  0016               	moviw fsr1++
 11878  0361  0401               	iorwf	1,w
 11879  0362  1903               	btfsc	3,2
 11880  0363  2B71               	goto	l5437
 11881  0364  083F               	movf	__doprnt@c,w
 11882  0365  00B1               	movwf	??__doprnt
 11883  0366  0831               	movf	??__doprnt,w
 11884  0367  00A2               	movwf	putch@txData
 11885  0368  0A40               	incf	__doprnt@pb,w
 11886  0369  0086               	movwf	6
 11887  036A  0187               	clrf	7
 11888  036B  3F41               	moviw [1]fsr1
 11889  036C  008A               	movwf	10
 11890  036D  3F40               	moviw [0]fsr1
 11891  036E  000A               	callw
 11892  036F  3180               	pagesel	$
 11893  0370  2B2D               	goto	l5441
 11894  0371                     l5437:	
 11895  0371  0020               	movlb	0	; select bank0
 11896  0372  083F               	movf	__doprnt@c,w
 11897  0373  00B1               	movwf	??__doprnt
 11898  0374  0840               	movf	__doprnt@pb,w
 11899  0375  0086               	movwf	6
 11900  0376  0187               	clrf	7
 11901  0377  0801               	movf	1,w
 11902  0378  0086               	movwf	6
 11903  0379  0187               	clrf	7
 11904  037A  0831               	movf	??__doprnt,w
 11905  037B  0081               	movwf	1
 11906  037C  3001               	movlw	1
 11907  037D  00B1               	movwf	??__doprnt
 11908  037E  0840               	movf	__doprnt@pb,w
 11909  037F  0086               	movwf	6
 11910  0380  0187               	clrf	7
 11911  0381  0831               	movf	??__doprnt,w
 11912  0382  0781               	addwf	1,f
 11913  0383  2B2D               	goto	l5441
 11914  0384                     l5445:	
 11915                           ;doprnt.c: 1525: }
 11916                           ;doprnt.c: 1533: }
 11917                           ;doprnt.c: 1535: alldone:
 11918                           
 11919                           
 11920                           ;doprnt.c: 1540: return 0;
 11921  0384  0020               	movlb	0	; select bank0
 11922  0385  01AE               	clrf	?__doprnt
 11923  0386  01AF               	clrf	?__doprnt+1
 11924  0387  0008               	return
 11925  0388                     __end_of__doprnt:	
 11926                           
 11927                           	psect	text43
 11928  1A18                     __ptext43:	
 11929 ;; *************** function _putch *****************
 11930 ;; Defined at:
 11931 ;;		line 160 in file "mcc_generated_files/eusart.c"
 11932 ;; Parameters:    Size  Location     Type
 11933 ;;  txData          1    2[BANK0 ] unsigned char 
 11934 ;; Auto vars:     Size  Location     Type
 11935 ;;		None
 11936 ;; Return value:  Size  Location     Type
 11937 ;;                  1    wreg      void 
 11938 ;; Registers used:
 11939 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 11940 ;; Tracked objects:
 11941 ;;		On entry : 0/0
 11942 ;;		On exit  : 0/0
 11943 ;;		Unchanged: 0/0
 11944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11945 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11946 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11947 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11948 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11949 ;;Total ram usage:        1 bytes
 11950 ;; Hardware stack levels used:    1
 11951 ;; Hardware stack levels required when called:    4
 11952 ;; This function calls:
 11953 ;;		_EUSART_Write
 11954 ;; This function is called by:
 11955 ;;		_printf
 11956 ;;		__doprnt
 11957 ;; This function uses a non-reentrant model
 11958 ;;
 11959                           
 11960                           
 11961                           ;psect for function _putch
 11962  1A18                     _putch:	
 11963                           
 11964                           ;eusart.c: 162: EUSART_Write(txData);
 11965                           
 11966                           ;incstack = 0
 11967                           ; Regs used in _putch: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 11968  1A18  0020               	movlb	0	; select bank0
 11969  1A19  0822               	movf	putch@txData,w
 11970  1A1A  319C  2487         	fcall	_EUSART_Write
 11971  1A1C  0008               	return
 11972  1A1D                     __end_of_putch:	
 11973                           
 11974                           	psect	text44
 11975  1C87                     __ptext44:	
 11976 ;; *************** function _EUSART_Write *****************
 11977 ;; Defined at:
 11978 ;;		line 132 in file "mcc_generated_files/eusart.c"
 11979 ;; Parameters:    Size  Location     Type
 11980 ;;  txData          1    wreg     unsigned char 
 11981 ;; Auto vars:     Size  Location     Type
 11982 ;;  txData          1    1[BANK0 ] unsigned char 
 11983 ;; Return value:  Size  Location     Type
 11984 ;;                  1    wreg      void 
 11985 ;; Registers used:
 11986 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 11987 ;; Tracked objects:
 11988 ;;		On entry : 0/0
 11989 ;;		On exit  : 0/0
 11990 ;;		Unchanged: 0/0
 11991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 11992 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11993 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11994 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11995 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 11996 ;;Total ram usage:        2 bytes
 11997 ;; Hardware stack levels used:    1
 11998 ;; Hardware stack levels required when called:    3
 11999 ;; This function calls:
 12000 ;;		Nothing
 12001 ;; This function is called by:
 12002 ;;		_putch
 12003 ;; This function uses a non-reentrant model
 12004 ;;
 12005                           
 12006                           
 12007                           ;psect for function _EUSART_Write
 12008  1C87                     _EUSART_Write:	
 12009                           
 12010                           ;incstack = 0
 12011                           ; Regs used in _EUSART_Write: [wreg+fsr1l+fsr1h+status,2+status,0]
 12012                           ;EUSART_Write@txData stored from wreg
 12013  1C87  0020               	movlb	0	; select bank0
 12014  1C88  00A1               	movwf	EUSART_Write@txData
 12015  1C89                     l3523:	
 12016                           ;eusart.c: 135: {
 12017                           
 12018                           ;eusart.c: 134: while(0 == eusartTxBufferRemaining)
 12019                           
 12020  1C89  0022               	movlb	2	; select bank2
 12021  1C8A  0858               	movf	_eusartTxBufferRemaining^(0+256),w	;volatile
 12022  1C8B  1903               	btfsc	3,2
 12023  1C8C  2C89               	goto	l3523
 12024                           
 12025                           ;eusart.c: 136: }
 12026                           ;eusart.c: 138: if(0 == PIE1bits.TXIE)
 12027  1C8D  0021               	movlb	1	; select bank1
 12028  1C8E  1A11               	btfsc	17,4	;volatile
 12029  1C8F  2C95               	goto	l244
 12030                           
 12031                           ;eusart.c: 139: {
 12032                           ;eusart.c: 140: TXREG = txData;
 12033  1C90  0020               	movlb	0	; select bank0
 12034  1C91  0821               	movf	EUSART_Write@txData,w
 12035  1C92  0023               	movlb	3	; select bank3
 12036  1C93  009A               	movwf	26	;volatile
 12037                           
 12038                           ;eusart.c: 141: }
 12039  1C94  2CAB               	goto	l3537
 12040  1C95                     l244:	
 12041                           
 12042                           ;eusart.c: 142: else
 12043                           ;eusart.c: 143: {
 12044                           ;eusart.c: 144: PIE1bits.TXIE = 0;
 12045  1C95  1211               	bcf	17,4	;volatile
 12046                           
 12047                           ;eusart.c: 145: eusartTxBuffer[eusartTxHead++] = txData;
 12048  1C96  0020               	movlb	0	; select bank0
 12049  1C97  0821               	movf	EUSART_Write@txData,w
 12050  1C98  00A0               	movwf	??_EUSART_Write
 12051  1C99  087B               	movf	_eusartTxHead,w
 12052  1C9A  3EA0               	addlw	(low (_eusartTxBuffer| (0+512)))& (0+255)
 12053  1C9B  0086               	movwf	6
 12054  1C9C  3002               	movlw	2	; select bank5/6
 12055  1C9D  0087               	movwf	7
 12056  1C9E  0820               	movf	??_EUSART_Write,w
 12057  1C9F  0081               	movwf	1
 12058  1CA0  3001               	movlw	1
 12059  1CA1  00A0               	movwf	??_EUSART_Write
 12060  1CA2  0820               	movf	??_EUSART_Write,w
 12061  1CA3  07FB               	addwf	_eusartTxHead,f	;volatile
 12062                           
 12063                           ;eusart.c: 146: if(sizeof(eusartTxBuffer) <= eusartTxHead)
 12064  1CA4  3040               	movlw	64
 12065  1CA5  027B               	subwf	_eusartTxHead,w	;volatile
 12066  1CA6  1803               	btfsc	3,0
 12067                           
 12068                           ;eusart.c: 147: {
 12069                           ;eusart.c: 148: eusartTxHead = 0;
 12070  1CA7  01FB               	clrf	_eusartTxHead	;volatile
 12071                           
 12072                           ;eusart.c: 149: }
 12073                           ;eusart.c: 150: eusartTxBufferRemaining--;
 12074  1CA8  3001               	movlw	1
 12075  1CA9  0022               	movlb	2	; select bank2
 12076  1CAA  02D8               	subwf	_eusartTxBufferRemaining^(0+256),f	;volatile
 12077  1CAB                     l3537:	
 12078                           
 12079                           ;eusart.c: 151: }
 12080                           ;eusart.c: 152: PIE1bits.TXIE = 1;
 12081  1CAB  0021               	movlb	1	; select bank1
 12082  1CAC  1611               	bsf	17,4	;volatile
 12083  1CAD  0008               	return
 12084  1CAE                     __end_of_EUSART_Write:	
 12085                           
 12086                           	psect	text45
 12087  1DAA                     __ptext45:	
 12088 ;; *************** function ___lwmod *****************
 12089 ;; Defined at:
 12090 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwmod.c"
 12091 ;; Parameters:    Size  Location     Type
 12092 ;;  divisor         2    8[BANK0 ] unsigned int 
 12093 ;;  dividend        2   10[BANK0 ] unsigned int 
 12094 ;; Auto vars:     Size  Location     Type
 12095 ;;  counter         1   13[BANK0 ] unsigned char 
 12096 ;; Return value:  Size  Location     Type
 12097 ;;                  2    8[BANK0 ] unsigned int 
 12098 ;; Registers used:
 12099 ;;		wreg, status,2, status,0
 12100 ;; Tracked objects:
 12101 ;;		On entry : 0/0
 12102 ;;		On exit  : 0/0
 12103 ;;		Unchanged: 0/0
 12104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12105 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12106 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12107 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12108 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12109 ;;Total ram usage:        6 bytes
 12110 ;; Hardware stack levels used:    1
 12111 ;; Hardware stack levels required when called:    3
 12112 ;; This function calls:
 12113 ;;		Nothing
 12114 ;; This function is called by:
 12115 ;;		_inv_handler
 12116 ;;		_edge_meter
 12117 ;;		__doprnt
 12118 ;; This function uses a non-reentrant model
 12119 ;;
 12120                           
 12121                           
 12122                           ;psect for function ___lwmod
 12123  1DAA                     ___lwmod:	
 12124                           
 12125                           ;incstack = 0
 12126                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
 12127  1DAA  0020               	movlb	0	; select bank0
 12128  1DAB  0828               	movf	___lwmod@divisor,w
 12129  1DAC  0429               	iorwf	___lwmod@divisor+1,w
 12130  1DAD  1903               	btfsc	3,2
 12131  1DAE  2DD2               	goto	l3667
 12132  1DAF  01AD               	clrf	___lwmod@counter
 12133  1DB0  0AAD               	incf	___lwmod@counter,f
 12134  1DB1                     l3657:	
 12135  1DB1  1BA9               	btfsc	___lwmod@divisor+1,7
 12136  1DB2  2DBD               	goto	l3659
 12137  1DB3  3001               	movlw	1
 12138  1DB4                     u3305:	
 12139  1DB4  35A8               	lslf	___lwmod@divisor,f
 12140  1DB5  0DA9               	rlf	___lwmod@divisor+1,f
 12141  1DB6  0B89               	decfsz	9,f
 12142  1DB7  2DB4               	goto	u3305
 12143  1DB8  3001               	movlw	1
 12144  1DB9  00AC               	movwf	??___lwmod
 12145  1DBA  082C               	movf	??___lwmod,w
 12146  1DBB  07AD               	addwf	___lwmod@counter,f
 12147  1DBC  2DB1               	goto	l3657
 12148  1DBD                     l3659:	
 12149  1DBD  0829               	movf	___lwmod@divisor+1,w
 12150  1DBE  022B               	subwf	___lwmod@dividend+1,w
 12151  1DBF  1D03               	skipz
 12152  1DC0  2DC3               	goto	u3325
 12153  1DC1  0828               	movf	___lwmod@divisor,w
 12154  1DC2  022A               	subwf	___lwmod@dividend,w
 12155  1DC3                     u3325:	
 12156  1DC3  1C03               	skipc
 12157  1DC4  2DC9               	goto	l3663
 12158  1DC5  0828               	movf	___lwmod@divisor,w
 12159  1DC6  02AA               	subwf	___lwmod@dividend,f
 12160  1DC7  0829               	movf	___lwmod@divisor+1,w
 12161  1DC8  3BAB               	subwfb	___lwmod@dividend+1,f
 12162  1DC9                     l3663:	
 12163  1DC9  3001               	movlw	1
 12164  1DCA                     u3335:	
 12165  1DCA  36A9               	lsrf	___lwmod@divisor+1,f
 12166  1DCB  0CA8               	rrf	___lwmod@divisor,f
 12167  1DCC  0B89               	decfsz	9,f
 12168  1DCD  2DCA               	goto	u3335
 12169  1DCE  3001               	movlw	1
 12170  1DCF  02AD               	subwf	___lwmod@counter,f
 12171  1DD0  1D03               	btfss	3,2
 12172  1DD1  2DBD               	goto	l3659
 12173  1DD2                     l3667:	
 12174  1DD2  082B               	movf	___lwmod@dividend+1,w
 12175  1DD3  00A9               	movwf	?___lwmod+1
 12176  1DD4  082A               	movf	___lwmod@dividend,w
 12177  1DD5  00A8               	movwf	?___lwmod
 12178  1DD6  0008               	return
 12179  1DD7                     __end_of___lwmod:	
 12180                           
 12181                           	psect	text46
 12182  1E06                     __ptext46:	
 12183 ;; *************** function ___lwdiv *****************
 12184 ;; Defined at:
 12185 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\lwdiv.c"
 12186 ;; Parameters:    Size  Location     Type
 12187 ;;  divisor         2    0[BANK0 ] unsigned int 
 12188 ;;  dividend        2    2[BANK0 ] unsigned int 
 12189 ;; Auto vars:     Size  Location     Type
 12190 ;;  quotient        2    5[BANK0 ] unsigned int 
 12191 ;;  counter         1    7[BANK0 ] unsigned char 
 12192 ;; Return value:  Size  Location     Type
 12193 ;;                  2    0[BANK0 ] unsigned int 
 12194 ;; Registers used:
 12195 ;;		wreg, status,2, status,0
 12196 ;; Tracked objects:
 12197 ;;		On entry : 0/0
 12198 ;;		On exit  : 0/0
 12199 ;;		Unchanged: 0/0
 12200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12201 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12202 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12203 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12204 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12205 ;;Total ram usage:        8 bytes
 12206 ;; Hardware stack levels used:    1
 12207 ;; Hardware stack levels required when called:    3
 12208 ;; This function calls:
 12209 ;;		Nothing
 12210 ;; This function is called by:
 12211 ;;		_edge_meter
 12212 ;;		__doprnt
 12213 ;; This function uses a non-reentrant model
 12214 ;;
 12215                           
 12216                           
 12217                           ;psect for function ___lwdiv
 12218  1E06                     ___lwdiv:	
 12219                           
 12220                           ;incstack = 0
 12221                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
 12222  1E06  0020               	movlb	0	; select bank0
 12223  1E07  01A5               	clrf	___lwdiv@quotient
 12224  1E08  01A6               	clrf	___lwdiv@quotient+1
 12225  1E09  0820               	movf	___lwdiv@divisor,w
 12226  1E0A  0421               	iorwf	___lwdiv@divisor+1,w
 12227  1E0B  1903               	btfsc	3,2
 12228  1E0C  2E36               	goto	l3645
 12229  1E0D  01A7               	clrf	___lwdiv@counter
 12230  1E0E  0AA7               	incf	___lwdiv@counter,f
 12231  1E0F                     l3633:	
 12232  1E0F  1BA1               	btfsc	___lwdiv@divisor+1,7
 12233  1E10  2E1B               	goto	l3635
 12234  1E11  3001               	movlw	1
 12235  1E12                     u3235:	
 12236  1E12  35A0               	lslf	___lwdiv@divisor,f
 12237  1E13  0DA1               	rlf	___lwdiv@divisor+1,f
 12238  1E14  0B89               	decfsz	9,f
 12239  1E15  2E12               	goto	u3235
 12240  1E16  3001               	movlw	1
 12241  1E17  00A4               	movwf	??___lwdiv
 12242  1E18  0824               	movf	??___lwdiv,w
 12243  1E19  07A7               	addwf	___lwdiv@counter,f
 12244  1E1A  2E0F               	goto	l3633
 12245  1E1B                     l3635:	
 12246  1E1B  3001               	movlw	1
 12247  1E1C                     u3255:	
 12248  1E1C  35A5               	lslf	___lwdiv@quotient,f
 12249  1E1D  0DA6               	rlf	___lwdiv@quotient+1,f
 12250  1E1E  0B89               	decfsz	9,f
 12251  1E1F  2E1C               	goto	u3255
 12252  1E20  0821               	movf	___lwdiv@divisor+1,w
 12253  1E21  0223               	subwf	___lwdiv@dividend+1,w
 12254  1E22  1D03               	skipz
 12255  1E23  2E26               	goto	u3265
 12256  1E24  0820               	movf	___lwdiv@divisor,w
 12257  1E25  0222               	subwf	___lwdiv@dividend,w
 12258  1E26                     u3265:	
 12259  1E26  1C03               	skipc
 12260  1E27  2E2D               	goto	l3641
 12261  1E28  0820               	movf	___lwdiv@divisor,w
 12262  1E29  02A2               	subwf	___lwdiv@dividend,f
 12263  1E2A  0821               	movf	___lwdiv@divisor+1,w
 12264  1E2B  3BA3               	subwfb	___lwdiv@dividend+1,f
 12265  1E2C  1425               	bsf	___lwdiv@quotient,0
 12266  1E2D                     l3641:	
 12267  1E2D  3001               	movlw	1
 12268  1E2E                     u3275:	
 12269  1E2E  36A1               	lsrf	___lwdiv@divisor+1,f
 12270  1E2F  0CA0               	rrf	___lwdiv@divisor,f
 12271  1E30  0B89               	decfsz	9,f
 12272  1E31  2E2E               	goto	u3275
 12273  1E32  3001               	movlw	1
 12274  1E33  02A7               	subwf	___lwdiv@counter,f
 12275  1E34  1D03               	btfss	3,2
 12276  1E35  2E1B               	goto	l3635
 12277  1E36                     l3645:	
 12278  1E36  0826               	movf	___lwdiv@quotient+1,w
 12279  1E37  00A1               	movwf	?___lwdiv+1
 12280  1E38  0825               	movf	___lwdiv@quotient,w
 12281  1E39  00A0               	movwf	?___lwdiv
 12282  1E3A  0008               	return
 12283  1E3B                     __end_of___lwdiv:	
 12284                           
 12285                           	psect	text47
 12286  1392                     __ptext47:	
 12287 ;; *************** function _dev_map_iterator *****************
 12288 ;; Defined at:
 12289 ;;		line 168 in file "main.c"
 12290 ;; Parameters:    Size  Location     Type
 12291 ;;		None
 12292 ;; Auto vars:     Size  Location     Type
 12293 ;;  dev_addr        1    7[BANK0 ] unsigned char 
 12294 ;;  exist           1    6[BANK0 ] unsigned char 
 12295 ;; Return value:  Size  Location     Type
 12296 ;;                  1    wreg      unsigned char 
 12297 ;; Registers used:
 12298 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath
 12299 ;; Tracked objects:
 12300 ;;		On entry : 0/0
 12301 ;;		On exit  : 0/0
 12302 ;;		Unchanged: 0/0
 12303 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12304 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12305 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12306 ;;      Temps:          0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12307 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12308 ;;Total ram usage:        8 bytes
 12309 ;; Hardware stack levels used:    1
 12310 ;; Hardware stack levels required when called:    3
 12311 ;; This function calls:
 12312 ;;		Nothing
 12313 ;; This function is called by:
 12314 ;;		_print_dev_map
 12315 ;; This function uses a non-reentrant model
 12316 ;;
 12317                           
 12318                           
 12319                           ;psect for function _dev_map_iterator
 12320  1392                     _dev_map_iterator:	
 12321                           
 12322                           ;main.c: 169: static uint8_t xx = 0;
 12323                           ;main.c: 170: static uint8_t yy = 0;
 12324                           ;main.c: 171: static bool start = 1;
 12325                           ;main.c: 172: bool exist = 0;
 12326                           
 12327                           ;incstack = 0
 12328                           ; Regs used in _dev_map_iterator: [wreg-fsr1h+status,2+status,0+pclath]
 12329  1392  0020               	movlb	0	; select bank0
 12330  1393  01A6               	clrf	dev_map_iterator@exist
 12331                           
 12332                           ;main.c: 173: uint8_t dev_addr;
 12333                           ;main.c: 175: if (devs) {
 12334  1394  0022               	movlb	2	; select bank2
 12335  1395  0850               	movf	_devs^(0+256),w
 12336  1396  1903               	btfsc	3,2
 12337  1397  2BE9               	goto	l3961
 12338  1398                     l3945:	
 12339                           ;main.c: 176: while(1) {
 12340                           
 12341                           
 12342                           ;main.c: 177: if (xx > 7) {
 12343  1398  3008               	movlw	8
 12344  1399  024F               	subwf	dev_map_iterator@xx^(0+256),w
 12345  139A  1C03               	skipc
 12346  139B  2BA3               	goto	l3951
 12347                           
 12348                           ;main.c: 178: xx = 0;
 12349  139C  01CF               	clrf	dev_map_iterator@xx^(0+256)
 12350                           
 12351                           ;main.c: 179: yy++;
 12352  139D  3001               	movlw	1
 12353  139E  0020               	movlb	0	; select bank0
 12354  139F  00A0               	movwf	??_dev_map_iterator
 12355  13A0  0820               	movf	??_dev_map_iterator,w
 12356  13A1  0022               	movlb	2	; select bank2
 12357  13A2  07CE               	addwf	dev_map_iterator@yy^(0+256),f
 12358  13A3                     l3951:	
 12359                           
 12360                           ;main.c: 180: }
 12361                           ;main.c: 181: if (yy >= MAX_Y) {
 12362  13A3  300A               	movlw	low (_MAX_Y| (0+32768))
 12363  13A4  0084               	movwf	4
 12364  13A5  3090               	movlw	high (_MAX_Y| (0+32768))
 12365  13A6  0085               	movwf	5
 12366  13A7  0800               	movf	0,w	;code access
 12367  13A8  024E               	subwf	dev_map_iterator@yy^(0+256),w
 12368  13A9  1C03               	skipc
 12369  13AA  2BAD               	goto	l3955
 12370                           
 12371                           ;main.c: 182: xx = 0;
 12372  13AB  01CF               	clrf	dev_map_iterator@xx^(0+256)
 12373                           
 12374                           ;main.c: 183: yy = 0;
 12375  13AC  01CE               	clrf	dev_map_iterator@yy^(0+256)
 12376  13AD                     l3955:	
 12377                           
 12378                           ;main.c: 184: }
 12379                           ;main.c: 185: if ((0x01 << xx) & dev_map[yy]) {
 12380  13AD  084E               	movf	dev_map_iterator@yy^(0+256),w
 12381  13AE  3E25               	addlw	(low (_dev_map| (0+256)))& (0+255)
 12382  13AF  0086               	movwf	6
 12383  13B0  3001               	movlw	1	; select bank2/3
 12384  13B1  0087               	movwf	7
 12385  13B2  0801               	movf	1,w
 12386  13B3  0020               	movlb	0	; select bank0
 12387  13B4  00A0               	movwf	??_dev_map_iterator
 12388  13B5  01A1               	clrf	??_dev_map_iterator+1
 12389  13B6  3001               	movlw	1
 12390  13B7  00A2               	movwf	??_dev_map_iterator+2
 12391  13B8  3000               	movlw	0
 12392  13B9  00A3               	movwf	??_dev_map_iterator+3
 12393  13BA  0022               	movlb	2	; select bank2
 12394  13BB  0A4F               	incf	dev_map_iterator@xx^(0+256),w
 12395  13BC  0020               	movlb	0	; select bank0
 12396  13BD  2BC0               	goto	u3854
 12397  13BE                     u3855:	
 12398  13BE  35A2               	lslf	??_dev_map_iterator+2,f
 12399  13BF  0DA3               	rlf	??_dev_map_iterator+3,f
 12400  13C0                     u3854:	
 12401  13C0  0B89               	decfsz	9,f
 12402  13C1  2BBE               	goto	u3855
 12403  13C2  0820               	movf	??_dev_map_iterator,w
 12404  13C3  0522               	andwf	??_dev_map_iterator+2,w
 12405  13C4  00A4               	movwf	??_dev_map_iterator+4
 12406  13C5  0821               	movf	??_dev_map_iterator+1,w
 12407  13C6  0523               	andwf	??_dev_map_iterator+3,w
 12408  13C7  00A5               	movwf	??_dev_map_iterator+5
 12409  13C8  0824               	movf	??_dev_map_iterator+4,w
 12410  13C9  0425               	iorwf	??_dev_map_iterator+5,w
 12411  13CA  1903               	btfsc	3,2
 12412  13CB  2BE2               	goto	l3959
 12413                           
 12414                           ;main.c: 186: dev_addr = yy * 8 + xx++;
 12415  13CC  0022               	movlb	2	; select bank2
 12416  13CD  084E               	movf	dev_map_iterator@yy^(0+256),w
 12417  13CE  0020               	movlb	0	; select bank0
 12418  13CF  00A0               	movwf	??_dev_map_iterator
 12419  13D0  3002               	movlw	2
 12420  13D1                     u3875:	
 12421  13D1  35A0               	lslf	??_dev_map_iterator,f
 12422  13D2  3EFF               	addlw	-1
 12423  13D3  1D03               	skipz
 12424  13D4  2BD1               	goto	u3875
 12425  13D5  3520               	lslf	??_dev_map_iterator,w
 12426  13D6  0022               	movlb	2	; select bank2
 12427  13D7  074F               	addwf	dev_map_iterator@xx^(0+256),w
 12428  13D8  0020               	movlb	0	; select bank0
 12429  13D9  00A1               	movwf	??_dev_map_iterator+1
 12430  13DA  0821               	movf	??_dev_map_iterator+1,w
 12431  13DB  00A7               	movwf	dev_map_iterator@dev_addr
 12432  13DC  3001               	movlw	1
 12433  13DD  00A0               	movwf	??_dev_map_iterator
 12434  13DE  0820               	movf	??_dev_map_iterator,w
 12435  13DF  0022               	movlb	2	; select bank2
 12436  13E0  07CF               	addwf	dev_map_iterator@xx^(0+256),f
 12437                           
 12438                           ;main.c: 187: break;
 12439  13E1  2BE9               	goto	l3961
 12440  13E2                     l3959:	
 12441                           
 12442                           ;main.c: 188: }
 12443                           ;main.c: 189: xx++;
 12444  13E2  3001               	movlw	1
 12445  13E3  0020               	movlb	0	; select bank0
 12446  13E4  00A0               	movwf	??_dev_map_iterator
 12447  13E5  0820               	movf	??_dev_map_iterator,w
 12448  13E6  0022               	movlb	2	; select bank2
 12449  13E7  07CF               	addwf	dev_map_iterator@xx^(0+256),f
 12450  13E8  2B98               	goto	l3945
 12451  13E9                     l3961:	
 12452                           
 12453                           ;main.c: 190: }
 12454                           ;main.c: 191: }
 12455                           ;main.c: 192: return dev_addr;
 12456  13E9  0020               	movlb	0	; select bank0
 12457  13EA  0827               	movf	dev_map_iterator@dev_addr,w
 12458  13EB  0008               	return
 12459  13EC                     __end_of_dev_map_iterator:	
 12460                           
 12461                           	psect	text48
 12462  1AF3                     __ptext48:	
 12463 ;; *************** function _check_plg *****************
 12464 ;; Defined at:
 12465 ;;		line 214 in file "main.c"
 12466 ;; Parameters:    Size  Location     Type
 12467 ;;		None
 12468 ;; Auto vars:     Size  Location     Type
 12469 ;;  status          1   35[BANK0 ] unsigned char 
 12470 ;; Return value:  Size  Location     Type
 12471 ;;                  1    wreg      void 
 12472 ;; Registers used:
 12473 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12474 ;; Tracked objects:
 12475 ;;		On entry : 0/0
 12476 ;;		On exit  : 0/0
 12477 ;;		Unchanged: 0/0
 12478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12479 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12480 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12481 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12482 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12483 ;;Total ram usage:        3 bytes
 12484 ;; Hardware stack levels used:    1
 12485 ;; Hardware stack levels required when called:    7
 12486 ;; This function calls:
 12487 ;;		_i2c1_write_no_data
 12488 ;;		_scan_dev
 12489 ;; This function is called by:
 12490 ;;		_inv_handler
 12491 ;;		_command_handler
 12492 ;; This function uses a non-reentrant model
 12493 ;;
 12494                           
 12495                           
 12496                           ;psect for function _check_plg
 12497  1AF3                     _check_plg:	
 12498                           
 12499                           ;main.c: 215: uint8_t status = i2c1_write_no_data(0x00, 0x02);
 12500                           
 12501                           ;incstack = 0
 12502                           ; Regs used in _check_plg: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12503  1AF3  3000               	movlw	0
 12504  1AF4  0020               	movlb	0	; select bank0
 12505  1AF5  00AE               	movwf	i2c1_write_no_data@dev_addr
 12506  1AF6  00AF               	movwf	i2c1_write_no_data@dev_addr+1
 12507  1AF7  3002               	movlw	2
 12508  1AF8  00C1               	movwf	??_check_plg
 12509  1AF9  0841               	movf	??_check_plg,w
 12510  1AFA  00B0               	movwf	i2c1_write_no_data@reg_addr
 12511  1AFB  319D  2528  319A   	fcall	_i2c1_write_no_data
 12512  1AFE  0020               	movlb	0	; select bank0
 12513  1AFF  00C2               	movwf	??_check_plg+1
 12514  1B00  0842               	movf	??_check_plg+1,w
 12515  1B01  00C3               	movwf	check_plg@status
 12516                           
 12517                           ;main.c: 216: if (status == 0) scan_dev();
 12518  1B02  0843               	movf	check_plg@status,w
 12519  1B03  1D03               	btfss	3,2
 12520  1B04  0008               	return
 12521  1B05  3188  2007         	fcall	_scan_dev
 12522  1B07  0008               	return
 12523  1B08                     __end_of_check_plg:	
 12524                           
 12525                           	psect	text49
 12526  0807                     __ptext49:	
 12527 ;; *************** function _scan_dev *****************
 12528 ;; Defined at:
 12529 ;;		line 198 in file "main.c"
 12530 ;; Parameters:    Size  Location     Type
 12531 ;;		None
 12532 ;; Auto vars:     Size  Location     Type
 12533 ;;  dev_addr        1   32[BANK0 ] unsigned char 
 12534 ;;  status          1   31[BANK0 ] unsigned char 
 12535 ;; Return value:  Size  Location     Type
 12536 ;;                  1    wreg      void 
 12537 ;; Registers used:
 12538 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12539 ;; Tracked objects:
 12540 ;;		On entry : 0/0
 12541 ;;		On exit  : 0/0
 12542 ;;		Unchanged: 0/0
 12543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12544 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12545 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12546 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12547 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12548 ;;Total ram usage:        5 bytes
 12549 ;; Hardware stack levels used:    1
 12550 ;; Hardware stack levels required when called:    6
 12551 ;; This function calls:
 12552 ;;		_add_dev
 12553 ;;		_del_dev
 12554 ;;		_i2c1_read
 12555 ;; This function is called by:
 12556 ;;		_check_plg
 12557 ;;		_inv_handler
 12558 ;; This function uses a non-reentrant model
 12559 ;;
 12560                           
 12561                           
 12562                           ;psect for function _scan_dev
 12563  0807                     _scan_dev:	
 12564                           
 12565                           ;main.c: 199: uint8_t dev_addr, status;
 12566                           ;main.c: 200: for (dev_addr=0x10; dev_addr<=0x20; dev_addr++) {
 12567                           
 12568                           ;incstack = 0
 12569                           ; Regs used in _scan_dev: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12570  0807  3010               	movlw	16
 12571  0808  0020               	movlb	0	; select bank0
 12572  0809  00BC               	movwf	??_scan_dev
 12573  080A  083C               	movf	??_scan_dev,w
 12574  080B  00C0               	movwf	scan_dev@dev_addr
 12575  080C                     L13:	
 12576  080C  3021               	movlw	33
 12577  080D  0240               	subwf	scan_dev@dev_addr,w
 12578  080E  1803               	btfsc	3,0
 12579  080F  0008               	return
 12580                           
 12581                           ;main.c: 201: status = i2c1_read(dev_addr, 0x01, &read_buf[0], 1);
 12582  0810  0840               	movf	scan_dev@dev_addr,w
 12583  0811  00BC               	movwf	??_scan_dev
 12584  0812  01BD               	clrf	??_scan_dev+1
 12585  0813  083C               	movf	??_scan_dev,w
 12586  0814  00B0               	movwf	i2c1_read@dev_addr
 12587  0815  083D               	movf	??_scan_dev+1,w
 12588  0816  00B1               	movwf	i2c1_read@dev_addr+1
 12589  0817  01B2               	clrf	i2c1_read@reg_addr
 12590  0818  0AB2               	incf	i2c1_read@reg_addr,f
 12591  0819  30BC               	movlw	low _read_buf
 12592  081A  00B3               	movwf	i2c1_read@pbuf
 12593  081B  3001               	movlw	high _read_buf
 12594  081C  00B4               	movwf	i2c1_read@pbuf+1
 12595  081D  01B5               	clrf	i2c1_read@len
 12596  081E  0AB5               	incf	i2c1_read@len,f
 12597  081F  3192  228F  3188   	fcall	_i2c1_read
 12598  0822  0020               	movlb	0	; select bank0
 12599  0823  00BE               	movwf	??_scan_dev+2
 12600  0824  083E               	movf	??_scan_dev+2,w
 12601  0825  00BF               	movwf	scan_dev@status
 12602                           
 12603                           ;main.c: 203: if (status == 0 && dev_addr == read_buf[0]) {
 12604  0826  083F               	movf	scan_dev@status,w
 12605  0827  1D03               	btfss	3,2
 12606  0828  2834               	goto	l3977
 12607  0829  0023               	movlb	3	; select bank3
 12608  082A  083C               	movf	_read_buf^(0+384),w
 12609  082B  0020               	movlb	0	; select bank0
 12610  082C  0640               	xorwf	scan_dev@dev_addr,w
 12611  082D  1D03               	skipz
 12612  082E  2834               	goto	l3977
 12613                           
 12614                           ;main.c: 204: add_dev(dev_addr);
 12615  082F  0840               	movf	scan_dev@dev_addr,w
 12616  0830  319F  2760  3188   	fcall	_add_dev
 12617                           
 12618                           ;main.c: 205: } else {
 12619  0833  2839               	goto	l3979
 12620  0834                     l3977:	
 12621                           
 12622                           ;main.c: 206: del_dev(dev_addr);
 12623  0834  0020               	movlb	0	; select bank0
 12624  0835  0840               	movf	scan_dev@dev_addr,w
 12625  0836  319F  2713  3188   	fcall	_del_dev
 12626  0839                     l3979:	
 12627  0839  3001               	movlw	1
 12628  083A  0020               	movlb	0	; select bank0
 12629  083B  00BC               	movwf	??_scan_dev
 12630  083C  083C               	movf	??_scan_dev,w
 12631  083D  07C0               	addwf	scan_dev@dev_addr,f
 12632  083E  280C               	goto	L13
 12633  083F                     __end_of_scan_dev:	
 12634                           
 12635                           	psect	text50
 12636  128F                     __ptext50:	
 12637 ;; *************** function _i2c1_read *****************
 12638 ;; Defined at:
 12639 ;;		line 24 in file "i2c1_util.c"
 12640 ;; Parameters:    Size  Location     Type
 12641 ;;  dev_addr        2   16[BANK0 ] unsigned int 
 12642 ;;  reg_addr        1   18[BANK0 ] unsigned char 
 12643 ;;  pbuf            2   19[BANK0 ] PTR unsigned char 
 12644 ;;		 -> sen@length(1), sen@type(1), read_buf(16), exec_remote_cmd@data(1), 
 12645 ;;  len             1   21[BANK0 ] unsigned char 
 12646 ;; Auto vars:     Size  Location     Type
 12647 ;;  status          1   26[BANK0 ] enum E3078
 12648 ;;  reg             1   25[BANK0 ] unsigned char [1]
 12649 ;;  read_status     1   24[BANK0 ] unsigned char 
 12650 ;; Return value:  Size  Location     Type
 12651 ;;                  1    wreg      unsigned char 
 12652 ;; Registers used:
 12653 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12654 ;; Tracked objects:
 12655 ;;		On entry : 0/0
 12656 ;;		On exit  : 0/0
 12657 ;;		Unchanged: 0/0
 12658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12659 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12660 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12661 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12662 ;;      Totals:         0      11       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12663 ;;Total ram usage:       11 bytes
 12664 ;; Hardware stack levels used:    1
 12665 ;; Hardware stack levels required when called:    5
 12666 ;; This function calls:
 12667 ;;		_I2C1_MasterRead
 12668 ;;		_I2C1_MasterWrite
 12669 ;; This function is called by:
 12670 ;;		_exec_remote_cmd
 12671 ;;		_scan_dev
 12672 ;;		_sen
 12673 ;; This function uses a non-reentrant model
 12674 ;;
 12675                           
 12676                           
 12677                           ;psect for function _i2c1_read
 12678  128F                     _i2c1_read:	
 12679                           
 12680                           ;i2c1_util.c: 26: uint8_t reg[1];
 12681                           ;i2c1_util.c: 27: I2C1_MESSAGE_STATUS status;
 12682                           ;i2c1_util.c: 28: uint8_t read_status;
 12683                           ;i2c1_util.c: 29: reg[0] = reg_addr;
 12684                           
 12685                           ;incstack = 0
 12686                           ; Regs used in _i2c1_read: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12687  128F  0020               	movlb	0	; select bank0
 12688  1290  0832               	movf	i2c1_read@reg_addr,w
 12689  1291  00B6               	movwf	??_i2c1_read
 12690  1292  0836               	movf	??_i2c1_read,w
 12691  1293  00B9               	movwf	i2c1_read@reg
 12692                           
 12693                           ;i2c1_util.c: 30: _delay((unsigned long)((100)*(32000000/4000000.0)));
 12694  1294  30A0               	movlw	160
 12695  1295                     u7157:	
 12696  1295  3200               	nop2
 12697  1296  0B89               	decfsz	9,f
 12698  1297  2A95               	goto	u7157
 12699                           
 12700                           ;i2c1_util.c: 31: I2C1_MasterWrite(reg, 1, dev_addr, &status);
 12701  1298  0020               	movlb	0	; select bank0
 12702  1299  01A7               	clrf	I2C1_MasterWrite@length
 12703  129A  0AA7               	incf	I2C1_MasterWrite@length,f
 12704  129B  0831               	movf	i2c1_read@dev_addr+1,w
 12705  129C  00A9               	movwf	I2C1_MasterWrite@address+1
 12706  129D  0830               	movf	i2c1_read@dev_addr,w
 12707  129E  00A8               	movwf	I2C1_MasterWrite@address
 12708  129F  303A               	movlw	(low (i2c1_read@status| 0))& (0+255)
 12709  12A0  00B6               	movwf	??_i2c1_read
 12710  12A1  0836               	movf	??_i2c1_read,w
 12711  12A2  00AA               	movwf	I2C1_MasterWrite@pflag
 12712  12A3  3039               	movlw	(low (i2c1_read@reg| 0))& (0+255)
 12713  12A4  319C  24FE  3192   	fcall	_I2C1_MasterWrite
 12714  12A7                     l3677:	
 12715                           ;i2c1_util.c: 32: while (status == I2C1_MESSAGE_PENDING) {_delay((unsigned long)((100)*(
      +                          32000000/4000000.0)));};
 12716                           
 12717  12A7  3002               	movlw	2
 12718  12A8  0020               	movlb	0	; select bank0
 12719  12A9  063A               	xorwf	i2c1_read@status,w
 12720  12AA  1D03               	btfss	3,2
 12721  12AB  2AB1               	goto	l3679
 12722  12AC  30A0               	movlw	160
 12723  12AD                     u7167:	
 12724  12AD  3200               	nop2
 12725  12AE  0B89               	decfsz	9,f
 12726  12AF  2AAD               	goto	u7167
 12727  12B0  2AA7               	goto	l3677
 12728  12B1                     l3679:	
 12729                           
 12730                           ;i2c1_util.c: 33: if (status == I2C1_MESSAGE_COMPLETE) {
 12731  12B1  083A               	movf	i2c1_read@status,w
 12732  12B2  1D03               	btfss	3,2
 12733  12B3  2AE0               	goto	l653
 12734                           
 12735                           ;i2c1_util.c: 34: _delay((unsigned long)((100)*(32000000/4000000.0)));
 12736  12B4  30A0               	movlw	160
 12737  12B5                     u7177:	
 12738  12B5  3200               	nop2
 12739  12B6  0B89               	decfsz	9,f
 12740  12B7  2AB5               	goto	u7177
 12741                           
 12742                           ;i2c1_util.c: 35: I2C1_MasterRead(pbuf, len, dev_addr, &status);
 12743  12B8  0020               	movlb	0	; select bank0
 12744  12B9  0834               	movf	i2c1_read@pbuf+1,w
 12745  12BA  00A9               	movwf	I2C1_MasterRead@pdata+1
 12746  12BB  0833               	movf	i2c1_read@pbuf,w
 12747  12BC  00A8               	movwf	I2C1_MasterRead@pdata
 12748  12BD  0835               	movf	i2c1_read@len,w
 12749  12BE  00B6               	movwf	??_i2c1_read
 12750  12BF  0836               	movf	??_i2c1_read,w
 12751  12C0  00AA               	movwf	I2C1_MasterRead@length
 12752  12C1  0831               	movf	i2c1_read@dev_addr+1,w
 12753  12C2  00AC               	movwf	I2C1_MasterRead@address+1
 12754  12C3  0830               	movf	i2c1_read@dev_addr,w
 12755  12C4  00AB               	movwf	I2C1_MasterRead@address
 12756  12C5  303A               	movlw	(low (i2c1_read@status| 0))& (0+255)
 12757  12C6  00B7               	movwf	??_i2c1_read+1
 12758  12C7  0837               	movf	??_i2c1_read+1,w
 12759  12C8  00AD               	movwf	I2C1_MasterRead@pflag
 12760  12C9  319C  24AE  3192   	fcall	_I2C1_MasterRead
 12761  12CC                     l3687:	
 12762                           ;i2c1_util.c: 36: while (status == I2C1_MESSAGE_PENDING) {_delay((unsigned long)((100)*(
      +                          32000000/4000000.0)));};
 12763                           
 12764  12CC  3002               	movlw	2
 12765  12CD  0020               	movlb	0	; select bank0
 12766  12CE  063A               	xorwf	i2c1_read@status,w
 12767  12CF  1D03               	btfss	3,2
 12768  12D0  2AD6               	goto	l3689
 12769  12D1  30A0               	movlw	160
 12770  12D2                     u7187:	
 12771  12D2  3200               	nop2
 12772  12D3  0B89               	decfsz	9,f
 12773  12D4  2AD2               	goto	u7187
 12774  12D5  2ACC               	goto	l3687
 12775  12D6                     l3689:	
 12776                           
 12777                           ;i2c1_util.c: 37: if (status == I2C1_MESSAGE_COMPLETE) {
 12778  12D6  083A               	movf	i2c1_read@status,w
 12779  12D7  1D03               	btfss	3,2
 12780  12D8  2ADB               	goto	l3693
 12781                           
 12782                           ;i2c1_util.c: 38: read_status = 0;
 12783  12D9  01B8               	clrf	i2c1_read@read_status
 12784                           
 12785                           ;i2c1_util.c: 39: } else {
 12786  12DA  2AE2               	goto	l3695
 12787  12DB                     l3693:	
 12788                           
 12789                           ;i2c1_util.c: 40: read_status = 2;
 12790  12DB  3002               	movlw	2
 12791  12DC  00B6               	movwf	??_i2c1_read
 12792  12DD  0836               	movf	??_i2c1_read,w
 12793  12DE  00B8               	movwf	i2c1_read@read_status
 12794                           
 12795                           ;i2c1_util.c: 41: }
 12796                           ;i2c1_util.c: 42: } else {
 12797  12DF  2AE2               	goto	l3695
 12798  12E0                     l653:	
 12799                           
 12800                           ;i2c1_util.c: 43: read_status = 1;
 12801  12E0  01B8               	clrf	i2c1_read@read_status
 12802  12E1  0AB8               	incf	i2c1_read@read_status,f
 12803  12E2                     l3695:	
 12804                           
 12805                           ;i2c1_util.c: 44: }
 12806                           ;i2c1_util.c: 45: return read_status;
 12807  12E2  0838               	movf	i2c1_read@read_status,w
 12808  12E3  0008               	return
 12809  12E4                     __end_of_i2c1_read:	
 12810                           
 12811                           	psect	text51
 12812  1CAE                     __ptext51:	
 12813 ;; *************** function _I2C1_MasterRead *****************
 12814 ;; Defined at:
 12815 ;;		line 619 in file "mcc_generated_files/i2c1.c"
 12816 ;; Parameters:    Size  Location     Type
 12817 ;;  pdata           2    8[BANK0 ] PTR unsigned char 
 12818 ;;		 -> sen@length(1), sen@type(1), read_buf(16), exec_remote_cmd@data(1), 
 12819 ;;  length          1   10[BANK0 ] unsigned char 
 12820 ;;  address         2   11[BANK0 ] unsigned int 
 12821 ;;  pflag           1   13[BANK0 ] PTR enum E2972
 12822 ;;		 -> i2c1_read@status(1), 
 12823 ;; Auto vars:     Size  Location     Type
 12824 ;;		None
 12825 ;; Return value:  Size  Location     Type
 12826 ;;                  1    wreg      void 
 12827 ;; Registers used:
 12828 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 12829 ;; Tracked objects:
 12830 ;;		On entry : 0/0
 12831 ;;		On exit  : 0/0
 12832 ;;		Unchanged: 0/0
 12833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12834 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12836 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12837 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12838 ;;Total ram usage:        8 bytes
 12839 ;; Hardware stack levels used:    1
 12840 ;; Hardware stack levels required when called:    4
 12841 ;; This function calls:
 12842 ;;		_I2C1_MasterReadTRBBuild
 12843 ;;		_I2C1_MasterTRBInsert
 12844 ;; This function is called by:
 12845 ;;		_i2c1_read
 12846 ;; This function uses a non-reentrant model
 12847 ;;
 12848                           
 12849                           
 12850                           ;psect for function _I2C1_MasterRead
 12851  1CAE                     _I2C1_MasterRead:	
 12852                           
 12853                           ;i2c1.c: 625: static I2C1_TRANSACTION_REQUEST_BLOCK trBlock;
 12854                           ;i2c1.c: 629: if (i2c1_object.trStatus.s.full != 1)
 12855                           
 12856                           ;incstack = 0
 12857                           ; Regs used in _I2C1_MasterRead: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 12858  1CAE  0022               	movlb	2	; select bank2
 12859  1CAF  1822               	btfsc	(_i2c1_object^(0+256)+2),0
 12860  1CB0  2CCF               	goto	l3549
 12861                           
 12862                           ;i2c1.c: 630: {
 12863                           ;i2c1.c: 631: I2C1_MasterReadTRBBuild(&trBlock, pdata, length, address);
 12864  1CB1  0020               	movlb	0	; select bank0
 12865  1CB2  0829               	movf	I2C1_MasterRead@pdata+1,w
 12866  1CB3  00A1               	movwf	I2C1_MasterReadTRBBuild@pdata+1
 12867  1CB4  0828               	movf	I2C1_MasterRead@pdata,w
 12868  1CB5  00A0               	movwf	I2C1_MasterReadTRBBuild@pdata
 12869  1CB6  082A               	movf	I2C1_MasterRead@length,w
 12870  1CB7  00AE               	movwf	??_I2C1_MasterRead
 12871  1CB8  082E               	movf	??_I2C1_MasterRead,w
 12872  1CB9  00A2               	movwf	I2C1_MasterReadTRBBuild@length
 12873  1CBA  082C               	movf	I2C1_MasterRead@address+1,w
 12874  1CBB  00A4               	movwf	I2C1_MasterReadTRBBuild@address+1
 12875  1CBC  082B               	movf	I2C1_MasterRead@address,w
 12876  1CBD  00A3               	movwf	I2C1_MasterReadTRBBuild@address
 12877  1CBE  30D2               	movlw	(low (I2C1_MasterRead@trBlock| (0+256)))& (0+255)
 12878  1CBF  319D  257E  319C   	fcall	_I2C1_MasterReadTRBBuild
 12879                           
 12880                           ;i2c1.c: 632: I2C1_MasterTRBInsert(1, &trBlock, pflag);
 12881  1CC2  30D2               	movlw	(low (I2C1_MasterRead@trBlock| (0+256)))& (0+255)
 12882  1CC3  0020               	movlb	0	; select bank0
 12883  1CC4  00AE               	movwf	??_I2C1_MasterRead
 12884  1CC5  082E               	movf	??_I2C1_MasterRead,w
 12885  1CC6  00A0               	movwf	I2C1_MasterTRBInsert@ptrb_list
 12886  1CC7  082D               	movf	I2C1_MasterRead@pflag,w
 12887  1CC8  00AF               	movwf	??_I2C1_MasterRead+1
 12888  1CC9  082F               	movf	??_I2C1_MasterRead+1,w
 12889  1CCA  00A1               	movwf	I2C1_MasterTRBInsert@pflag
 12890  1CCB  3001               	movlw	1
 12891  1CCC  3192  22E4         	fcall	_I2C1_MasterTRBInsert
 12892                           
 12893                           ;i2c1.c: 633: }
 12894  1CCE  0008               	return
 12895  1CCF                     l3549:	
 12896                           
 12897                           ;i2c1.c: 634: else
 12898                           ;i2c1.c: 635: {
 12899                           ;i2c1.c: 636: *pflag = I2C1_MESSAGE_FAIL;
 12900  1CCF  0020               	movlb	0	; select bank0
 12901  1CD0  082D               	movf	I2C1_MasterRead@pflag,w
 12902  1CD1  0086               	movwf	6
 12903  1CD2  0187               	clrf	7
 12904  1CD3  0181               	clrf	1
 12905  1CD4  0A81               	incf	1,f
 12906  1CD5  0008               	return
 12907  1CD6                     __end_of_I2C1_MasterRead:	
 12908                           
 12909                           	psect	text52
 12910  1D7E                     __ptext52:	
 12911 ;; *************** function _I2C1_MasterReadTRBBuild *****************
 12912 ;; Defined at:
 12913 ;;		line 694 in file "mcc_generated_files/i2c1.c"
 12914 ;; Parameters:    Size  Location     Type
 12915 ;;  ptrb            1    wreg     PTR struct .
 12916 ;;		 -> I2C1_MasterRead@trBlock(5), 
 12917 ;;  pdata           2    0[BANK0 ] PTR unsigned char 
 12918 ;;		 -> sen@length(1), sen@type(1), read_buf(16), exec_remote_cmd@data(1), 
 12919 ;;  length          1    2[BANK0 ] unsigned char 
 12920 ;;  address         2    3[BANK0 ] unsigned int 
 12921 ;; Auto vars:     Size  Location     Type
 12922 ;;  ptrb            1    7[BANK0 ] PTR struct .
 12923 ;;		 -> I2C1_MasterRead@trBlock(5), 
 12924 ;; Return value:  Size  Location     Type
 12925 ;;                  1    wreg      void 
 12926 ;; Registers used:
 12927 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 12928 ;; Tracked objects:
 12929 ;;		On entry : 0/0
 12930 ;;		On exit  : 0/0
 12931 ;;		Unchanged: 0/0
 12932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 12933 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12934 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12935 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12936 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 12937 ;;Total ram usage:        8 bytes
 12938 ;; Hardware stack levels used:    1
 12939 ;; Hardware stack levels required when called:    3
 12940 ;; This function calls:
 12941 ;;		Nothing
 12942 ;; This function is called by:
 12943 ;;		_I2C1_MasterRead
 12944 ;; This function uses a non-reentrant model
 12945 ;;
 12946                           
 12947                           
 12948                           ;psect for function _I2C1_MasterReadTRBBuild
 12949  1D7E                     _I2C1_MasterReadTRBBuild:	
 12950                           
 12951                           ;incstack = 0
 12952                           ; Regs used in _I2C1_MasterReadTRBBuild: [wreg+fsr1l+fsr1h+status,2+status,0]
 12953                           ;I2C1_MasterReadTRBBuild@ptrb stored from wreg
 12954  1D7E  0020               	movlb	0	; select bank0
 12955  1D7F  00A7               	movwf	I2C1_MasterReadTRBBuild@ptrb
 12956                           
 12957                           ;i2c1.c: 700: ptrb->address = address << 1;
 12958  1D80  0824               	movf	I2C1_MasterReadTRBBuild@address+1,w
 12959  1D81  00A6               	movwf	??_I2C1_MasterReadTRBBuild+1
 12960  1D82  0823               	movf	I2C1_MasterReadTRBBuild@address,w
 12961  1D83  00A5               	movwf	??_I2C1_MasterReadTRBBuild
 12962  1D84  35A5               	lslf	??_I2C1_MasterReadTRBBuild,f
 12963  1D85  0DA6               	rlf	??_I2C1_MasterReadTRBBuild+1,f
 12964  1D86  0827               	movf	I2C1_MasterReadTRBBuild@ptrb,w
 12965  1D87  0086               	movwf	6
 12966  1D88  3001               	movlw	1	; select bank2/3
 12967  1D89  0087               	movwf	7
 12968  1D8A  0825               	movf	??_I2C1_MasterReadTRBBuild,w
 12969  1D8B  3FC0               	movwi [0]fsr1
 12970  1D8C  0826               	movf	??_I2C1_MasterReadTRBBuild+1,w
 12971  1D8D  3FC1               	movwi [1]fsr1
 12972                           
 12973                           ;i2c1.c: 702: ptrb->address |= 0x01;
 12974  1D8E  0827               	movf	I2C1_MasterReadTRBBuild@ptrb,w
 12975  1D8F  0086               	movwf	6
 12976  1D90  3001               	movlw	1	; select bank2/3
 12977  1D91  0087               	movwf	7
 12978  1D92  3001               	movlw	1
 12979  1D93  0481               	iorwf	1,f
 12980  1D94  3141               	addfsr 1,1
 12981  1D95  3000               	movlw	0
 12982  1D96  0481               	iorwf	1,f
 12983                           
 12984                           ;i2c1.c: 703: ptrb->length = length;
 12985  1D97  0822               	movf	I2C1_MasterReadTRBBuild@length,w
 12986  1D98  00A5               	movwf	??_I2C1_MasterReadTRBBuild
 12987  1D99  0827               	movf	I2C1_MasterReadTRBBuild@ptrb,w
 12988  1D9A  3E02               	addlw	2
 12989  1D9B  0086               	movwf	6
 12990  1D9C  3001               	movlw	1	; select bank2/3
 12991  1D9D  0087               	movwf	7
 12992  1D9E  0825               	movf	??_I2C1_MasterReadTRBBuild,w
 12993  1D9F  0081               	movwf	1
 12994                           
 12995                           ;i2c1.c: 704: ptrb->pbuffer = pdata;
 12996  1DA0  0827               	movf	I2C1_MasterReadTRBBuild@ptrb,w
 12997  1DA1  3E03               	addlw	3
 12998  1DA2  0086               	movwf	6
 12999  1DA3  3001               	movlw	1	; select bank2/3
 13000  1DA4  0087               	movwf	7
 13001  1DA5  0820               	movf	I2C1_MasterReadTRBBuild@pdata,w
 13002  1DA6  3FC0               	movwi [0]fsr1
 13003  1DA7  0821               	movf	I2C1_MasterReadTRBBuild@pdata+1,w
 13004  1DA8  3FC1               	movwi [1]fsr1
 13005  1DA9  0008               	return
 13006  1DAA                     __end_of_I2C1_MasterReadTRBBuild:	
 13007                           
 13008                           	psect	text53
 13009  1F13                     __ptext53:	
 13010 ;; *************** function _del_dev *****************
 13011 ;; Defined at:
 13012 ;;		line 150 in file "main.c"
 13013 ;; Parameters:    Size  Location     Type
 13014 ;;  dev_addr        1    wreg     unsigned char 
 13015 ;; Auto vars:     Size  Location     Type
 13016 ;;  dev_addr        1   27[BANK0 ] unsigned char 
 13017 ;;  y               1   26[BANK0 ] unsigned char 
 13018 ;;  new_map         1   25[BANK0 ] unsigned char 
 13019 ;;  old_map         1   24[BANK0 ] unsigned char 
 13020 ;;  x               1   23[BANK0 ] unsigned char 
 13021 ;; Return value:  Size  Location     Type
 13022 ;;                  1    wreg      void 
 13023 ;; Registers used:
 13024 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13025 ;; Tracked objects:
 13026 ;;		On entry : 0/0
 13027 ;;		On exit  : 0/0
 13028 ;;		Unchanged: 0/0
 13029 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13030 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13031 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13032 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13033 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13034 ;;Total ram usage:        8 bytes
 13035 ;; Hardware stack levels used:    1
 13036 ;; Hardware stack levels required when called:    4
 13037 ;; This function calls:
 13038 ;;		___awdiv
 13039 ;; This function is called by:
 13040 ;;		_scan_dev
 13041 ;; This function uses a non-reentrant model
 13042 ;;
 13043                           
 13044                           
 13045                           ;psect for function _del_dev
 13046  1F13                     _del_dev:	
 13047                           
 13048                           ;incstack = 0
 13049                           ; Regs used in _del_dev: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13050                           ;del_dev@dev_addr stored from wreg
 13051  1F13  0020               	movlb	0	; select bank0
 13052  1F14  00BB               	movwf	del_dev@dev_addr
 13053                           
 13054                           ;main.c: 151: uint8_t x, y;
 13055                           ;main.c: 152: uint8_t new_map, old_map;
 13056                           ;main.c: 153: if (dev_addr >= 1 && dev_addr <= 0x20) {
 13057  1F15  083B               	movf	del_dev@dev_addr,w
 13058  1F16  1903               	btfsc	3,2
 13059  1F17  0008               	return
 13060  1F18  3021               	movlw	33
 13061  1F19  023B               	subwf	del_dev@dev_addr,w
 13062  1F1A  1803               	skipnc
 13063  1F1B  0008               	return
 13064                           
 13065                           ;main.c: 154: y = dev_addr / 8;
 13066  1F1C  3008               	movlw	8
 13067  1F1D  00AB               	movwf	___awdiv@divisor
 13068  1F1E  3000               	movlw	0
 13069  1F1F  00AC               	movwf	___awdiv@divisor+1
 13070  1F20  083B               	movf	del_dev@dev_addr,w
 13071  1F21  00B4               	movwf	??_del_dev
 13072  1F22  01B5               	clrf	??_del_dev+1
 13073  1F23  0834               	movf	??_del_dev,w
 13074  1F24  00AD               	movwf	___awdiv@dividend
 13075  1F25  0835               	movf	??_del_dev+1,w
 13076  1F26  00AE               	movwf	___awdiv@dividend+1
 13077  1F27  319F  27AE  319F   	fcall	___awdiv
 13078  1F2A  0020               	movlb	0	; select bank0
 13079  1F2B  082B               	movf	?___awdiv,w
 13080  1F2C  00B6               	movwf	??_del_dev+2
 13081  1F2D  0836               	movf	??_del_dev+2,w
 13082  1F2E  00BA               	movwf	del_dev@y
 13083                           
 13084                           ;main.c: 155: x = dev_addr % 8;
 13085  1F2F  083B               	movf	del_dev@dev_addr,w
 13086  1F30  3907               	andlw	7
 13087  1F31  00B4               	movwf	??_del_dev
 13088  1F32  0834               	movf	??_del_dev,w
 13089  1F33  00B7               	movwf	del_dev@x
 13090                           
 13091                           ;main.c: 156: old_map = dev_map[y];
 13092  1F34  083A               	movf	del_dev@y,w
 13093  1F35  3E25               	addlw	(low (_dev_map| (0+256)))& (0+255)
 13094  1F36  0086               	movwf	6
 13095  1F37  3001               	movlw	1	; select bank2/3
 13096  1F38  0087               	movwf	7
 13097  1F39  0801               	movf	1,w
 13098  1F3A  00B4               	movwf	??_del_dev
 13099  1F3B  0834               	movf	??_del_dev,w
 13100  1F3C  00B8               	movwf	del_dev@old_map
 13101                           
 13102                           ;main.c: 157: new_map = dev_map[y] & ~(0x01 << x);
 13103  1F3D  083A               	movf	del_dev@y,w
 13104  1F3E  3E25               	addlw	(low (_dev_map| (0+256)))& (0+255)
 13105  1F3F  0086               	movwf	6
 13106  1F40  3001               	movlw	1	; select bank2/3
 13107  1F41  0087               	movwf	7
 13108  1F42  3001               	movlw	1
 13109  1F43  00B4               	movwf	??_del_dev
 13110  1F44  0A37               	incf	del_dev@x,w
 13111  1F45  2F47               	goto	u3454
 13112  1F46                     u3455:	
 13113  1F46  35B4               	lslf	??_del_dev,f
 13114  1F47                     u3454:	
 13115  1F47  0B89               	decfsz	9,f
 13116  1F48  2F46               	goto	u3455
 13117  1F49  0834               	movf	??_del_dev,w
 13118  1F4A  3AFF               	xorlw	255
 13119  1F4B  0501               	andwf	1,w
 13120  1F4C  00B5               	movwf	??_del_dev+1
 13121  1F4D  0835               	movf	??_del_dev+1,w
 13122  1F4E  00B9               	movwf	del_dev@new_map
 13123                           
 13124                           ;main.c: 158: if (old_map != new_map) {
 13125  1F4F  0838               	movf	del_dev@old_map,w
 13126  1F50  0639               	xorwf	del_dev@new_map,w
 13127  1F51  1903               	skipnz
 13128  1F52  0008               	return
 13129                           
 13130                           ;main.c: 159: dev_map[y] = new_map;
 13131  1F53  0839               	movf	del_dev@new_map,w
 13132  1F54  00B4               	movwf	??_del_dev
 13133  1F55  083A               	movf	del_dev@y,w
 13134  1F56  3E25               	addlw	(low (_dev_map| (0+256)))& (0+255)
 13135  1F57  0086               	movwf	6
 13136  1F58  3001               	movlw	1	; select bank2/3
 13137  1F59  0087               	movwf	7
 13138  1F5A  0834               	movf	??_del_dev,w
 13139  1F5B  0081               	movwf	1
 13140                           
 13141                           ;main.c: 160: devs--;
 13142  1F5C  3001               	movlw	1
 13143  1F5D  0022               	movlb	2	; select bank2
 13144  1F5E  02D0               	subwf	_devs^(0+256),f
 13145  1F5F  0008               	return
 13146  1F60                     __end_of_del_dev:	
 13147                           
 13148                           	psect	text54
 13149  1F60                     __ptext54:	
 13150 ;; *************** function _add_dev *****************
 13151 ;; Defined at:
 13152 ;;		line 135 in file "main.c"
 13153 ;; Parameters:    Size  Location     Type
 13154 ;;  dev_addr        1    wreg     unsigned char 
 13155 ;; Auto vars:     Size  Location     Type
 13156 ;;  dev_addr        1   27[BANK0 ] unsigned char 
 13157 ;;  y               1   26[BANK0 ] unsigned char 
 13158 ;;  new_map         1   25[BANK0 ] unsigned char 
 13159 ;;  old_map         1   24[BANK0 ] unsigned char 
 13160 ;;  x               1   23[BANK0 ] unsigned char 
 13161 ;; Return value:  Size  Location     Type
 13162 ;;                  1    wreg      void 
 13163 ;; Registers used:
 13164 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13165 ;; Tracked objects:
 13166 ;;		On entry : 0/0
 13167 ;;		On exit  : 0/0
 13168 ;;		Unchanged: 0/0
 13169 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13170 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13171 ;;      Locals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13172 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13173 ;;      Totals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13174 ;;Total ram usage:        8 bytes
 13175 ;; Hardware stack levels used:    1
 13176 ;; Hardware stack levels required when called:    4
 13177 ;; This function calls:
 13178 ;;		___awdiv
 13179 ;; This function is called by:
 13180 ;;		_scan_dev
 13181 ;; This function uses a non-reentrant model
 13182 ;;
 13183                           
 13184                           
 13185                           ;psect for function _add_dev
 13186  1F60                     _add_dev:	
 13187                           
 13188                           ;incstack = 0
 13189                           ; Regs used in _add_dev: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13190                           ;add_dev@dev_addr stored from wreg
 13191  1F60  0020               	movlb	0	; select bank0
 13192  1F61  00BB               	movwf	add_dev@dev_addr
 13193                           
 13194                           ;main.c: 136: uint8_t x, y;
 13195                           ;main.c: 137: uint8_t new_map, old_map;
 13196                           ;main.c: 138: if (dev_addr >= 1 && dev_addr <= 0x20) {
 13197  1F62  083B               	movf	add_dev@dev_addr,w
 13198  1F63  1903               	btfsc	3,2
 13199  1F64  0008               	return
 13200  1F65  3021               	movlw	33
 13201  1F66  023B               	subwf	add_dev@dev_addr,w
 13202  1F67  1803               	skipnc
 13203  1F68  0008               	return
 13204                           
 13205                           ;main.c: 139: y = dev_addr / 8;
 13206  1F69  3008               	movlw	8
 13207  1F6A  00AB               	movwf	___awdiv@divisor
 13208  1F6B  3000               	movlw	0
 13209  1F6C  00AC               	movwf	___awdiv@divisor+1
 13210  1F6D  083B               	movf	add_dev@dev_addr,w
 13211  1F6E  00B4               	movwf	??_add_dev
 13212  1F6F  01B5               	clrf	??_add_dev+1
 13213  1F70  0834               	movf	??_add_dev,w
 13214  1F71  00AD               	movwf	___awdiv@dividend
 13215  1F72  0835               	movf	??_add_dev+1,w
 13216  1F73  00AE               	movwf	___awdiv@dividend+1
 13217  1F74  319F  27AE  319F   	fcall	___awdiv
 13218  1F77  0020               	movlb	0	; select bank0
 13219  1F78  082B               	movf	?___awdiv,w
 13220  1F79  00B6               	movwf	??_add_dev+2
 13221  1F7A  0836               	movf	??_add_dev+2,w
 13222  1F7B  00BA               	movwf	add_dev@y
 13223                           
 13224                           ;main.c: 140: x = dev_addr % 8;
 13225  1F7C  083B               	movf	add_dev@dev_addr,w
 13226  1F7D  3907               	andlw	7
 13227  1F7E  00B4               	movwf	??_add_dev
 13228  1F7F  0834               	movf	??_add_dev,w
 13229  1F80  00B7               	movwf	add_dev@x
 13230                           
 13231                           ;main.c: 141: old_map = dev_map[y];
 13232  1F81  083A               	movf	add_dev@y,w
 13233  1F82  3E25               	addlw	(low (_dev_map| (0+256)))& (0+255)
 13234  1F83  0086               	movwf	6
 13235  1F84  3001               	movlw	1	; select bank2/3
 13236  1F85  0087               	movwf	7
 13237  1F86  0801               	movf	1,w
 13238  1F87  00B4               	movwf	??_add_dev
 13239  1F88  0834               	movf	??_add_dev,w
 13240  1F89  00B8               	movwf	add_dev@old_map
 13241                           
 13242                           ;main.c: 142: new_map = dev_map[y] | (0x01 << x);
 13243  1F8A  083A               	movf	add_dev@y,w
 13244  1F8B  3E25               	addlw	(low (_dev_map| (0+256)))& (0+255)
 13245  1F8C  0086               	movwf	6
 13246  1F8D  3001               	movlw	1	; select bank2/3
 13247  1F8E  0087               	movwf	7
 13248  1F8F  3001               	movlw	1
 13249  1F90  00B4               	movwf	??_add_dev
 13250  1F91  0A37               	incf	add_dev@x,w
 13251  1F92  2F94               	goto	u3414
 13252  1F93                     u3415:	
 13253  1F93  35B4               	lslf	??_add_dev,f
 13254  1F94                     u3414:	
 13255  1F94  0B89               	decfsz	9,f
 13256  1F95  2F93               	goto	u3415
 13257  1F96  0834               	movf	??_add_dev,w
 13258  1F97  0401               	iorwf	1,w
 13259  1F98  00B5               	movwf	??_add_dev+1
 13260  1F99  0835               	movf	??_add_dev+1,w
 13261  1F9A  00B9               	movwf	add_dev@new_map
 13262                           
 13263                           ;main.c: 143: if (old_map != new_map) {
 13264  1F9B  0838               	movf	add_dev@old_map,w
 13265  1F9C  0639               	xorwf	add_dev@new_map,w
 13266  1F9D  1903               	skipnz
 13267  1F9E  0008               	return
 13268                           
 13269                           ;main.c: 144: dev_map[y] = new_map;
 13270  1F9F  0839               	movf	add_dev@new_map,w
 13271  1FA0  00B4               	movwf	??_add_dev
 13272  1FA1  083A               	movf	add_dev@y,w
 13273  1FA2  3E25               	addlw	(low (_dev_map| (0+256)))& (0+255)
 13274  1FA3  0086               	movwf	6
 13275  1FA4  3001               	movlw	1	; select bank2/3
 13276  1FA5  0087               	movwf	7
 13277  1FA6  0834               	movf	??_add_dev,w
 13278  1FA7  0081               	movwf	1
 13279                           
 13280                           ;main.c: 145: devs++;
 13281  1FA8  3001               	movlw	1
 13282  1FA9  00B4               	movwf	??_add_dev
 13283  1FAA  0834               	movf	??_add_dev,w
 13284  1FAB  0022               	movlb	2	; select bank2
 13285  1FAC  07D0               	addwf	_devs^(0+256),f
 13286  1FAD  0008               	return
 13287  1FAE                     __end_of_add_dev:	
 13288                           
 13289                           	psect	text55
 13290  1FAE                     __ptext55:	
 13291 ;; *************** function ___awdiv *****************
 13292 ;; Defined at:
 13293 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\awdiv.c"
 13294 ;; Parameters:    Size  Location     Type
 13295 ;;  divisor         2   11[BANK0 ] int 
 13296 ;;  dividend        2   13[BANK0 ] int 
 13297 ;; Auto vars:     Size  Location     Type
 13298 ;;  quotient        2   18[BANK0 ] int 
 13299 ;;  sign            1   17[BANK0 ] unsigned char 
 13300 ;;  counter         1   16[BANK0 ] unsigned char 
 13301 ;; Return value:  Size  Location     Type
 13302 ;;                  2   11[BANK0 ] int 
 13303 ;; Registers used:
 13304 ;;		wreg, status,2, status,0
 13305 ;; Tracked objects:
 13306 ;;		On entry : 0/0
 13307 ;;		On exit  : 0/0
 13308 ;;		Unchanged: 0/0
 13309 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13310 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13311 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13312 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13313 ;;      Totals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13314 ;;Total ram usage:        9 bytes
 13315 ;; Hardware stack levels used:    1
 13316 ;; Hardware stack levels required when called:    3
 13317 ;; This function calls:
 13318 ;;		Nothing
 13319 ;; This function is called by:
 13320 ;;		_init
 13321 ;;		_add_dev
 13322 ;;		_del_dev
 13323 ;;		_detected
 13324 ;;		_edge_meter
 13325 ;;		_command_handler
 13326 ;;		_PROTOCOL_Print_TLV
 13327 ;; This function uses a non-reentrant model
 13328 ;;
 13329                           
 13330                           
 13331                           ;psect for function ___awdiv
 13332  1FAE                     ___awdiv:	
 13333                           
 13334                           ;incstack = 0
 13335                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
 13336  1FAE  0020               	movlb	0	; select bank0
 13337  1FAF  01B1               	clrf	___awdiv@sign
 13338  1FB0  1FAC               	btfss	___awdiv@divisor+1,7
 13339  1FB1  2FB9               	goto	l3587
 13340  1FB2  09AB               	comf	___awdiv@divisor,f
 13341  1FB3  09AC               	comf	___awdiv@divisor+1,f
 13342  1FB4  0AAB               	incf	___awdiv@divisor,f
 13343  1FB5  1903               	skipnz
 13344  1FB6  0AAC               	incf	___awdiv@divisor+1,f
 13345  1FB7  01B1               	clrf	___awdiv@sign
 13346  1FB8  0AB1               	incf	___awdiv@sign,f
 13347  1FB9                     l3587:	
 13348  1FB9  1FAE               	btfss	___awdiv@dividend+1,7
 13349  1FBA  2FC4               	goto	l3593
 13350  1FBB  09AD               	comf	___awdiv@dividend,f
 13351  1FBC  09AE               	comf	___awdiv@dividend+1,f
 13352  1FBD  0AAD               	incf	___awdiv@dividend,f
 13353  1FBE  1903               	skipnz
 13354  1FBF  0AAE               	incf	___awdiv@dividend+1,f
 13355  1FC0  3001               	movlw	1
 13356  1FC1  00AF               	movwf	??___awdiv
 13357  1FC2  082F               	movf	??___awdiv,w
 13358  1FC3  06B1               	xorwf	___awdiv@sign,f
 13359  1FC4                     l3593:	
 13360  1FC4  01B2               	clrf	___awdiv@quotient
 13361  1FC5  01B3               	clrf	___awdiv@quotient+1
 13362  1FC6  082B               	movf	___awdiv@divisor,w
 13363  1FC7  042C               	iorwf	___awdiv@divisor+1,w
 13364  1FC8  1903               	btfsc	3,2
 13365  1FC9  2FF3               	goto	l3615
 13366  1FCA  01B0               	clrf	___awdiv@counter
 13367  1FCB  0AB0               	incf	___awdiv@counter,f
 13368  1FCC                     l3603:	
 13369  1FCC  1BAC               	btfsc	___awdiv@divisor+1,7
 13370  1FCD  2FD8               	goto	l3605
 13371  1FCE  3001               	movlw	1
 13372  1FCF                     u3155:	
 13373  1FCF  35AB               	lslf	___awdiv@divisor,f
 13374  1FD0  0DAC               	rlf	___awdiv@divisor+1,f
 13375  1FD1  0B89               	decfsz	9,f
 13376  1FD2  2FCF               	goto	u3155
 13377  1FD3  3001               	movlw	1
 13378  1FD4  00AF               	movwf	??___awdiv
 13379  1FD5  082F               	movf	??___awdiv,w
 13380  1FD6  07B0               	addwf	___awdiv@counter,f
 13381  1FD7  2FCC               	goto	l3603
 13382  1FD8                     l3605:	
 13383  1FD8  3001               	movlw	1
 13384  1FD9                     u3175:	
 13385  1FD9  35B2               	lslf	___awdiv@quotient,f
 13386  1FDA  0DB3               	rlf	___awdiv@quotient+1,f
 13387  1FDB  0B89               	decfsz	9,f
 13388  1FDC  2FD9               	goto	u3175
 13389  1FDD  082C               	movf	___awdiv@divisor+1,w
 13390  1FDE  022E               	subwf	___awdiv@dividend+1,w
 13391  1FDF  1D03               	skipz
 13392  1FE0  2FE3               	goto	u3185
 13393  1FE1  082B               	movf	___awdiv@divisor,w
 13394  1FE2  022D               	subwf	___awdiv@dividend,w
 13395  1FE3                     u3185:	
 13396  1FE3  1C03               	skipc
 13397  1FE4  2FEA               	goto	l3611
 13398  1FE5  082B               	movf	___awdiv@divisor,w
 13399  1FE6  02AD               	subwf	___awdiv@dividend,f
 13400  1FE7  082C               	movf	___awdiv@divisor+1,w
 13401  1FE8  3BAE               	subwfb	___awdiv@dividend+1,f
 13402  1FE9  1432               	bsf	___awdiv@quotient,0
 13403  1FEA                     l3611:	
 13404  1FEA  3001               	movlw	1
 13405  1FEB                     u3195:	
 13406  1FEB  36AC               	lsrf	___awdiv@divisor+1,f
 13407  1FEC  0CAB               	rrf	___awdiv@divisor,f
 13408  1FED  0B89               	decfsz	9,f
 13409  1FEE  2FEB               	goto	u3195
 13410  1FEF  3001               	movlw	1
 13411  1FF0  02B0               	subwf	___awdiv@counter,f
 13412  1FF1  1D03               	btfss	3,2
 13413  1FF2  2FD8               	goto	l3605
 13414  1FF3                     l3615:	
 13415  1FF3  0831               	movf	___awdiv@sign,w
 13416  1FF4  1903               	btfsc	3,2
 13417  1FF5  2FFB               	goto	l3619
 13418  1FF6  09B2               	comf	___awdiv@quotient,f
 13419  1FF7  09B3               	comf	___awdiv@quotient+1,f
 13420  1FF8  0AB2               	incf	___awdiv@quotient,f
 13421  1FF9  1903               	skipnz
 13422  1FFA  0AB3               	incf	___awdiv@quotient+1,f
 13423  1FFB                     l3619:	
 13424  1FFB  0833               	movf	___awdiv@quotient+1,w
 13425  1FFC  00AC               	movwf	?___awdiv+1
 13426  1FFD  0832               	movf	___awdiv@quotient,w
 13427  1FFE  00AB               	movwf	?___awdiv
 13428  1FFF  0008               	return
 13429  2000                     __end_of___awdiv:	
 13430                           
 13431                           	psect	text56
 13432  1D28                     __ptext56:	
 13433 ;; *************** function _i2c1_write_no_data *****************
 13434 ;; Defined at:
 13435 ;;		line 49 in file "i2c1_util.c"
 13436 ;; Parameters:    Size  Location     Type
 13437 ;;  dev_addr        2   14[BANK0 ] unsigned int 
 13438 ;;  reg_addr        1   16[BANK0 ] unsigned char 
 13439 ;; Auto vars:     Size  Location     Type
 13440 ;;  status          1   20[BANK0 ] enum E3078
 13441 ;;  buf             1   19[BANK0 ] unsigned char [1]
 13442 ;;  write_status    1   18[BANK0 ] unsigned char 
 13443 ;; Return value:  Size  Location     Type
 13444 ;;                  1    wreg      unsigned char 
 13445 ;; Registers used:
 13446 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13447 ;; Tracked objects:
 13448 ;;		On entry : 0/0
 13449 ;;		On exit  : 0/0
 13450 ;;		Unchanged: 0/0
 13451 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13452 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13453 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13454 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13455 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13456 ;;Total ram usage:        7 bytes
 13457 ;; Hardware stack levels used:    1
 13458 ;; Hardware stack levels required when called:    5
 13459 ;; This function calls:
 13460 ;;		_I2C1_MasterWrite
 13461 ;; This function is called by:
 13462 ;;		_exec_remote_cmd
 13463 ;;		_check_plg
 13464 ;;		_sen
 13465 ;;		_fetch
 13466 ;; This function uses a non-reentrant model
 13467 ;;
 13468                           
 13469                           
 13470                           ;psect for function _i2c1_write_no_data
 13471  1D28                     _i2c1_write_no_data:	
 13472                           
 13473                           ;i2c1_util.c: 51: uint8_t buf[1];
 13474                           ;i2c1_util.c: 52: I2C1_MESSAGE_STATUS status;
 13475                           ;i2c1_util.c: 53: uint8_t write_status;
 13476                           ;i2c1_util.c: 54: buf[0] = reg_addr;
 13477                           
 13478                           ;incstack = 0
 13479                           ; Regs used in _i2c1_write_no_data: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13480  1D28  0020               	movlb	0	; select bank0
 13481  1D29  0830               	movf	i2c1_write_no_data@reg_addr,w
 13482  1D2A  00B1               	movwf	??_i2c1_write_no_data
 13483  1D2B  0831               	movf	??_i2c1_write_no_data,w
 13484  1D2C  00B3               	movwf	i2c1_write_no_data@buf
 13485                           
 13486                           ;i2c1_util.c: 55: _delay((unsigned long)((100)*(32000000/4000000.0)));
 13487  1D2D  30A0               	movlw	160
 13488  1D2E                     u7197:	
 13489  1D2E  3200               	nop2
 13490  1D2F  0B89               	decfsz	9,f
 13491  1D30  2D2E               	goto	u7197
 13492                           
 13493                           ;i2c1_util.c: 56: I2C1_MasterWrite(buf, 1, dev_addr, &status);
 13494  1D31  0020               	movlb	0	; select bank0
 13495  1D32  01A7               	clrf	I2C1_MasterWrite@length
 13496  1D33  0AA7               	incf	I2C1_MasterWrite@length,f
 13497  1D34  082F               	movf	i2c1_write_no_data@dev_addr+1,w
 13498  1D35  00A9               	movwf	I2C1_MasterWrite@address+1
 13499  1D36  082E               	movf	i2c1_write_no_data@dev_addr,w
 13500  1D37  00A8               	movwf	I2C1_MasterWrite@address
 13501  1D38  3034               	movlw	(low (i2c1_write_no_data@status| 0))& (0+255)
 13502  1D39  00B1               	movwf	??_i2c1_write_no_data
 13503  1D3A  0831               	movf	??_i2c1_write_no_data,w
 13504  1D3B  00AA               	movwf	I2C1_MasterWrite@pflag
 13505  1D3C  3033               	movlw	(low (i2c1_write_no_data@buf| 0))& (0+255)
 13506  1D3D  319C  24FE  319D   	fcall	_I2C1_MasterWrite
 13507  1D40                     l3931:	
 13508                           ;i2c1_util.c: 57: while (status == I2C1_MESSAGE_PENDING) {_delay((unsigned long)((100)*(
      +                          32000000/4000000.0)));};
 13509                           
 13510  1D40  3002               	movlw	2
 13511  1D41  0020               	movlb	0	; select bank0
 13512  1D42  0634               	xorwf	i2c1_write_no_data@status,w
 13513  1D43  1D03               	btfss	3,2
 13514  1D44  2D4A               	goto	l3933
 13515  1D45  30A0               	movlw	160
 13516  1D46                     u7207:	
 13517  1D46  3200               	nop2
 13518  1D47  0B89               	decfsz	9,f
 13519  1D48  2D46               	goto	u7207
 13520  1D49  2D40               	goto	l3931
 13521  1D4A                     l3933:	
 13522                           
 13523                           ;i2c1_util.c: 58: if (status == I2C1_MESSAGE_COMPLETE) {
 13524  1D4A  0834               	movf	i2c1_write_no_data@status,w
 13525  1D4B  1D03               	btfss	3,2
 13526  1D4C  2D4F               	goto	l666
 13527                           
 13528                           ;i2c1_util.c: 59: write_status = 0;
 13529  1D4D  01B2               	clrf	i2c1_write_no_data@write_status
 13530                           
 13531                           ;i2c1_util.c: 60: } else {
 13532  1D4E  2D51               	goto	l3937
 13533  1D4F                     l666:	
 13534                           
 13535                           ;i2c1_util.c: 61: write_status = 1;
 13536  1D4F  01B2               	clrf	i2c1_write_no_data@write_status
 13537  1D50  0AB2               	incf	i2c1_write_no_data@write_status,f
 13538  1D51                     l3937:	
 13539                           
 13540                           ;i2c1_util.c: 62: }
 13541                           ;i2c1_util.c: 63: return write_status;
 13542  1D51  0832               	movf	i2c1_write_no_data@write_status,w
 13543  1D52  0008               	return
 13544  1D53                     __end_of_i2c1_write_no_data:	
 13545                           
 13546                           	psect	text57
 13547  1CFE                     __ptext57:	
 13548 ;; *************** function _I2C1_MasterWrite *****************
 13549 ;; Defined at:
 13550 ;;		line 598 in file "mcc_generated_files/i2c1.c"
 13551 ;; Parameters:    Size  Location     Type
 13552 ;;  pdata           1    wreg     PTR unsigned char 
 13553 ;;		 -> i2c1_write_no_data@buf(1), i2c1_read@reg(1), exec_remote_cmd@send_buf(50), 
 13554 ;;  length          1    7[BANK0 ] unsigned char 
 13555 ;;  address         2    8[BANK0 ] unsigned int 
 13556 ;;  pflag           1   10[BANK0 ] PTR enum E2972
 13557 ;;		 -> i2c1_write_no_data@status(1), i2c1_read@status(1), i2c1_write@status(1), 
 13558 ;; Auto vars:     Size  Location     Type
 13559 ;;  pdata           1   13[BANK0 ] PTR unsigned char 
 13560 ;;		 -> i2c1_write_no_data@buf(1), i2c1_read@reg(1), exec_remote_cmd@send_buf(50), 
 13561 ;; Return value:  Size  Location     Type
 13562 ;;                  1    wreg      void 
 13563 ;; Registers used:
 13564 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13565 ;; Tracked objects:
 13566 ;;		On entry : 0/0
 13567 ;;		On exit  : 0/0
 13568 ;;		Unchanged: 0/0
 13569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13570 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13571 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13572 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13573 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13574 ;;Total ram usage:        7 bytes
 13575 ;; Hardware stack levels used:    1
 13576 ;; Hardware stack levels required when called:    4
 13577 ;; This function calls:
 13578 ;;		_I2C1_MasterTRBInsert
 13579 ;;		_I2C1_MasterWriteTRBBuild
 13580 ;; This function is called by:
 13581 ;;		_i2c1_write
 13582 ;;		_i2c1_read
 13583 ;;		_i2c1_write_no_data
 13584 ;; This function uses a non-reentrant model
 13585 ;;
 13586                           
 13587                           
 13588                           ;psect for function _I2C1_MasterWrite
 13589  1CFE                     _I2C1_MasterWrite:	
 13590                           
 13591                           ;incstack = 0
 13592                           ; Regs used in _I2C1_MasterWrite: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13593                           ;I2C1_MasterWrite@pdata stored from wreg
 13594  1CFE  0020               	movlb	0	; select bank0
 13595  1CFF  00AD               	movwf	I2C1_MasterWrite@pdata
 13596                           
 13597                           ;i2c1.c: 604: static I2C1_TRANSACTION_REQUEST_BLOCK trBlock;
 13598                           ;i2c1.c: 607: if (i2c1_object.trStatus.s.full != 1)
 13599  1D00  0022               	movlb	2	; select bank2
 13600  1D01  1822               	btfsc	(_i2c1_object^(0+256)+2),0
 13601  1D02  2D21               	goto	l3543
 13602                           
 13603                           ;i2c1.c: 608: {
 13604                           ;i2c1.c: 609: I2C1_MasterWriteTRBBuild(&trBlock, pdata, length, address);
 13605  1D03  0020               	movlb	0	; select bank0
 13606  1D04  082D               	movf	I2C1_MasterWrite@pdata,w
 13607  1D05  00AB               	movwf	??_I2C1_MasterWrite
 13608  1D06  082B               	movf	??_I2C1_MasterWrite,w
 13609  1D07  00A0               	movwf	I2C1_MasterWriteTRBBuild@pdata
 13610  1D08  0827               	movf	I2C1_MasterWrite@length,w
 13611  1D09  00AC               	movwf	??_I2C1_MasterWrite+1
 13612  1D0A  082C               	movf	??_I2C1_MasterWrite+1,w
 13613  1D0B  00A1               	movwf	I2C1_MasterWriteTRBBuild@length
 13614  1D0C  0829               	movf	I2C1_MasterWrite@address+1,w
 13615  1D0D  00A3               	movwf	I2C1_MasterWriteTRBBuild@address+1
 13616  1D0E  0828               	movf	I2C1_MasterWrite@address,w
 13617  1D0F  00A2               	movwf	I2C1_MasterWriteTRBBuild@address
 13618  1D10  30D7               	movlw	(low (I2C1_MasterWrite@trBlock| (0+256)))& (0+255)
 13619  1D11  319C  2464  319C   	fcall	_I2C1_MasterWriteTRBBuild
 13620                           
 13621                           ;i2c1.c: 610: I2C1_MasterTRBInsert(1, &trBlock, pflag);
 13622  1D14  30D7               	movlw	(low (I2C1_MasterWrite@trBlock| (0+256)))& (0+255)
 13623  1D15  0020               	movlb	0	; select bank0
 13624  1D16  00AB               	movwf	??_I2C1_MasterWrite
 13625  1D17  082B               	movf	??_I2C1_MasterWrite,w
 13626  1D18  00A0               	movwf	I2C1_MasterTRBInsert@ptrb_list
 13627  1D19  082A               	movf	I2C1_MasterWrite@pflag,w
 13628  1D1A  00AC               	movwf	??_I2C1_MasterWrite+1
 13629  1D1B  082C               	movf	??_I2C1_MasterWrite+1,w
 13630  1D1C  00A1               	movwf	I2C1_MasterTRBInsert@pflag
 13631  1D1D  3001               	movlw	1
 13632  1D1E  3192  22E4         	fcall	_I2C1_MasterTRBInsert
 13633                           
 13634                           ;i2c1.c: 611: }
 13635  1D20  0008               	return
 13636  1D21                     l3543:	
 13637                           
 13638                           ;i2c1.c: 612: else
 13639                           ;i2c1.c: 613: {
 13640                           ;i2c1.c: 614: *pflag = I2C1_MESSAGE_FAIL;
 13641  1D21  0020               	movlb	0	; select bank0
 13642  1D22  082A               	movf	I2C1_MasterWrite@pflag,w
 13643  1D23  0086               	movwf	6
 13644  1D24  0187               	clrf	7
 13645  1D25  0181               	clrf	1
 13646  1D26  0A81               	incf	1,f
 13647  1D27  0008               	return
 13648  1D28                     __end_of_I2C1_MasterWrite:	
 13649                           
 13650                           	psect	text58
 13651  1C64                     __ptext58:	
 13652 ;; *************** function _I2C1_MasterWriteTRBBuild *****************
 13653 ;; Defined at:
 13654 ;;		line 707 in file "mcc_generated_files/i2c1.c"
 13655 ;; Parameters:    Size  Location     Type
 13656 ;;  ptrb            1    wreg     PTR struct .
 13657 ;;		 -> I2C1_MasterWrite@trBlock(5), 
 13658 ;;  pdata           1    0[BANK0 ] PTR unsigned char 
 13659 ;;		 -> i2c1_write_no_data@buf(1), i2c1_read@reg(1), exec_remote_cmd@send_buf(50), 
 13660 ;;  length          1    1[BANK0 ] unsigned char 
 13661 ;;  address         2    2[BANK0 ] unsigned int 
 13662 ;; Auto vars:     Size  Location     Type
 13663 ;;  ptrb            1    6[BANK0 ] PTR struct .
 13664 ;;		 -> I2C1_MasterWrite@trBlock(5), 
 13665 ;; Return value:  Size  Location     Type
 13666 ;;                  1    wreg      void 
 13667 ;; Registers used:
 13668 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13669 ;; Tracked objects:
 13670 ;;		On entry : 0/0
 13671 ;;		On exit  : 0/0
 13672 ;;		Unchanged: 0/0
 13673 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13674 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13675 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13676 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13677 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13678 ;;Total ram usage:        7 bytes
 13679 ;; Hardware stack levels used:    1
 13680 ;; Hardware stack levels required when called:    3
 13681 ;; This function calls:
 13682 ;;		Nothing
 13683 ;; This function is called by:
 13684 ;;		_I2C1_MasterWrite
 13685 ;; This function uses a non-reentrant model
 13686 ;;
 13687                           
 13688                           
 13689                           ;psect for function _I2C1_MasterWriteTRBBuild
 13690  1C64                     _I2C1_MasterWriteTRBBuild:	
 13691                           
 13692                           ;incstack = 0
 13693                           ; Regs used in _I2C1_MasterWriteTRBBuild: [wreg+fsr1l+fsr1h+status,2+status,0]
 13694                           ;I2C1_MasterWriteTRBBuild@ptrb stored from wreg
 13695  1C64  0020               	movlb	0	; select bank0
 13696  1C65  00A6               	movwf	I2C1_MasterWriteTRBBuild@ptrb
 13697                           
 13698                           ;i2c1.c: 713: ptrb->address = address << 1;
 13699  1C66  0823               	movf	I2C1_MasterWriteTRBBuild@address+1,w
 13700  1C67  00A5               	movwf	??_I2C1_MasterWriteTRBBuild+1
 13701  1C68  0822               	movf	I2C1_MasterWriteTRBBuild@address,w
 13702  1C69  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
 13703  1C6A  35A4               	lslf	??_I2C1_MasterWriteTRBBuild,f
 13704  1C6B  0DA5               	rlf	??_I2C1_MasterWriteTRBBuild+1,f
 13705  1C6C  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
 13706  1C6D  0086               	movwf	6
 13707  1C6E  3001               	movlw	1	; select bank2/3
 13708  1C6F  0087               	movwf	7
 13709  1C70  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
 13710  1C71  3FC0               	movwi [0]fsr1
 13711  1C72  0825               	movf	??_I2C1_MasterWriteTRBBuild+1,w
 13712  1C73  3FC1               	movwi [1]fsr1
 13713                           
 13714                           ;i2c1.c: 714: ptrb->length = length;
 13715  1C74  0821               	movf	I2C1_MasterWriteTRBBuild@length,w
 13716  1C75  00A4               	movwf	??_I2C1_MasterWriteTRBBuild
 13717  1C76  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
 13718  1C77  3E02               	addlw	2
 13719  1C78  0086               	movwf	6
 13720  1C79  3001               	movlw	1	; select bank2/3
 13721  1C7A  0087               	movwf	7
 13722  1C7B  0824               	movf	??_I2C1_MasterWriteTRBBuild,w
 13723  1C7C  0081               	movwf	1
 13724                           
 13725                           ;i2c1.c: 715: ptrb->pbuffer = pdata;
 13726  1C7D  0826               	movf	I2C1_MasterWriteTRBBuild@ptrb,w
 13727  1C7E  3E03               	addlw	3
 13728  1C7F  0086               	movwf	6
 13729  1C80  3001               	movlw	1	; select bank2/3
 13730  1C81  0087               	movwf	7
 13731  1C82  0820               	movf	I2C1_MasterWriteTRBBuild@pdata,w
 13732  1C83  3FC0               	movwi [0]fsr1
 13733  1C84  3000               	movlw	0
 13734  1C85  3FC1               	movwi [1]fsr1
 13735  1C86  0008               	return
 13736  1C87                     __end_of_I2C1_MasterWriteTRBBuild:	
 13737                           
 13738                           	psect	text59
 13739  12E4                     __ptext59:	
 13740 ;; *************** function _I2C1_MasterTRBInsert *****************
 13741 ;; Defined at:
 13742 ;;		line 641 in file "mcc_generated_files/i2c1.c"
 13743 ;; Parameters:    Size  Location     Type
 13744 ;;  count           1    wreg     unsigned char 
 13745 ;;  ptrb_list       1    0[BANK0 ] PTR struct .
 13746 ;;		 -> I2C1_MasterRead@trBlock(5), I2C1_MasterWrite@trBlock(5), 
 13747 ;;  pflag           1    1[BANK0 ] PTR enum E2972
 13748 ;;		 -> i2c1_write_no_data@status(1), i2c1_read@status(1), i2c1_write@status(1), 
 13749 ;; Auto vars:     Size  Location     Type
 13750 ;;  count           1    3[BANK0 ] unsigned char 
 13751 ;; Return value:  Size  Location     Type
 13752 ;;                  1    wreg      void 
 13753 ;; Registers used:
 13754 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 13755 ;; Tracked objects:
 13756 ;;		On entry : 0/0
 13757 ;;		On exit  : 0/0
 13758 ;;		Unchanged: 0/0
 13759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13760 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13761 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13762 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13763 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13764 ;;Total ram usage:        4 bytes
 13765 ;; Hardware stack levels used:    1
 13766 ;; Hardware stack levels required when called:    3
 13767 ;; This function calls:
 13768 ;;		Nothing
 13769 ;; This function is called by:
 13770 ;;		_I2C1_MasterWrite
 13771 ;;		_I2C1_MasterRead
 13772 ;; This function uses a non-reentrant model
 13773 ;;
 13774                           
 13775                           
 13776                           ;psect for function _I2C1_MasterTRBInsert
 13777  12E4                     _I2C1_MasterTRBInsert:	
 13778                           
 13779                           ;incstack = 0
 13780                           ; Regs used in _I2C1_MasterTRBInsert: [wreg+fsr1l+fsr1h+status,2+status,0]
 13781                           ;I2C1_MasterTRBInsert@count stored from wreg
 13782  12E4  0020               	movlb	0	; select bank0
 13783  12E5  00A3               	movwf	I2C1_MasterTRBInsert@count
 13784                           
 13785                           ;i2c1.c: 648: if (i2c1_object.trStatus.s.full != 1)
 13786  12E6  0022               	movlb	2	; select bank2
 13787  12E7  1822               	btfsc	(_i2c1_object^(0+256)+2),0
 13788  12E8  2B26               	goto	l3511
 13789                           
 13790                           ;i2c1.c: 649: {
 13791                           ;i2c1.c: 650: *pflag = I2C1_MESSAGE_PENDING;
 13792  12E9  3002               	movlw	2
 13793  12EA  0020               	movlb	0	; select bank0
 13794  12EB  00A2               	movwf	??_I2C1_MasterTRBInsert
 13795  12EC  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 13796  12ED  0086               	movwf	6
 13797  12EE  0187               	clrf	7
 13798  12EF  0822               	movf	??_I2C1_MasterTRBInsert,w
 13799  12F0  0081               	movwf	1
 13800                           
 13801                           ;i2c1.c: 652: i2c1_object.pTrTail->ptrb_list = ptrb_list;
 13802  12F1  0820               	movf	I2C1_MasterTRBInsert@ptrb_list,w
 13803  12F2  00A2               	movwf	??_I2C1_MasterTRBInsert
 13804  12F3  0022               	movlb	2	; select bank2
 13805  12F4  0A20               	incf	_i2c1_object^(0+256),w
 13806  12F5  0086               	movwf	6
 13807  12F6  3001               	movlw	1	; select bank2/3
 13808  12F7  0087               	movwf	7
 13809  12F8  0020               	movlb	0	; select bank0
 13810  12F9  0822               	movf	??_I2C1_MasterTRBInsert,w
 13811  12FA  0081               	movwf	1
 13812                           
 13813                           ;i2c1.c: 653: i2c1_object.pTrTail->count = count;
 13814  12FB  0823               	movf	I2C1_MasterTRBInsert@count,w
 13815  12FC  00A2               	movwf	??_I2C1_MasterTRBInsert
 13816  12FD  0022               	movlb	2	; select bank2
 13817  12FE  0820               	movf	_i2c1_object^(0+256),w
 13818  12FF  0086               	movwf	6
 13819  1300  3001               	movlw	1	; select bank2/3
 13820  1301  0087               	movwf	7
 13821  1302  0020               	movlb	0	; select bank0
 13822  1303  0822               	movf	??_I2C1_MasterTRBInsert,w
 13823  1304  0081               	movwf	1
 13824                           
 13825                           ;i2c1.c: 654: i2c1_object.pTrTail->pTrFlag = pflag;
 13826  1305  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 13827  1306  00A2               	movwf	??_I2C1_MasterTRBInsert
 13828  1307  0022               	movlb	2	; select bank2
 13829  1308  0820               	movf	_i2c1_object^(0+256),w
 13830  1309  3E02               	addlw	2
 13831  130A  0086               	movwf	6
 13832  130B  3001               	movlw	1	; select bank2/3
 13833  130C  0087               	movwf	7
 13834  130D  0020               	movlb	0	; select bank0
 13835  130E  0822               	movf	??_I2C1_MasterTRBInsert,w
 13836  130F  0081               	movwf	1
 13837                           
 13838                           ;i2c1.c: 655: i2c1_object.pTrTail++;
 13839  1310  3003               	movlw	3
 13840  1311  00A2               	movwf	??_I2C1_MasterTRBInsert
 13841  1312  0822               	movf	??_I2C1_MasterTRBInsert,w
 13842  1313  0022               	movlb	2	; select bank2
 13843  1314  07A0               	addwf	_i2c1_object^(0+256),f
 13844                           
 13845                           ;i2c1.c: 658: if (i2c1_object.pTrTail == (i2c1_tr_queue + 1))
 13846  1315  0820               	movf	_i2c1_object^(0+256),w
 13847  1316  3A62               	xorlw	(low ((_i2c1_tr_queue| (0+256)+3)))& (0+255)
 13848  1317  1D03               	skipz
 13849  1318  2B1F               	goto	l3507
 13850                           
 13851                           ;i2c1.c: 659: {
 13852                           ;i2c1.c: 661: i2c1_object.pTrTail = i2c1_tr_queue;
 13853  1319  305F               	movlw	(low (_i2c1_tr_queue| (0+256)))& (0+255)
 13854  131A  0020               	movlb	0	; select bank0
 13855  131B  00A2               	movwf	??_I2C1_MasterTRBInsert
 13856  131C  0822               	movf	??_I2C1_MasterTRBInsert,w
 13857  131D  0022               	movlb	2	; select bank2
 13858  131E  00A0               	movwf	_i2c1_object^(0+256)
 13859  131F                     l3507:	
 13860                           
 13861                           ;i2c1.c: 662: }
 13862                           ;i2c1.c: 666: i2c1_object.trStatus.s.empty = 0;
 13863  131F  10A2               	bcf	(_i2c1_object^(0+256)+2),1
 13864                           
 13865                           ;i2c1.c: 669: if (i2c1_object.pTrHead == i2c1_object.pTrTail)
 13866  1320  0821               	movf	(low ((_i2c1_object| (0+256)+1)))^0,w
 13867  1321  0620               	xorwf	_i2c1_object^(0+256),w
 13868  1322  1D03               	skipz
 13869  1323  2B2C               	goto	l3513
 13870                           
 13871                           ;i2c1.c: 670: {
 13872                           ;i2c1.c: 672: i2c1_object.trStatus.s.full = 1;
 13873  1324  1422               	bsf	(_i2c1_object^(0+256)+2),0
 13874                           
 13875                           ;i2c1.c: 673: }
 13876                           ;i2c1.c: 675: }
 13877  1325  2B2C               	goto	l3513
 13878  1326                     l3511:	
 13879                           
 13880                           ;i2c1.c: 676: else
 13881                           ;i2c1.c: 677: {
 13882                           ;i2c1.c: 678: *pflag = I2C1_MESSAGE_FAIL;
 13883  1326  0020               	movlb	0	; select bank0
 13884  1327  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 13885  1328  0086               	movwf	6
 13886  1329  0187               	clrf	7
 13887  132A  0181               	clrf	1
 13888  132B  0A81               	incf	1,f
 13889  132C                     l3513:	
 13890                           
 13891                           ;i2c1.c: 679: }
 13892                           ;i2c1.c: 682: if (*pflag == I2C1_MESSAGE_PENDING)
 13893  132C  0020               	movlb	0	; select bank0
 13894  132D  0821               	movf	I2C1_MasterTRBInsert@pflag,w
 13895  132E  0086               	movwf	6
 13896  132F  0187               	clrf	7
 13897  1330  3002               	movlw	2
 13898  1331  0601               	xorwf	1,w
 13899  1332  1D03               	btfss	3,2
 13900  1333  0008               	return
 13901  1334                     l3517:	
 13902                           ;i2c1.c: 683: {
 13903                           ;i2c1.c: 684: while(i2c1_state != S_MASTER_IDLE);
 13904                           
 13905  1334  0022               	movlb	2	; select bank2
 13906  1335  085E               	movf	_i2c1_state^(0+256),w
 13907  1336  1D03               	btfss	3,2
 13908  1337  2B34               	goto	l3517
 13909                           
 13910                           ;i2c1.c: 685: {
 13911                           ;i2c1.c: 688: PIR1bits.SSP1IF = 1;
 13912  1338  0020               	movlb	0	; select bank0
 13913  1339  1591               	bsf	17,3	;volatile
 13914  133A  0008               	return
 13915  133B                     __end_of_I2C1_MasterTRBInsert:	
 13916                           
 13917                           	psect	text60
 13918  1451                     __ptext60:	
 13919 ;; *************** function _atoi *****************
 13920 ;; Defined at:
 13921 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\atoi.c"
 13922 ;; Parameters:    Size  Location     Type
 13923 ;;  s               2    6[BANK0 ] PTR const unsigned char 
 13924 ;;		 -> buf(48), edge_meter@buf(48), cmd_buf(192), 
 13925 ;; Auto vars:     Size  Location     Type
 13926 ;;  a               2   11[BANK0 ] int 
 13927 ;;  sign            1   10[BANK0 ] unsigned char 
 13928 ;; Return value:  Size  Location     Type
 13929 ;;                  2    6[BANK0 ] int 
 13930 ;; Registers used:
 13931 ;;		wreg, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 13932 ;; Tracked objects:
 13933 ;;		On entry : 0/0
 13934 ;;		On exit  : 0/0
 13935 ;;		Unchanged: 0/0
 13936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 13937 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13938 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13939 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13940 ;;      Totals:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0
 13941 ;;Total ram usage:        7 bytes
 13942 ;; Hardware stack levels used:    1
 13943 ;; Hardware stack levels required when called:    4
 13944 ;; This function calls:
 13945 ;;		___wmul
 13946 ;;		_isdigit
 13947 ;; This function is called by:
 13948 ;;		_exec_remote_cmd
 13949 ;;		_command_handler
 13950 ;;		_PROTOCOL_Loop
 13951 ;; This function uses a non-reentrant model
 13952 ;;
 13953                           
 13954                           
 13955                           ;psect for function _atoi
 13956  1451                     _atoi:	
 13957  1451                     l4031:	
 13958                           ;incstack = 0
 13959                           ; Regs used in _atoi: [wreg+fsr1l+fsr1h+status,2+status,0+pclath+cstack]
 13960                           
 13961  1451  0020               	movlb	0	; select bank0
 13962  1452  0826               	movf	atoi@s,w
 13963  1453  0086               	movwf	6
 13964  1454  0827               	movf	atoi@s+1,w
 13965  1455  0087               	movwf	7
 13966  1456  3020               	movlw	32
 13967  1457  0601               	xorwf	1,w
 13968  1458  1D03               	btfss	3,2
 13969  1459  2C60               	goto	l4033
 13970  145A                     l4029:	
 13971  145A  3001               	movlw	1
 13972  145B  0020               	movlb	0	; select bank0
 13973  145C  07A6               	addwf	atoi@s,f
 13974  145D  3000               	movlw	0
 13975  145E  3DA7               	addwfc	atoi@s+1,f
 13976  145F  2C51               	goto	l4031
 13977  1460                     l4033:	
 13978  1460  0826               	movf	atoi@s,w
 13979  1461  0086               	movwf	6
 13980  1462  0827               	movf	atoi@s+1,w
 13981  1463  0087               	movwf	7
 13982  1464  3009               	movlw	9
 13983  1465  0601               	xorwf	1,w
 13984  1466  1903               	btfsc	3,2
 13985  1467  2C5A               	goto	l4029
 13986  1468  01AB               	clrf	atoi@a
 13987  1469  01AC               	clrf	atoi@a+1
 13988  146A  01AA               	clrf	atoi@sign
 13989  146B  0826               	movf	atoi@s,w
 13990  146C  0086               	movwf	6
 13991  146D  0827               	movf	atoi@s+1,w
 13992  146E  0087               	movwf	7
 13993  146F  302D               	movlw	45
 13994  1470  0601               	xorwf	1,w
 13995  1471  1D03               	btfss	3,2
 13996  1472  2C78               	goto	l4043
 13997  1473  3001               	movlw	1
 13998  1474  00A8               	movwf	??_atoi
 13999  1475  0828               	movf	??_atoi,w
 14000  1476  07AA               	addwf	atoi@sign,f
 14001  1477  2C80               	goto	l4049
 14002  1478                     l4043:	
 14003  1478  0826               	movf	atoi@s,w
 14004  1479  0086               	movwf	6
 14005  147A  0827               	movf	atoi@s+1,w
 14006  147B  0087               	movwf	7
 14007  147C  302B               	movlw	43
 14008  147D  0601               	xorwf	1,w
 14009  147E  1D03               	btfss	3,2
 14010  147F  2C84               	goto	l4051
 14011  1480                     l4049:	
 14012  1480  3001               	movlw	1
 14013  1481  07A6               	addwf	atoi@s,f
 14014  1482  3000               	movlw	0
 14015  1483  3DA7               	addwfc	atoi@s+1,f
 14016  1484                     l4051:	
 14017  1484  0826               	movf	atoi@s,w
 14018  1485  0086               	movwf	6
 14019  1486  0827               	movf	atoi@s+1,w
 14020  1487  0087               	movwf	7
 14021  1488  0801               	movf	1,w
 14022  1489  319A  227D  3194   	fcall	_isdigit
 14023  148C  1C03               	btfss	3,0
 14024  148D  2CAD               	goto	l4053
 14025  148E  0020               	movlb	0	; select bank0
 14026  148F  082C               	movf	atoi@a+1,w
 14027  1490  00A1               	movwf	___wmul@multiplier+1
 14028  1491  082B               	movf	atoi@a,w
 14029  1492  00A0               	movwf	___wmul@multiplier
 14030  1493  300A               	movlw	10
 14031  1494  00A2               	movwf	___wmul@multiplicand
 14032  1495  3000               	movlw	0
 14033  1496  00A3               	movwf	___wmul@multiplicand+1
 14034  1497  319B  238B  3194   	fcall	___wmul
 14035  149A  0020               	movlb	0	; select bank0
 14036  149B  0826               	movf	atoi@s,w
 14037  149C  0086               	movwf	6
 14038  149D  0827               	movf	atoi@s+1,w
 14039  149E  0087               	movwf	7
 14040  149F  0801               	movf	1,w
 14041  14A0  0720               	addwf	?___wmul,w
 14042  14A1  00A8               	movwf	??_atoi
 14043  14A2  0821               	movf	?___wmul+1,w
 14044  14A3  1803               	skipnc
 14045  14A4  0A21               	incf	?___wmul+1,w
 14046  14A5  00A9               	movwf	??_atoi+1
 14047  14A6  0828               	movf	??_atoi,w
 14048  14A7  3ED0               	addlw	208
 14049  14A8  00AB               	movwf	atoi@a
 14050  14A9  30FF               	movlw	255
 14051  14AA  3D29               	addwfc	??_atoi+1,w
 14052  14AB  00AC               	movwf	atoi@a+1
 14053  14AC  2C80               	goto	l4049
 14054  14AD                     l4053:	
 14055  14AD  0020               	movlb	0	; select bank0
 14056  14AE  082A               	movf	atoi@sign,w
 14057  14AF  1903               	btfsc	3,2
 14058  14B0  2CBD               	goto	l4059
 14059  14B1  092B               	comf	atoi@a,w
 14060  14B2  00A8               	movwf	??_atoi
 14061  14B3  092C               	comf	atoi@a+1,w
 14062  14B4  00A9               	movwf	??_atoi+1
 14063  14B5  0AA8               	incf	??_atoi,f
 14064  14B6  1903               	skipnz
 14065  14B7  0AA9               	incf	??_atoi+1,f
 14066  14B8  0828               	movf	??_atoi,w
 14067  14B9  00A6               	movwf	?_atoi
 14068  14BA  0829               	movf	??_atoi+1,w
 14069  14BB  00A7               	movwf	?_atoi+1
 14070  14BC  0008               	return
 14071  14BD                     l4059:	
 14072  14BD  082C               	movf	atoi@a+1,w
 14073  14BE  00A7               	movwf	?_atoi+1
 14074  14BF  082B               	movf	atoi@a,w
 14075  14C0  00A6               	movwf	?_atoi
 14076  14C1  0008               	return
 14077  14C2                     __end_of_atoi:	
 14078                           
 14079                           	psect	text61
 14080  1A7D                     __ptext61:	
 14081 ;; *************** function _isdigit *****************
 14082 ;; Defined at:
 14083 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\isdigit.c"
 14084 ;; Parameters:    Size  Location     Type
 14085 ;;  c               1    wreg     unsigned char 
 14086 ;; Auto vars:     Size  Location     Type
 14087 ;;  c               1    1[BANK0 ] unsigned char 
 14088 ;; Return value:  Size  Location     Type
 14089 ;;		None               void
 14090 ;; Registers used:
 14091 ;;		wreg, status,2, status,0
 14092 ;; Tracked objects:
 14093 ;;		On entry : 0/0
 14094 ;;		On exit  : 0/0
 14095 ;;		Unchanged: 0/0
 14096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14098 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14100 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14101 ;;Total ram usage:        2 bytes
 14102 ;; Hardware stack levels used:    1
 14103 ;; Hardware stack levels required when called:    3
 14104 ;; This function calls:
 14105 ;;		Nothing
 14106 ;; This function is called by:
 14107 ;;		__doprnt
 14108 ;;		_atoi
 14109 ;; This function uses a non-reentrant model
 14110 ;;
 14111                           
 14112                           
 14113                           ;psect for function _isdigit
 14114  1A7D                     _isdigit:	
 14115                           
 14116                           ;incstack = 0
 14117                           ; Regs used in _isdigit: [wreg+status,2+status,0]
 14118                           ;isdigit@c stored from wreg
 14119  1A7D  0020               	movlb	0	; select bank0
 14120  1A7E  00A1               	movwf	isdigit@c
 14121  1A7F  01A0               	clrf	_isdigit$1500
 14122  1A80  303A               	movlw	58
 14123  1A81  0221               	subwf	isdigit@c,w
 14124  1A82  1803               	skipnc
 14125  1A83  2A8A               	goto	l3561
 14126  1A84  3030               	movlw	48
 14127  1A85  0221               	subwf	isdigit@c,w
 14128  1A86  1C03               	skipc
 14129  1A87  2A8A               	goto	l3561
 14130  1A88  01A0               	clrf	_isdigit$1500
 14131  1A89  0AA0               	incf	_isdigit$1500,f
 14132  1A8A                     l3561:	
 14133  1A8A  0C20               	rrf	_isdigit$1500,w
 14134  1A8B  0008               	return
 14135  1A8C                     __end_of_isdigit:	
 14136                           
 14137                           	psect	text62
 14138  1B8B                     __ptext62:	
 14139 ;; *************** function ___wmul *****************
 14140 ;; Defined at:
 14141 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.41\sources\common\Umul16.c"
 14142 ;; Parameters:    Size  Location     Type
 14143 ;;  multiplier      2    0[BANK0 ] unsigned int 
 14144 ;;  multiplicand    2    2[BANK0 ] unsigned int 
 14145 ;; Auto vars:     Size  Location     Type
 14146 ;;  product         2    4[BANK0 ] unsigned int 
 14147 ;; Return value:  Size  Location     Type
 14148 ;;                  2    0[BANK0 ] unsigned int 
 14149 ;; Registers used:
 14150 ;;		wreg, status,2, status,0
 14151 ;; Tracked objects:
 14152 ;;		On entry : 0/0
 14153 ;;		On exit  : 0/0
 14154 ;;		Unchanged: 0/0
 14155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14156 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14157 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14159 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14160 ;;Total ram usage:        6 bytes
 14161 ;; Hardware stack levels used:    1
 14162 ;; Hardware stack levels required when called:    3
 14163 ;; This function calls:
 14164 ;;		Nothing
 14165 ;; This function is called by:
 14166 ;;		_exec_remote_cmd
 14167 ;;		_init
 14168 ;;		_put_cmd
 14169 ;;		_edge_meter
 14170 ;;		__doprnt
 14171 ;;		_atoi
 14172 ;; This function uses a non-reentrant model
 14173 ;;
 14174                           
 14175                           
 14176                           ;psect for function ___wmul
 14177  1B8B                     ___wmul:	
 14178                           
 14179                           ;incstack = 0
 14180                           ; Regs used in ___wmul: [wreg+status,2+status,0]
 14181  1B8B  0020               	movlb	0	; select bank0
 14182  1B8C  01A4               	clrf	___wmul@product
 14183  1B8D  01A5               	clrf	___wmul@product+1
 14184  1B8E                     l3567:	
 14185  1B8E  1C20               	btfss	___wmul@multiplier,0
 14186  1B8F  2B94               	goto	l1144
 14187  1B90  0822               	movf	___wmul@multiplicand,w
 14188  1B91  07A4               	addwf	___wmul@product,f
 14189  1B92  0823               	movf	___wmul@multiplicand+1,w
 14190  1B93  3DA5               	addwfc	___wmul@product+1,f
 14191  1B94                     l1144:	
 14192  1B94  3001               	movlw	1
 14193  1B95                     u3095:	
 14194  1B95  35A2               	lslf	___wmul@multiplicand,f
 14195  1B96  0DA3               	rlf	___wmul@multiplicand+1,f
 14196  1B97  0B89               	decfsz	9,f
 14197  1B98  2B95               	goto	u3095
 14198  1B99  3001               	movlw	1
 14199  1B9A                     u3105:	
 14200  1B9A  36A1               	lsrf	___wmul@multiplier+1,f
 14201  1B9B  0CA0               	rrf	___wmul@multiplier,f
 14202  1B9C  0B89               	decfsz	9,f
 14203  1B9D  2B9A               	goto	u3105
 14204  1B9E  0820               	movf	___wmul@multiplier,w
 14205  1B9F  0421               	iorwf	___wmul@multiplier+1,w
 14206  1BA0  1D03               	btfss	3,2
 14207  1BA1  2B8E               	goto	l3567
 14208  1BA2  0825               	movf	___wmul@product+1,w
 14209  1BA3  00A1               	movwf	?___wmul+1
 14210  1BA4  0824               	movf	___wmul@product,w
 14211  1BA5  00A0               	movwf	?___wmul
 14212  1BA6  0008               	return
 14213  1BA7                     __end_of___wmul:	
 14214                           
 14215                           	psect	text63
 14216  1C41                     __ptext63:	
 14217 ;; *************** function _DATAEE_WriteByte *****************
 14218 ;; Defined at:
 14219 ;;		line 180 in file "mcc_generated_files/memory.c"
 14220 ;; Parameters:    Size  Location     Type
 14221 ;;  bAdd            1    wreg     unsigned char 
 14222 ;;  bData           1    0[BANK0 ] unsigned char 
 14223 ;; Auto vars:     Size  Location     Type
 14224 ;;  bAdd            1    1[BANK0 ] unsigned char 
 14225 ;;  GIEBitValue     1    2[BANK0 ] unsigned char 
 14226 ;; Return value:  Size  Location     Type
 14227 ;;                  1    wreg      void 
 14228 ;; Registers used:
 14229 ;;		wreg, status,2, status,0
 14230 ;; Tracked objects:
 14231 ;;		On entry : 0/0
 14232 ;;		On exit  : 0/0
 14233 ;;		Unchanged: 0/0
 14234 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14235 ;;      Params:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14236 ;;      Locals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14238 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14239 ;;Total ram usage:        3 bytes
 14240 ;; Hardware stack levels used:    1
 14241 ;; Hardware stack levels required when called:    3
 14242 ;; This function calls:
 14243 ;;		Nothing
 14244 ;; This function is called by:
 14245 ;;		_command_handler
 14246 ;;		_PROTOCOL_Write_Device_Address
 14247 ;;		_PROTOCOL_SAV
 14248 ;; This function uses a non-reentrant model
 14249 ;;
 14250                           
 14251                           
 14252                           ;psect for function _DATAEE_WriteByte
 14253  1C41                     _DATAEE_WriteByte:	
 14254                           
 14255                           ;incstack = 0
 14256                           ; Regs used in _DATAEE_WriteByte: [wreg+status,2+status,0]
 14257                           ;DATAEE_WriteByte@bAdd stored from wreg
 14258  1C41  0020               	movlb	0	; select bank0
 14259  1C42  00A1               	movwf	DATAEE_WriteByte@bAdd
 14260                           
 14261                           ;memory.c: 182: uint8_t GIEBitValue = 0;
 14262  1C43  01A2               	clrf	DATAEE_WriteByte@GIEBitValue
 14263                           
 14264                           ;memory.c: 184: EEADRL = (bAdd & 0x0ff);
 14265  1C44  0821               	movf	DATAEE_WriteByte@bAdd,w
 14266  1C45  0023               	movlb	3	; select bank3
 14267  1C46  0091               	movwf	17	;volatile
 14268                           
 14269                           ;memory.c: 185: EEDATL = bData;
 14270  1C47  0020               	movlb	0	; select bank0
 14271  1C48  0820               	movf	DATAEE_WriteByte@bData,w
 14272  1C49  0023               	movlb	3	; select bank3
 14273  1C4A  0093               	movwf	19	;volatile
 14274                           
 14275                           ;memory.c: 186: EECON1bits.EEPGD = 0;
 14276  1C4B  1395               	bcf	21,7	;volsfr
 14277                           
 14278                           ;memory.c: 187: EECON1bits.CFGS = 0;
 14279  1C4C  1315               	bcf	21,6	;volsfr
 14280                           
 14281                           ;memory.c: 188: EECON1bits.WREN = 1;
 14282  1C4D  1515               	bsf	21,2	;volsfr
 14283                           
 14284                           ;memory.c: 190: GIEBitValue = INTCONbits.GIE;
 14285  1C4E  3000               	movlw	0
 14286  1C4F  1B8B               	btfsc	11,7	;volatile
 14287  1C50  3001               	movlw	1
 14288  1C51  0020               	movlb	0	; select bank0
 14289  1C52  00A2               	movwf	DATAEE_WriteByte@GIEBitValue
 14290                           
 14291                           ;memory.c: 191: INTCONbits.GIE = 0;
 14292  1C53  138B               	bcf	11,7	;volatile
 14293                           
 14294                           ;memory.c: 192: EECON2 = 0x55;
 14295  1C54  3055               	movlw	85
 14296  1C55  0023               	movlb	3	; select bank3
 14297  1C56  0096               	movwf	22	;volsfr
 14298                           
 14299                           ;memory.c: 193: EECON2 = 0xAA;
 14300  1C57  30AA               	movlw	170
 14301  1C58  0096               	movwf	22	;volsfr
 14302                           
 14303                           ;memory.c: 194: EECON1bits.WR = 1;
 14304  1C59  1495               	bsf	21,1	;volsfr
 14305  1C5A                     l188:	
 14306                           ;memory.c: 197: {
 14307                           
 14308                           ;memory.c: 196: while (EECON1bits.WR)
 14309                           
 14310  1C5A  1895               	btfsc	21,1	;volsfr
 14311  1C5B  2C5A               	goto	l188
 14312                           
 14313                           ;memory.c: 198: }
 14314                           ;memory.c: 200: EECON1bits.WREN = 0;
 14315  1C5C  1115               	bcf	21,2	;volsfr
 14316                           
 14317                           ;memory.c: 201: INTCONbits.GIE = GIEBitValue;
 14318  1C5D  0020               	movlb	0	; select bank0
 14319  1C5E  0C22               	rrf	DATAEE_WriteByte@GIEBitValue,w
 14320  1C5F  1C03               	skipc
 14321  1C60  138B               	bcf	11,7	;volatile
 14322  1C61  1803               	skipnc
 14323  1C62  178B               	bsf	11,7	;volatile
 14324  1C63  0008               	return
 14325  1C64                     __end_of_DATAEE_WriteByte:	
 14326                           
 14327                           	psect	text64
 14328  1C1E                     __ptext64:	
 14329 ;; *************** function _EUSART_Read *****************
 14330 ;; Defined at:
 14331 ;;		line 112 in file "mcc_generated_files/eusart.c"
 14332 ;; Parameters:    Size  Location     Type
 14333 ;;		None
 14334 ;; Auto vars:     Size  Location     Type
 14335 ;;  readValue       1    1[BANK0 ] unsigned char 
 14336 ;; Return value:  Size  Location     Type
 14337 ;;                  1    wreg      unsigned char 
 14338 ;; Registers used:
 14339 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 14340 ;; Tracked objects:
 14341 ;;		On entry : 0/0
 14342 ;;		On exit  : 0/0
 14343 ;;		Unchanged: 0/0
 14344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14345 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14346 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14347 ;;      Temps:          0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14348 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14349 ;;Total ram usage:        2 bytes
 14350 ;; Hardware stack levels used:    1
 14351 ;; Hardware stack levels required when called:    3
 14352 ;; This function calls:
 14353 ;;		Nothing
 14354 ;; This function is called by:
 14355 ;;		_PROTOCOL_Loop
 14356 ;;		_getch
 14357 ;; This function uses a non-reentrant model
 14358 ;;
 14359                           
 14360                           
 14361                           ;psect for function _EUSART_Read
 14362  1C1E                     _EUSART_Read:	
 14363                           
 14364                           ;eusart.c: 114: uint8_t readValue = 0;
 14365                           
 14366                           ;incstack = 0
 14367                           ; Regs used in _EUSART_Read: [wreg+fsr1l+fsr1h+status,2+status,0]
 14368  1C1E  0020               	movlb	0	; select bank0
 14369  1C1F  01A1               	clrf	EUSART_Read@readValue
 14370  1C20                     l4749:	
 14371                           ;eusart.c: 117: {
 14372                           
 14373                           ;eusart.c: 116: while(0 == eusartRxCount)
 14374                           
 14375  1C20  0022               	movlb	2	; select bank2
 14376  1C21  0855               	movf	_eusartRxCount^(0+256),w	;volatile
 14377  1C22  1903               	btfsc	3,2
 14378  1C23  2C20               	goto	l4749
 14379                           
 14380                           ;eusart.c: 118: }
 14381                           ;eusart.c: 120: readValue = eusartRxBuffer[eusartRxTail++];
 14382  1C24  0856               	movf	_eusartRxTail^(0+256),w
 14383  1C25  3E20               	addlw	(low (_eusartRxBuffer| (0+768)))& (0+255)
 14384  1C26  0086               	movwf	6
 14385  1C27  3003               	movlw	3	; select bank6/7
 14386  1C28  0087               	movwf	7
 14387  1C29  0801               	movf	1,w
 14388  1C2A  0020               	movlb	0	; select bank0
 14389  1C2B  00A0               	movwf	??_EUSART_Read
 14390  1C2C  0820               	movf	??_EUSART_Read,w
 14391  1C2D  00A1               	movwf	EUSART_Read@readValue
 14392  1C2E  3001               	movlw	1
 14393  1C2F  00A0               	movwf	??_EUSART_Read
 14394  1C30  0820               	movf	??_EUSART_Read,w
 14395  1C31  0022               	movlb	2	; select bank2
 14396  1C32  07D6               	addwf	_eusartRxTail^(0+256),f	;volatile
 14397                           
 14398                           ;eusart.c: 121: if(sizeof(eusartRxBuffer) <= eusartRxTail)
 14399  1C33  3040               	movlw	64
 14400  1C34  0256               	subwf	_eusartRxTail^(0+256),w	;volatile
 14401  1C35  1803               	btfsc	3,0
 14402                           
 14403                           ;eusart.c: 122: {
 14404                           ;eusart.c: 123: eusartRxTail = 0;
 14405  1C36  01D6               	clrf	_eusartRxTail^(0+256)	;volatile
 14406                           
 14407                           ;eusart.c: 124: }
 14408                           ;eusart.c: 125: PIE1bits.RCIE = 0;
 14409  1C37  0021               	movlb	1	; select bank1
 14410  1C38  1291               	bcf	17,5	;volatile
 14411                           
 14412                           ;eusart.c: 126: eusartRxCount--;
 14413  1C39  3001               	movlw	1
 14414  1C3A  0022               	movlb	2	; select bank2
 14415  1C3B  02D5               	subwf	_eusartRxCount^(0+256),f	;volatile
 14416                           
 14417                           ;eusart.c: 127: PIE1bits.RCIE = 1;
 14418  1C3C  0021               	movlb	1	; select bank1
 14419  1C3D  1691               	bsf	17,5	;volatile
 14420                           
 14421                           ;eusart.c: 129: return readValue;
 14422  1C3E  0020               	movlb	0	; select bank0
 14423  1C3F  0821               	movf	EUSART_Read@readValue,w
 14424  1C40  0008               	return
 14425  1C41                     __end_of_EUSART_Read:	
 14426                           
 14427                           	psect	text65
 14428  123C                     __ptext65:	
 14429 ;; *************** function _PROTOCOL_Initialize *****************
 14430 ;; Defined at:
 14431 ;;		line 59 in file "protocol.c"
 14432 ;; Parameters:    Size  Location     Type
 14433 ;;  device_id       2    1[BANK0 ] PTR const unsigned char 
 14434 ;;		 -> STR_40(17), 
 14435 ;;  start_handle    2    3[BANK0 ] PTR void 
 14436 ;;		 -> start_handler(1), 
 14437 ;;  stop_handler    2    5[BANK0 ] PTR void 
 14438 ;;		 -> stop_handler(1), 
 14439 ;;  set_handler     1    7[BANK0 ] PTR void 
 14440 ;;		 -> NULL(0), 
 14441 ;;  inv_handler     2    8[BANK0 ] PTR void 
 14442 ;;		 -> inv_handler(1), 
 14443 ;;  scaler          1   10[BANK0 ] unsigned char 
 14444 ;; Auto vars:     Size  Location     Type
 14445 ;;		None
 14446 ;; Return value:  Size  Location     Type
 14447 ;;                  1    wreg      void 
 14448 ;; Registers used:
 14449 ;;		wreg, status,2, status,0, pclath, cstack
 14450 ;; Tracked objects:
 14451 ;;		On entry : 0/0
 14452 ;;		On exit  : 0/0
 14453 ;;		Unchanged: 0/0
 14454 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14455 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14457 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14458 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14459 ;;Total ram usage:       12 bytes
 14460 ;; Hardware stack levels used:    1
 14461 ;; Hardware stack levels required when called:    4
 14462 ;; This function calls:
 14463 ;;		Absolute function
 14464 ;;		_DATAEE_ReadByte
 14465 ;;		_stop_handler
 14466 ;; This function is called by:
 14467 ;;		_main
 14468 ;; This function uses a non-reentrant model
 14469 ;;
 14470                           
 14471                           
 14472                           ;psect for function _PROTOCOL_Initialize
 14473  123C                     _PROTOCOL_Initialize:	
 14474                           
 14475                           ;protocol.c: 60: device_id_ = device_id;
 14476                           
 14477                           ;incstack = 0
 14478                           ; Regs used in _PROTOCOL_Initialize: [wreg+status,2+status,0+pclath+cstack]
 14479  123C  0020               	movlb	0	; select bank0
 14480  123D  0822               	movf	PROTOCOL_Initialize@device_id+1,w
 14481  123E  0022               	movlb	2	; select bank2
 14482  123F  00AC               	movwf	(_device_id_+1)^(0+256)
 14483  1240  0020               	movlb	0	; select bank0
 14484  1241  0821               	movf	PROTOCOL_Initialize@device_id,w
 14485  1242  0022               	movlb	2	; select bank2
 14486  1243  00AB               	movwf	_device_id_^(0+256)
 14487                           
 14488                           ;protocol.c: 61: PROTOCOL_Start_Handler = start_handler;
 14489  1244  0020               	movlb	0	; select bank0
 14490  1245  0824               	movf	PROTOCOL_Initialize@start_handler+1,w
 14491  1246  0022               	movlb	2	; select bank2
 14492  1247  00B8               	movwf	(_PROTOCOL_Start_Handler+1)^(0+256)
 14493  1248  0020               	movlb	0	; select bank0
 14494  1249  0823               	movf	PROTOCOL_Initialize@start_handler,w
 14495  124A  0022               	movlb	2	; select bank2
 14496  124B  00B7               	movwf	_PROTOCOL_Start_Handler^(0+256)
 14497                           
 14498                           ;protocol.c: 62: PROTOCOL_Stop_Handler = stop_handler;
 14499  124C  0020               	movlb	0	; select bank0
 14500  124D  0826               	movf	PROTOCOL_Initialize@stop_handler+1,w
 14501  124E  0022               	movlb	2	; select bank2
 14502  124F  00B6               	movwf	(_PROTOCOL_Stop_Handler+1)^(0+256)
 14503  1250  0020               	movlb	0	; select bank0
 14504  1251  0825               	movf	PROTOCOL_Initialize@stop_handler,w
 14505  1252  0022               	movlb	2	; select bank2
 14506  1253  00B5               	movwf	_PROTOCOL_Stop_Handler^(0+256)
 14507                           
 14508                           ;protocol.c: 63: PROTOCOL_Set_Handler = set_handler;
 14509  1254  0020               	movlb	0	; select bank0
 14510  1255  0827               	movf	PROTOCOL_Initialize@set_handler,w
 14511  1256  00AB               	movwf	??_PROTOCOL_Initialize
 14512  1257  3000               	movlw	0
 14513  1258  00AC               	movwf	??_PROTOCOL_Initialize+1
 14514  1259  082B               	movf	??_PROTOCOL_Initialize,w
 14515  125A  0022               	movlb	2	; select bank2
 14516  125B  00B3               	movwf	_PROTOCOL_Set_Handler^(0+256)
 14517  125C  0020               	movlb	0	; select bank0
 14518  125D  082C               	movf	??_PROTOCOL_Initialize+1,w
 14519  125E  0022               	movlb	2	; select bank2
 14520  125F  00B4               	movwf	(_PROTOCOL_Set_Handler+1)^(0+256)
 14521                           
 14522                           ;protocol.c: 65: if (PROTOCOL_Stop_Handler) PROTOCOL_Stop_Handler();
 14523  1260  0835               	movf	_PROTOCOL_Stop_Handler^(0+256),w
 14524  1261  0436               	iorwf	(_PROTOCOL_Stop_Handler+1)^(0+256),w
 14525  1262  1903               	btfsc	3,2
 14526  1263  2A69               	goto	l5945
 14527  1264  0836               	movf	(_PROTOCOL_Stop_Handler+1)^(0+256),w
 14528  1265  008A               	movwf	10
 14529  1266  0835               	movf	_PROTOCOL_Stop_Handler^(0+256),w
 14530  1267  000A               	callw
 14531  1268  3192               	pagesel	$
 14532  1269                     l5945:	
 14533                           
 14534                           ;protocol.c: 66: value = DATAEE_ReadByte(1);
 14535  1269  3001               	movlw	1
 14536  126A  319A  2255  3192   	fcall	_DATAEE_ReadByte
 14537  126D  0020               	movlb	0	; select bank0
 14538  126E  00AB               	movwf	??_PROTOCOL_Initialize
 14539  126F  082B               	movf	??_PROTOCOL_Initialize,w
 14540  1270  0022               	movlb	2	; select bank2
 14541  1271  00C8               	movwf	_value^(0+256)
 14542                           
 14543                           ;protocol.c: 68: slave_address = DATAEE_ReadByte(0);
 14544  1272  3000               	movlw	0
 14545  1273  319A  2255         	fcall	_DATAEE_ReadByte
 14546  1275  0020               	movlb	0	; select bank0
 14547  1276  00AB               	movwf	??_PROTOCOL_Initialize
 14548  1277  082B               	movf	??_PROTOCOL_Initialize,w
 14549  1278  0022               	movlb	2	; select bank2
 14550  1279  00CA               	movwf	_slave_address^(0+256)
 14551                           
 14552                           ;protocol.c: 71: readbuf.status = COMPLETE;
 14553  127A  3003               	movlw	3
 14554  127B  0020               	movlb	0	; select bank0
 14555  127C  00AB               	movwf	??_PROTOCOL_Initialize
 14556  127D  082B               	movf	??_PROTOCOL_Initialize,w
 14557  127E  0023               	movlb	3	; select bank3
 14558  127F  00D0               	movwf	(_readbuf^(0+384)+4)
 14559                           
 14560                           ;protocol.c: 72: PROTOCOL_Inv_Handler = inv_handler;
 14561  1280  0020               	movlb	0	; select bank0
 14562  1281  0829               	movf	PROTOCOL_Initialize@inv_handler+1,w
 14563  1282  0022               	movlb	2	; select bank2
 14564  1283  00AE               	movwf	(_PROTOCOL_Inv_Handler+1)^(0+256)
 14565  1284  0020               	movlb	0	; select bank0
 14566  1285  0828               	movf	PROTOCOL_Initialize@inv_handler,w
 14567  1286  0022               	movlb	2	; select bank2
 14568  1287  00AD               	movwf	_PROTOCOL_Inv_Handler^(0+256)
 14569                           
 14570                           ;protocol.c: 73: tmr_scaler = scaler;
 14571  1288  0020               	movlb	0	; select bank0
 14572  1289  082A               	movf	PROTOCOL_Initialize@scaler,w
 14573  128A  00AB               	movwf	??_PROTOCOL_Initialize
 14574  128B  082B               	movf	??_PROTOCOL_Initialize,w
 14575  128C  0022               	movlb	2	; select bank2
 14576  128D  00E4               	movwf	_tmr_scaler^(0+256)
 14577  128E  0008               	return
 14578  128F                     __end_of_PROTOCOL_Initialize:	
 14579                           
 14580                           	psect	text66
 14581  1A06                     __ptext66:	
 14582 ;; *************** function _stop_handler *****************
 14583 ;; Defined at:
 14584 ;;		line 66 in file "main.c"
 14585 ;; Parameters:    Size  Location     Type
 14586 ;;		None
 14587 ;; Auto vars:     Size  Location     Type
 14588 ;;		None
 14589 ;; Return value:  Size  Location     Type
 14590 ;;                  1    wreg      void 
 14591 ;; Registers used:
 14592 ;;		status,2
 14593 ;; Tracked objects:
 14594 ;;		On entry : 0/0
 14595 ;;		On exit  : 0/0
 14596 ;;		Unchanged: 0/0
 14597 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14600 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14601 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14602 ;;Total ram usage:        0 bytes
 14603 ;; Hardware stack levels used:    1
 14604 ;; Hardware stack levels required when called:    3
 14605 ;; This function calls:
 14606 ;;		Nothing
 14607 ;; This function is called by:
 14608 ;;		_main
 14609 ;;		_PROTOCOL_STP
 14610 ;;		_PROTOCOL_Initialize
 14611 ;; This function uses a non-reentrant model
 14612 ;;
 14613                           
 14614                           
 14615                           ;psect for function _stop_handler
 14616  1A06                     _stop_handler:	
 14617                           
 14618                           ;main.c: 67: running = 0;
 14619                           
 14620                           ;incstack = 0
 14621                           ; Regs used in _stop_handler: [status,2]
 14622  1A06  0022               	movlb	2	; select bank2
 14623  1A07  01D3               	clrf	_running^(0+256)
 14624  1A08  0008               	return
 14625  1A09                     __end_of_stop_handler:	
 14626                           
 14627                           	psect	text67
 14628  1A55                     __ptext67:	
 14629 ;; *************** function _DATAEE_ReadByte *****************
 14630 ;; Defined at:
 14631 ;;		line 204 in file "mcc_generated_files/memory.c"
 14632 ;; Parameters:    Size  Location     Type
 14633 ;;  bAdd            1    wreg     unsigned char 
 14634 ;; Auto vars:     Size  Location     Type
 14635 ;;  bAdd            1    0[BANK0 ] unsigned char 
 14636 ;; Return value:  Size  Location     Type
 14637 ;;                  1    wreg      unsigned char 
 14638 ;; Registers used:
 14639 ;;		wreg
 14640 ;; Tracked objects:
 14641 ;;		On entry : 0/0
 14642 ;;		On exit  : 0/0
 14643 ;;		Unchanged: 0/0
 14644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14645 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14646 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14647 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14648 ;;      Totals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14649 ;;Total ram usage:        1 bytes
 14650 ;; Hardware stack levels used:    1
 14651 ;; Hardware stack levels required when called:    3
 14652 ;; This function calls:
 14653 ;;		Nothing
 14654 ;; This function is called by:
 14655 ;;		_init
 14656 ;;		_PROTOCOL_Initialize
 14657 ;; This function uses a non-reentrant model
 14658 ;;
 14659                           
 14660                           
 14661                           ;psect for function _DATAEE_ReadByte
 14662  1A55                     _DATAEE_ReadByte:	
 14663                           
 14664                           ;incstack = 0
 14665                           ; Regs used in _DATAEE_ReadByte: [wreg]
 14666                           ;DATAEE_ReadByte@bAdd stored from wreg
 14667  1A55  0020               	movlb	0	; select bank0
 14668  1A56  00A0               	movwf	DATAEE_ReadByte@bAdd
 14669                           
 14670                           ;memory.c: 206: EEADRL = (bAdd & 0x0ff);
 14671  1A57  0820               	movf	DATAEE_ReadByte@bAdd,w
 14672  1A58  0023               	movlb	3	; select bank3
 14673  1A59  0091               	movwf	17	;volatile
 14674                           
 14675                           ;memory.c: 207: EECON1bits.CFGS = 0;
 14676  1A5A  1315               	bcf	21,6	;volsfr
 14677                           
 14678                           ;memory.c: 208: EECON1bits.EEPGD = 0;
 14679  1A5B  1395               	bcf	21,7	;volsfr
 14680                           
 14681                           ;memory.c: 209: EECON1bits.RD = 1;
 14682  1A5C  1415               	bsf	21,0	;volsfr
 14683                           
 14684                           ;memory.c: 210: __nop();
 14685  1A5D  0000               	nop
 14686                           
 14687                           ;memory.c: 211: __nop();
 14688  1A5E  0000               	nop
 14689                           
 14690                           ;memory.c: 213: return (EEDATL);
 14691  1A5F  0023               	movlb	3	; select bank3
 14692  1A60  0813               	movf	19,w	;volatile
 14693  1A61  0008               	return
 14694  1A62                     __end_of_DATAEE_ReadByte:	
 14695                           
 14696                           	psect	intentry
 14697  0004                     __pintentry:	
 14698 ;; *************** function _INTERRUPT_InterruptManager *****************
 14699 ;; Defined at:
 14700 ;;		line 51 in file "mcc_generated_files/interrupt_manager.c"
 14701 ;; Parameters:    Size  Location     Type
 14702 ;;		None
 14703 ;; Auto vars:     Size  Location     Type
 14704 ;;		None
 14705 ;; Return value:  Size  Location     Type
 14706 ;;                  1    wreg      void 
 14707 ;; Registers used:
 14708 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14709 ;; Tracked objects:
 14710 ;;		On entry : 0/0
 14711 ;;		On exit  : 0/0
 14712 ;;		Unchanged: 0/0
 14713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14714 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14715 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14716 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14717 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14718 ;;Total ram usage:        1 bytes
 14719 ;; Hardware stack levels used:    1
 14720 ;; Hardware stack levels required when called:    2
 14721 ;; This function calls:
 14722 ;;		_EUSART_Receive_ISR
 14723 ;;		_EUSART_Transmit_ISR
 14724 ;;		_I2C1_BusCollisionISR
 14725 ;;		_I2C1_ISR
 14726 ;; This function is called by:
 14727 ;;		Interrupt level 1
 14728 ;; This function uses a non-reentrant model
 14729 ;;
 14730                           
 14731  0004                     _INTERRUPT_InterruptManager:	
 14732                           
 14733                           ;incstack = 0
 14734  0004  147E               	bsf	126,0	;set compiler interrupt flag (level 1)
 14735                           
 14736                           ; Regs used in _INTERRUPT_InterruptManager: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14737  0005  3180               	pagesel	$
 14738  0006  0020               	movlb	0	; select bank0
 14739  0007  087F               	movf	127,w
 14740  0008  00F7               	movwf	??_INTERRUPT_InterruptManager
 14741                           
 14742                           ;interrupt_manager.c: 54: if(INTCONbits.PEIE == 1 && PIE1bits.TXIE == 1 && PIR1bits.TXIF
      +                           == 1)
 14743  0009  1F0B               	btfss	11,6	;volatile
 14744  000A  2815               	goto	i1l321
 14745  000B  0021               	movlb	1	; select bank1
 14746  000C  1E11               	btfss	17,4	;volatile
 14747  000D  2815               	goto	i1l321
 14748  000E  0020               	movlb	0	; select bank0
 14749  000F  1E11               	btfss	17,4	;volatile
 14750  0010  2815               	goto	i1l321
 14751                           
 14752                           ;interrupt_manager.c: 55: {
 14753                           ;interrupt_manager.c: 56: EUSART_Transmit_ISR();
 14754  0011  319B  23C3  3180   	fcall	_EUSART_Transmit_ISR
 14755                           
 14756                           ;interrupt_manager.c: 57: }
 14757  0014  2837               	goto	i1l329
 14758  0015                     i1l321:	
 14759                           
 14760                           ;interrupt_manager.c: 58: else if(INTCONbits.PEIE == 1 && PIE1bits.RCIE == 1 && PIR1bits
      +                          .RCIF == 1)
 14761  0015  1F0B               	btfss	11,6	;volatile
 14762  0016  2821               	goto	i1l323
 14763  0017  0021               	movlb	1	; select bank1
 14764  0018  1E91               	btfss	17,5	;volatile
 14765  0019  2821               	goto	i1l323
 14766  001A  0020               	movlb	0	; select bank0
 14767  001B  1E91               	btfss	17,5	;volatile
 14768  001C  2821               	goto	i1l323
 14769                           
 14770                           ;interrupt_manager.c: 59: {
 14771                           ;interrupt_manager.c: 60: EUSART_Receive_ISR();
 14772  001D  319B  236F  3180   	fcall	_EUSART_Receive_ISR
 14773                           
 14774                           ;interrupt_manager.c: 61: }
 14775  0020  2837               	goto	i1l329
 14776  0021                     i1l323:	
 14777                           
 14778                           ;interrupt_manager.c: 62: else if(INTCONbits.PEIE == 1 && PIE2bits.BCL1IE == 1 && PIR2bi
      +                          ts.BCL1IF == 1)
 14779  0021  1F0B               	btfss	11,6	;volatile
 14780  0022  282D               	goto	i1l325
 14781  0023  0021               	movlb	1	; select bank1
 14782  0024  1D92               	btfss	18,3	;volatile
 14783  0025  282D               	goto	i1l325
 14784  0026  0020               	movlb	0	; select bank0
 14785  0027  1D92               	btfss	18,3	;volatile
 14786  0028  282D               	goto	i1l325
 14787                           
 14788                           ;interrupt_manager.c: 63: {
 14789                           ;interrupt_manager.c: 64: I2C1_BusCollisionISR();
 14790  0029  3180  2003  3180   	fcall	_I2C1_BusCollisionISR
 14791                           
 14792                           ;interrupt_manager.c: 65: }
 14793  002C  2837               	goto	i1l329
 14794  002D                     i1l325:	
 14795                           
 14796                           ;interrupt_manager.c: 66: else if(INTCONbits.PEIE == 1 && PIE1bits.SSP1IE == 1 && PIR1bi
      +                          ts.SSP1IF == 1)
 14797  002D  1F0B               	btfss	11,6	;volatile
 14798  002E  2837               	goto	i1l329
 14799  002F  0021               	movlb	1	; select bank1
 14800  0030  1D91               	btfss	17,3	;volatile
 14801  0031  2837               	goto	i1l329
 14802  0032  0020               	movlb	0	; select bank0
 14803  0033  1D91               	btfss	17,3	;volatile
 14804  0034  2837               	goto	i1l329
 14805                           
 14806                           ;interrupt_manager.c: 67: {
 14807                           ;interrupt_manager.c: 68: I2C1_ISR();
 14808  0035  3188  203F         	fcall	_I2C1_ISR
 14809  0037                     i1l329:	
 14810                           ;interrupt_manager.c: 70: else
 14811                           ;interrupt_manager.c: 71: {
 14812                           
 14813                           ;interrupt_manager.c: 69: }
 14814                           
 14815  0037  0877               	movf	??_INTERRUPT_InterruptManager,w
 14816  0038  0020               	movlb	0	; select bank0
 14817  0039  00FF               	movwf	127
 14818  003A  107E               	bcf	126,0	;clear compiler interrupt flag (level 1)
 14819  003B  0009               	retfie
 14820  003C                     __end_of_INTERRUPT_InterruptManager:	
 14821                           
 14822                           	psect	text69
 14823  083F                     __ptext69:	
 14824 ;; *************** function _I2C1_ISR *****************
 14825 ;; Defined at:
 14826 ;;		line 233 in file "mcc_generated_files/i2c1.c"
 14827 ;; Parameters:    Size  Location     Type
 14828 ;;		None
 14829 ;; Auto vars:     Size  Location     Type
 14830 ;;		None
 14831 ;; Return value:  Size  Location     Type
 14832 ;;                  1    wreg      void 
 14833 ;; Registers used:
 14834 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, pclath, cstack
 14835 ;; Tracked objects:
 14836 ;;		On entry : 0/0
 14837 ;;		On exit  : 0/0
 14838 ;;		Unchanged: 0/0
 14839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 14840 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14841 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14842 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14843 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 14844 ;;Total ram usage:        4 bytes
 14845 ;; Hardware stack levels used:    1
 14846 ;; Hardware stack levels required when called:    1
 14847 ;; This function calls:
 14848 ;;		_I2C1_FunctionComplete
 14849 ;;		_I2C1_Stop
 14850 ;; This function is called by:
 14851 ;;		_INTERRUPT_InterruptManager
 14852 ;; This function uses a non-reentrant model
 14853 ;;
 14854                           
 14855                           
 14856                           ;psect for function _I2C1_ISR
 14857  083F                     _I2C1_ISR:	
 14858                           
 14859                           ;i2c1.c: 236: static uint8_t *pi2c_buf_ptr;
 14860                           ;i2c1.c: 237: static uint16_t i2c_address = 0;
 14861                           ;i2c1.c: 238: static uint8_t i2c_bytes_left = 0;
 14862                           ;i2c1.c: 239: static uint8_t i2c_10bit_address_restart = 0;
 14863                           ;i2c1.c: 241: PIR1bits.SSP1IF = 0;
 14864                           
 14865                           ;incstack = 0
 14866                           ; Regs used in _I2C1_ISR: [wreg-fsr1h+status,2+status,0+pclath+cstack]
 14867  083F  0020               	movlb	0	; select bank0
 14868  0840  1191               	bcf	17,3	;volatile
 14869                           
 14870                           ;i2c1.c: 245: if(SSP1CON1bits.WCOL)
 14871  0841  0024               	movlb	4	; select bank4
 14872  0842  1F95               	btfss	21,7	;volatile
 14873  0843  2984               	goto	i1l5017
 14874                           
 14875                           ;i2c1.c: 246: {
 14876                           ;i2c1.c: 248: SSP1CON1bits.WCOL = 0;
 14877  0844  1395               	bcf	21,7	;volatile
 14878                           
 14879                           ;i2c1.c: 249: i2c1_state = S_MASTER_IDLE;
 14880  0845  0022               	movlb	2	; select bank2
 14881  0846  01DE               	clrf	_i2c1_state^(0+256)
 14882                           
 14883                           ;i2c1.c: 250: *(p_i2c1_current->pTrFlag) = I2C1_MESSAGE_FAIL;
 14884  0847  085B               	movf	_p_i2c1_current^(0+256),w
 14885  0848  3E02               	addlw	2
 14886  0849  0086               	movwf	6
 14887  084A  3001               	movlw	1	; select bank2/3
 14888  084B  0087               	movwf	7
 14889  084C  3F40               	moviw [0]fsr1
 14890  084D  00F3               	movwf	??_I2C1_ISR
 14891  084E  3F41               	moviw [1]fsr1
 14892  084F  00F4               	movwf	??_I2C1_ISR+1
 14893  0850  0873               	movf	??_I2C1_ISR,w
 14894  0851  0086               	movwf	6
 14895  0852  0874               	movf	??_I2C1_ISR+1,w
 14896  0853  0087               	movwf	7
 14897  0854  3001               	movlw	1
 14898  0855  0081               	movwf	1
 14899                           
 14900                           ;i2c1.c: 253: p_i2c1_current = (0);
 14901  0856  01DB               	clrf	_p_i2c1_current^(0+256)
 14902                           
 14903                           ;i2c1.c: 255: return;
 14904  0857  0008               	return
 14905  0858                     i1l60:	
 14906                           ;i2c1.c: 260: {
 14907                           ;i2c1.c: 261: case S_MASTER_IDLE:
 14908                           
 14909                           ;i2c1.c: 256: }
 14910                           ;i2c1.c: 259: switch(i2c1_state)
 14911                           
 14912                           
 14913                           ;i2c1.c: 263: if(i2c1_object.trStatus.s.empty != 1)
 14914  0858  18A2               	btfsc	(_i2c1_object^(0+256)+2),1
 14915  0859  0008               	return
 14916                           
 14917                           ;i2c1.c: 264: {
 14918                           ;i2c1.c: 266: p_i2c1_current = i2c1_object.pTrHead;
 14919  085A  0821               	movf	(low ((_i2c1_object| (0+256)+1)))^0,w
 14920  085B  00F3               	movwf	??_I2C1_ISR
 14921  085C  0873               	movf	??_I2C1_ISR,w
 14922  085D  00DB               	movwf	_p_i2c1_current^(0+256)
 14923                           
 14924                           ;i2c1.c: 267: i2c1_trb_count = i2c1_object.pTrHead->count;
 14925  085E  0821               	movf	(low ((_i2c1_object| (0+256)+1)))^0,w
 14926  085F  0086               	movwf	6
 14927  0860  3001               	movlw	1	; select bank2/3
 14928  0861  0087               	movwf	7
 14929  0862  0801               	movf	1,w
 14930  0863  00F3               	movwf	??_I2C1_ISR
 14931  0864  0873               	movf	??_I2C1_ISR,w
 14932  0865  00DD               	movwf	_i2c1_trb_count^(0+256)
 14933                           
 14934                           ;i2c1.c: 268: p_i2c1_trb_current = i2c1_object.pTrHead->ptrb_list;
 14935  0866  0821               	movf	(low ((_i2c1_object| (0+256)+1)))^0,w
 14936  0867  0086               	movwf	6
 14937  0868  3001               	movlw	1	; select bank2/3
 14938  0869  0087               	movwf	7
 14939  086A  3001               	movlw	1	; select bank2/3
 14940  086B  3F41               	moviw [1]fsr1
 14941  086C  00DC               	movwf	_p_i2c1_trb_current^(0+256)
 14942                           
 14943                           ;i2c1.c: 270: i2c1_object.pTrHead++;
 14944  086D  3003               	movlw	3
 14945  086E  00F3               	movwf	??_I2C1_ISR
 14946  086F  0873               	movf	??_I2C1_ISR,w
 14947  0870  07A1               	addwf	(low ((_i2c1_object| (0+256)+1)))^0,f
 14948                           
 14949                           ;i2c1.c: 273: if(i2c1_object.pTrHead == (i2c1_tr_queue + 1))
 14950  0871  0821               	movf	(low ((_i2c1_object| (0+256)+1)))^0,w
 14951  0872  3A62               	xorlw	(low ((_i2c1_tr_queue| (0+256)+3)))& (0+255)
 14952  0873  1D03               	skipz
 14953  0874  2879               	goto	i1l4907
 14954                           
 14955                           ;i2c1.c: 274: {
 14956                           ;i2c1.c: 276: i2c1_object.pTrHead = i2c1_tr_queue;
 14957  0875  305F               	movlw	(low (_i2c1_tr_queue| (0+256)))& (0+255)
 14958  0876  00F3               	movwf	??_I2C1_ISR
 14959  0877  0873               	movf	??_I2C1_ISR,w
 14960  0878  00A1               	movwf	(low ((_i2c1_object| (0+256)+1)))^0
 14961  0879                     i1l4907:	
 14962                           
 14963                           ;i2c1.c: 277: }
 14964                           ;i2c1.c: 281: i2c1_object.trStatus.s.full = 0;
 14965  0879  1022               	bcf	(_i2c1_object^(0+256)+2),0
 14966                           
 14967                           ;i2c1.c: 284: if(i2c1_object.pTrHead == i2c1_object.pTrTail)
 14968  087A  0821               	movf	(low ((_i2c1_object| (0+256)+1)))^0,w
 14969  087B  0620               	xorwf	_i2c1_object^(0+256),w
 14970  087C  1903               	btfsc	3,2
 14971                           
 14972                           ;i2c1.c: 285: {
 14973                           ;i2c1.c: 287: i2c1_object.trStatus.s.empty = 1;
 14974  087D  14A2               	bsf	(_i2c1_object^(0+256)+2),1
 14975                           
 14976                           ;i2c1.c: 288: }
 14977                           ;i2c1.c: 291: SSP1CON2bits.SEN = 1;
 14978  087E  0024               	movlb	4	; select bank4
 14979  087F  1416               	bsf	22,0	;volatile
 14980                           
 14981                           ;i2c1.c: 294: i2c1_state = S_MASTER_SEND_ADDR;
 14982  0880  3002               	movlw	2
 14983  0881  00F3               	movwf	??_I2C1_ISR
 14984  0882  0873               	movf	??_I2C1_ISR,w
 14985  0883  0022               	movlb	2	; select bank2
 14986  0884  00DE               	movwf	_i2c1_state^(0+256)
 14987                           
 14988                           ;i2c1.c: 295: }
 14989                           ;i2c1.c: 297: break;
 14990  0885  0008               	return
 14991  0886                     i1l65:	
 14992                           ;i2c1.c: 299: case S_MASTER_RESTART:
 14993                           
 14994                           
 14995                           ;i2c1.c: 304: SSP1CON2bits.RSEN = 1;
 14996  0886  0024               	movlb	4	; select bank4
 14997  0887  1496               	bsf	22,1	;volatile
 14998                           
 14999                           ;i2c1.c: 307: i2c1_state = S_MASTER_SEND_ADDR;
 15000  0888  3002               	movlw	2
 15001  0889  00F3               	movwf	??_I2C1_ISR
 15002  088A  0873               	movf	??_I2C1_ISR,w
 15003  088B  0022               	movlb	2	; select bank2
 15004  088C  00DE               	movwf	_i2c1_state^(0+256)
 15005                           
 15006                           ;i2c1.c: 309: break;
 15007  088D  0008               	return
 15008  088E                     i1l66:	
 15009                           ;i2c1.c: 311: case S_MASTER_SEND_ADDR_10BIT_LSB:
 15010                           
 15011                           
 15012                           ;i2c1.c: 313: if(SSP1CON2bits.ACKSTAT)
 15013  088E  0024               	movlb	4	; select bank4
 15014  088F  1F16               	btfss	22,6	;volatile
 15015  0890  289A               	goto	i1l4919
 15016                           
 15017                           ;i2c1.c: 314: {
 15018                           ;i2c1.c: 315: i2c1_object.i2cErrors++;
 15019  0891  3001               	movlw	1
 15020  0892  00F3               	movwf	??_I2C1_ISR
 15021  0893  0873               	movf	??_I2C1_ISR,w
 15022  0894  0022               	movlb	2	; select bank2
 15023  0895  07A4               	addwf	(_i2c1_object^(0+256)+4),f
 15024                           
 15025                           ;i2c1.c: 316: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
 15026  0896  3004               	movlw	4
 15027  0897  319B  23E1         	fcall	_I2C1_Stop
 15028                           
 15029                           ;i2c1.c: 317: }
 15030  0899  0008               	return
 15031  089A                     i1l4919:	
 15032                           
 15033                           ;i2c1.c: 318: else
 15034                           ;i2c1.c: 319: {
 15035                           ;i2c1.c: 321: SSP1BUF = (i2c_address >> 1) & 0x00FF;
 15036  089A  087D               	movf	I2C1_ISR@i2c_address+1,w
 15037  089B  00F4               	movwf	??_I2C1_ISR+1
 15038  089C  087C               	movf	I2C1_ISR@i2c_address,w
 15039  089D  00F3               	movwf	??_I2C1_ISR
 15040  089E  36F4               	lsrf	??_I2C1_ISR+1,f
 15041  089F  0CF3               	rrf	??_I2C1_ISR,f
 15042  08A0  0873               	movf	??_I2C1_ISR,w
 15043  08A1  0024               	movlb	4	; select bank4
 15044  08A2  0091               	movwf	17	;volatile
 15045                           
 15046                           ;i2c1.c: 324: if(i2c_address & 0x01)
 15047  08A3  1C7C               	btfss	I2C1_ISR@i2c_address,0
 15048  08A4  28AB               	goto	i1l4925
 15049                           
 15050                           ;i2c1.c: 325: {
 15051                           ;i2c1.c: 328: i2c1_state = S_MASTER_10BIT_RESTART;
 15052  08A5  300B               	movlw	11
 15053  08A6  00F3               	movwf	??_I2C1_ISR
 15054  08A7  0873               	movf	??_I2C1_ISR,w
 15055  08A8  0022               	movlb	2	; select bank2
 15056  08A9  00DE               	movwf	_i2c1_state^(0+256)
 15057                           
 15058                           ;i2c1.c: 329: }
 15059  08AA  0008               	return
 15060  08AB                     i1l4925:	
 15061                           
 15062                           ;i2c1.c: 330: else
 15063                           ;i2c1.c: 331: {
 15064                           ;i2c1.c: 333: i2c1_state = S_MASTER_SEND_DATA;
 15065  08AB  3003               	movlw	3
 15066  08AC  00F3               	movwf	??_I2C1_ISR
 15067  08AD  0873               	movf	??_I2C1_ISR,w
 15068  08AE  0022               	movlb	2	; select bank2
 15069  08AF  00DE               	movwf	_i2c1_state^(0+256)
 15070                           
 15071                           ;i2c1.c: 334: }
 15072                           ;i2c1.c: 335: }
 15073                           ;i2c1.c: 337: break;
 15074  08B0  0008               	return
 15075  08B1                     i1l71:	
 15076                           ;i2c1.c: 339: case S_MASTER_10BIT_RESTART:
 15077                           
 15078                           
 15079                           ;i2c1.c: 341: if(SSP1CON2bits.ACKSTAT)
 15080  08B1  0024               	movlb	4	; select bank4
 15081  08B2  1F16               	btfss	22,6	;volatile
 15082  08B3  28BD               	goto	i1l72
 15083                           
 15084                           ;i2c1.c: 342: {
 15085                           ;i2c1.c: 343: i2c1_object.i2cErrors++;
 15086  08B4  3001               	movlw	1
 15087  08B5  00F3               	movwf	??_I2C1_ISR
 15088  08B6  0873               	movf	??_I2C1_ISR,w
 15089  08B7  0022               	movlb	2	; select bank2
 15090  08B8  07A4               	addwf	(_i2c1_object^(0+256)+4),f
 15091                           
 15092                           ;i2c1.c: 344: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
 15093  08B9  3004               	movlw	4
 15094  08BA  319B  23E1         	fcall	_I2C1_Stop
 15095                           
 15096                           ;i2c1.c: 345: }
 15097  08BC  0008               	return
 15098  08BD                     i1l72:	
 15099                           
 15100                           ;i2c1.c: 346: else
 15101                           ;i2c1.c: 347: {
 15102                           ;i2c1.c: 350: SSP1CON2bits.RSEN = 1;
 15103  08BD  1496               	bsf	22,1	;volatile
 15104                           
 15105                           ;i2c1.c: 354: i2c_address = 0x00F0 | ((i2c_address >> 8) & 0x0006);
 15106  08BE  087D               	movf	I2C1_ISR@i2c_address+1,w
 15107  08BF  00F4               	movwf	??_I2C1_ISR+1
 15108  08C0  087C               	movf	I2C1_ISR@i2c_address,w
 15109  08C1  00F3               	movwf	??_I2C1_ISR
 15110  08C2  0874               	movf	??_I2C1_ISR+1,w
 15111  08C3  00F3               	movwf	??_I2C1_ISR
 15112  08C4  01F4               	clrf	??_I2C1_ISR+1
 15113  08C5  3006               	movlw	6
 15114  08C6  0573               	andwf	??_I2C1_ISR,w
 15115  08C7  00F5               	movwf	??_I2C1_ISR+2
 15116  08C8  3000               	movlw	0
 15117  08C9  0574               	andwf	??_I2C1_ISR+1,w
 15118  08CA  00F6               	movwf	??_I2C1_ISR+3
 15119  08CB  30F0               	movlw	240
 15120  08CC  0475               	iorwf	??_I2C1_ISR+2,w
 15121  08CD  00FC               	movwf	I2C1_ISR@i2c_address
 15122  08CE  3000               	movlw	0
 15123  08CF  0476               	iorwf	??_I2C1_ISR+3,w
 15124  08D0  00FD               	movwf	I2C1_ISR@i2c_address+1
 15125                           
 15126                           ;i2c1.c: 357: i2c_address |= 0x0001;
 15127  08D1  147C               	bsf	I2C1_ISR@i2c_address,0
 15128                           
 15129                           ;i2c1.c: 360: i2c_10bit_address_restart = 1;
 15130  08D2  0022               	movlb	2	; select bank2
 15131  08D3  01D9               	clrf	I2C1_ISR@i2c_10bit_address_restart^(0+256)
 15132  08D4  0AD9               	incf	I2C1_ISR@i2c_10bit_address_restart^(0+256),f
 15133                           
 15134                           ;i2c1.c: 363: i2c1_state = S_MASTER_SEND_ADDR;
 15135  08D5  3002               	movlw	2
 15136  08D6  00F3               	movwf	??_I2C1_ISR
 15137  08D7  0873               	movf	??_I2C1_ISR,w
 15138  08D8  00DE               	movwf	_i2c1_state^(0+256)
 15139                           
 15140                           ;i2c1.c: 364: }
 15141                           ;i2c1.c: 366: break;
 15142  08D9  0008               	return
 15143  08DA                     i1l4939:	
 15144                           ;i2c1.c: 368: case S_MASTER_SEND_ADDR:
 15145                           
 15146                           
 15147                           ;i2c1.c: 381: if(i2c_10bit_address_restart != 1)
 15148  08DA  0359               	decf	I2C1_ISR@i2c_10bit_address_restart^(0+256),w
 15149  08DB  1903               	btfsc	3,2
 15150  08DC  28F5               	goto	i1l4957
 15151                           
 15152                           ;i2c1.c: 382: {
 15153                           ;i2c1.c: 384: i2c_address = p_i2c1_trb_current->address;
 15154  08DD  085C               	movf	_p_i2c1_trb_current^(0+256),w
 15155  08DE  0086               	movwf	6
 15156  08DF  3001               	movlw	1	; select bank2/3
 15157  08E0  0087               	movwf	7
 15158  08E1  3F40               	moviw [0]fsr1
 15159  08E2  00FC               	movwf	I2C1_ISR@i2c_address
 15160  08E3  3F41               	moviw [1]fsr1
 15161  08E4  00FD               	movwf	I2C1_ISR@i2c_address+1
 15162                           
 15163                           ;i2c1.c: 385: pi2c_buf_ptr = p_i2c1_trb_current->pbuffer;
 15164  08E5  085C               	movf	_p_i2c1_trb_current^(0+256),w
 15165  08E6  3E03               	addlw	3
 15166  08E7  0086               	movwf	6
 15167  08E8  3001               	movlw	1	; select bank2/3
 15168  08E9  0087               	movwf	7
 15169  08EA  3F40               	moviw [0]fsr1
 15170  08EB  00BD               	movwf	I2C1_ISR@pi2c_buf_ptr^(0+256)
 15171  08EC  3F41               	moviw [1]fsr1
 15172  08ED  00BE               	movwf	(I2C1_ISR@pi2c_buf_ptr+1)^(0+256)
 15173                           
 15174                           ;i2c1.c: 386: i2c_bytes_left = p_i2c1_trb_current->length;
 15175  08EE  085C               	movf	_p_i2c1_trb_current^(0+256),w
 15176  08EF  0086               	movwf	6
 15177  08F0  3001               	movlw	1	; select bank2/3
 15178  08F1  0087               	movwf	7
 15179  08F2  3001               	movlw	1	; select bank2/3
 15180  08F3  3F42               	moviw [2]fsr1
 15181  08F4  00DA               	movwf	I2C1_ISR@i2c_bytes_left^(0+256)
 15182  08F5                     i1l4957:	
 15183                           ;i2c1.c: 407: }
 15184                           ;i2c1.c: 408: }
 15185                           
 15186                           ;i2c1.c: 406: i2c_10bit_address_restart = 0;
 15187                           
 15188                           ;i2c1.c: 404: i2c1_state = S_MASTER_ACK_ADDR;
 15189                           
 15190                           ;i2c1.c: 400: else
 15191                           ;i2c1.c: 401: {
 15192                           ;i2c1.c: 403: SSP1BUF = i2c_address;
 15193                           
 15194                           ;i2c1.c: 399: }
 15195                           
 15196                           ;i2c1.c: 398: i2c1_state = S_MASTER_SEND_ADDR_10BIT_LSB;
 15197                           
 15198                           ;i2c1.c: 393: {
 15199                           ;i2c1.c: 397: SSP1BUF = 0xF0 | ((i2c_address >> 8) & 0x0006);
 15200                           
 15201                           ;i2c1.c: 391: {
 15202                           ;i2c1.c: 392: if (0 == i2c_10bit_address_restart)
 15203                           
 15204                           ;i2c1.c: 387: }
 15205                           ;i2c1.c: 390: if(!1 && (0x0 != i2c_address))
 15206                           
 15207                           
 15208                           ;i2c1.c: 409: else
 15209                           ;i2c1.c: 410: {
 15210                           ;i2c1.c: 412: SSP1BUF = i2c_address;
 15211  08F5  087C               	movf	I2C1_ISR@i2c_address,w
 15212  08F6  0024               	movlb	4	; select bank4
 15213  08F7  0091               	movwf	17	;volatile
 15214                           
 15215                           ;i2c1.c: 413: if(i2c_address & 0x01)
 15216  08F8  1C7C               	btfss	I2C1_ISR@i2c_address,0
 15217  08F9  2900               	goto	i1l4963
 15218                           
 15219                           ;i2c1.c: 414: {
 15220                           ;i2c1.c: 416: i2c1_state = S_MASTER_ACK_ADDR;
 15221  08FA  3005               	movlw	5
 15222  08FB  00F3               	movwf	??_I2C1_ISR
 15223  08FC  0873               	movf	??_I2C1_ISR,w
 15224  08FD  0022               	movlb	2	; select bank2
 15225  08FE  00DE               	movwf	_i2c1_state^(0+256)
 15226                           
 15227                           ;i2c1.c: 417: }
 15228  08FF  0008               	return
 15229  0900                     i1l4963:	
 15230                           
 15231                           ;i2c1.c: 418: else
 15232                           ;i2c1.c: 419: {
 15233                           ;i2c1.c: 421: i2c1_state = S_MASTER_SEND_DATA;
 15234  0900  3003               	movlw	3
 15235  0901  00F3               	movwf	??_I2C1_ISR
 15236  0902  0873               	movf	??_I2C1_ISR,w
 15237  0903  0022               	movlb	2	; select bank2
 15238  0904  00DE               	movwf	_i2c1_state^(0+256)
 15239                           
 15240                           ;i2c1.c: 422: }
 15241                           ;i2c1.c: 423: }
 15242                           ;i2c1.c: 424: break;
 15243  0905  0008               	return
 15244  0906                     i1l82:	
 15245                           ;i2c1.c: 426: case S_MASTER_SEND_DATA:
 15246                           
 15247                           
 15248                           ;i2c1.c: 429: if(SSP1CON2bits.ACKSTAT)
 15249  0906  0024               	movlb	4	; select bank4
 15250  0907  1F16               	btfss	22,6	;volatile
 15251  0908  2914               	goto	i1l4971
 15252                           
 15253                           ;i2c1.c: 430: {
 15254                           ;i2c1.c: 432: i2c1_object.i2cErrors++;
 15255  0909  3001               	movlw	1
 15256  090A  00F3               	movwf	??_I2C1_ISR
 15257  090B  0873               	movf	??_I2C1_ISR,w
 15258  090C  0022               	movlb	2	; select bank2
 15259  090D  07A4               	addwf	(_i2c1_object^(0+256)+4),f
 15260                           
 15261                           ;i2c1.c: 435: SSP1CON2bits.ACKSTAT = 0;
 15262  090E  0024               	movlb	4	; select bank4
 15263  090F  1316               	bcf	22,6	;volatile
 15264                           
 15265                           ;i2c1.c: 438: I2C1_Stop(I2C1_DATA_NO_ACK);
 15266  0910  3005               	movlw	5
 15267  0911  319B  23E1         	fcall	_I2C1_Stop
 15268                           
 15269                           ;i2c1.c: 440: }
 15270  0913  0008               	return
 15271  0914                     i1l4971:	
 15272                           
 15273                           ;i2c1.c: 441: else
 15274                           ;i2c1.c: 442: {
 15275                           ;i2c1.c: 444: if(i2c_bytes_left-- == 0U)
 15276  0914  3001               	movlw	1
 15277  0915  0022               	movlb	2	; select bank2
 15278  0916  02DA               	subwf	I2C1_ISR@i2c_bytes_left^(0+256),f
 15279  0917  0A5A               	incf	I2C1_ISR@i2c_bytes_left^(0+256),w
 15280  0918  1D03               	btfss	3,2
 15281  0919  292E               	goto	i1l4979
 15282                           
 15283                           ;i2c1.c: 445: {
 15284                           ;i2c1.c: 449: p_i2c1_trb_current++;
 15285  091A  3005               	movlw	5
 15286  091B  00F3               	movwf	??_I2C1_ISR
 15287  091C  0873               	movf	??_I2C1_ISR,w
 15288  091D  07DC               	addwf	_p_i2c1_trb_current^(0+256),f
 15289                           
 15290                           ;i2c1.c: 452: if(--i2c1_trb_count == 0)
 15291  091E  3001               	movlw	1
 15292  091F  02DD               	subwf	_i2c1_trb_count^(0+256),f
 15293  0920  1D03               	btfss	3,2
 15294  0921  2926               	goto	i1l86
 15295                           
 15296                           ;i2c1.c: 453: {
 15297                           ;i2c1.c: 454: I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 15298  0922  3000               	movlw	0
 15299  0923  319B  23E1         	fcall	_I2C1_Stop
 15300                           
 15301                           ;i2c1.c: 455: }
 15302  0925  0008               	return
 15303  0926                     i1l86:	
 15304                           
 15305                           ;i2c1.c: 456: else
 15306                           ;i2c1.c: 457: {
 15307                           ;i2c1.c: 464: SSP1CON2bits.RSEN = 1;
 15308  0926  0024               	movlb	4	; select bank4
 15309  0927  1496               	bsf	22,1	;volatile
 15310                           
 15311                           ;i2c1.c: 467: i2c1_state = S_MASTER_SEND_ADDR;
 15312  0928  3002               	movlw	2
 15313  0929  00F3               	movwf	??_I2C1_ISR
 15314  092A  0873               	movf	??_I2C1_ISR,w
 15315  092B  0022               	movlb	2	; select bank2
 15316  092C  00DE               	movwf	_i2c1_state^(0+256)
 15317                           
 15318                           ;i2c1.c: 469: }
 15319                           ;i2c1.c: 470: }
 15320  092D  0008               	return
 15321  092E                     i1l4979:	
 15322                           
 15323                           ;i2c1.c: 471: else
 15324                           ;i2c1.c: 472: {
 15325                           ;i2c1.c: 474: SSP1BUF = *pi2c_buf_ptr++;
 15326  092E  083D               	movf	I2C1_ISR@pi2c_buf_ptr^(0+256),w
 15327  092F  0084               	movwf	4
 15328  0930  083E               	movf	(I2C1_ISR@pi2c_buf_ptr+1)^(0+256),w
 15329  0931  0085               	movwf	5
 15330  0932  0800               	movf	0,w	;code access
 15331  0933  0024               	movlb	4	; select bank4
 15332  0934  0091               	movwf	17	;volatile
 15333  0935  3001               	movlw	1
 15334  0936  0022               	movlb	2	; select bank2
 15335  0937  07BD               	addwf	I2C1_ISR@pi2c_buf_ptr^(0+256),f
 15336  0938  3000               	movlw	0
 15337  0939  3DBE               	addwfc	(I2C1_ISR@pi2c_buf_ptr+1)^(0+256),f
 15338                           
 15339                           ;i2c1.c: 475: }
 15340                           ;i2c1.c: 476: }
 15341                           ;i2c1.c: 477: break;
 15342  093A  0008               	return
 15343  093B                     i1l89:	
 15344                           ;i2c1.c: 479: case S_MASTER_ACK_ADDR:
 15345                           
 15346                           
 15347                           ;i2c1.c: 482: if(SSP1CON2bits.ACKSTAT)
 15348  093B  0024               	movlb	4	; select bank4
 15349  093C  1F16               	btfss	22,6	;volatile
 15350  093D  2949               	goto	i1l90
 15351                           
 15352                           ;i2c1.c: 483: {
 15353                           ;i2c1.c: 486: i2c1_object.i2cErrors++;
 15354  093E  3001               	movlw	1
 15355  093F  00F3               	movwf	??_I2C1_ISR
 15356  0940  0873               	movf	??_I2C1_ISR,w
 15357  0941  0022               	movlb	2	; select bank2
 15358  0942  07A4               	addwf	(_i2c1_object^(0+256)+4),f
 15359                           
 15360                           ;i2c1.c: 489: I2C1_Stop(I2C1_MESSAGE_ADDRESS_NO_ACK);
 15361  0943  3004               	movlw	4
 15362  0944  319B  23E1         	fcall	_I2C1_Stop
 15363                           
 15364                           ;i2c1.c: 492: SSP1CON2bits.ACKSTAT = 0;
 15365  0946  0024               	movlb	4	; select bank4
 15366  0947  1316               	bcf	22,6	;volatile
 15367                           
 15368                           ;i2c1.c: 493: }
 15369  0948  0008               	return
 15370  0949                     i1l90:	
 15371                           
 15372                           ;i2c1.c: 494: else
 15373                           ;i2c1.c: 495: {
 15374                           ;i2c1.c: 496: SSP1CON2bits.RCEN = 1;
 15375  0949  1596               	bsf	22,3	;volatile
 15376                           
 15377                           ;i2c1.c: 497: i2c1_state = S_MASTER_ACK_RCV_DATA;
 15378  094A  3008               	movlw	8
 15379  094B  00F3               	movwf	??_I2C1_ISR
 15380  094C  0873               	movf	??_I2C1_ISR,w
 15381  094D  0022               	movlb	2	; select bank2
 15382  094E  00DE               	movwf	_i2c1_state^(0+256)
 15383                           
 15384                           ;i2c1.c: 498: }
 15385                           ;i2c1.c: 499: break;
 15386  094F  0008               	return
 15387  0950                     i1l4991:	
 15388                           ;i2c1.c: 501: case S_MASTER_RCV_DATA:
 15389                           
 15390                           
 15391                           ;i2c1.c: 506: i2c1_state = S_MASTER_ACK_RCV_DATA;
 15392  0950  3008               	movlw	8
 15393  0951  00F3               	movwf	??_I2C1_ISR
 15394  0952  0873               	movf	??_I2C1_ISR,w
 15395  0953  00DE               	movwf	_i2c1_state^(0+256)
 15396                           
 15397                           ;i2c1.c: 509: SSP1CON2bits.RCEN = 1;
 15398  0954  0024               	movlb	4	; select bank4
 15399  0955  1596               	bsf	22,3	;volatile
 15400                           
 15401                           ;i2c1.c: 511: break;
 15402  0956  0008               	return
 15403  0957                     i1l4995:	
 15404                           ;i2c1.c: 513: case S_MASTER_ACK_RCV_DATA:
 15405                           
 15406                           
 15407                           ;i2c1.c: 516: *pi2c_buf_ptr++ = SSP1BUF;
 15408  0957  0022               	movlb	2	; select bank2
 15409  0958  083D               	movf	I2C1_ISR@pi2c_buf_ptr^(0+256),w
 15410  0959  0086               	movwf	6
 15411  095A  083E               	movf	(I2C1_ISR@pi2c_buf_ptr+1)^(0+256),w
 15412  095B  0087               	movwf	7
 15413  095C  0024               	movlb	4	; select bank4
 15414  095D  0811               	movf	17,w	;volatile
 15415  095E  0081               	movwf	1
 15416  095F  3001               	movlw	1
 15417  0960  0022               	movlb	2	; select bank2
 15418  0961  07BD               	addwf	I2C1_ISR@pi2c_buf_ptr^(0+256),f
 15419  0962  3000               	movlw	0
 15420  0963  3DBE               	addwfc	(I2C1_ISR@pi2c_buf_ptr+1)^(0+256),f
 15421                           
 15422                           ;i2c1.c: 519: if(--i2c_bytes_left)
 15423  0964  3001               	movlw	1
 15424  0965  02DA               	subwf	I2C1_ISR@i2c_bytes_left^(0+256),f
 15425  0966  1903               	btfsc	3,2
 15426  0967  2970               	goto	i1l94
 15427                           
 15428                           ;i2c1.c: 520: {
 15429                           ;i2c1.c: 526: SSP1CON2bits.ACKDT = 0;
 15430  0968  0024               	movlb	4	; select bank4
 15431  0969  1296               	bcf	22,5	;volatile
 15432                           
 15433                           ;i2c1.c: 529: i2c1_state = S_MASTER_RCV_DATA;
 15434  096A  3006               	movlw	6
 15435  096B  00F3               	movwf	??_I2C1_ISR
 15436  096C  0873               	movf	??_I2C1_ISR,w
 15437  096D  0022               	movlb	2	; select bank2
 15438  096E  00DE               	movwf	_i2c1_state^(0+256)
 15439                           
 15440                           ;i2c1.c: 530: }
 15441  096F  2974               	goto	i1l5007
 15442  0970                     i1l94:	
 15443                           
 15444                           ;i2c1.c: 531: else
 15445                           ;i2c1.c: 532: {
 15446                           ;i2c1.c: 536: SSP1CON2bits.ACKDT = 1;
 15447  0970  0024               	movlb	4	; select bank4
 15448  0971  1696               	bsf	22,5	;volatile
 15449                           
 15450                           ;i2c1.c: 538: I2C1_FunctionComplete();
 15451  0972  319A  22AB         	fcall	_I2C1_FunctionComplete
 15452  0974                     i1l5007:	
 15453                           
 15454                           ;i2c1.c: 539: }
 15455                           ;i2c1.c: 542: SSP1CON2bits.ACKEN = 1;
 15456  0974  0024               	movlb	4	; select bank4
 15457  0975  1616               	bsf	22,4	;volatile
 15458                           
 15459                           ;i2c1.c: 543: break;
 15460  0976  0008               	return
 15461  0977                     i1l5009:	
 15462                           ;i2c1.c: 545: case S_MASTER_RCV_STOP:
 15463                           
 15464                           
 15465                           ;i2c1.c: 546: case S_MASTER_SEND_STOP:
 15466                           ;i2c1.c: 549: I2C1_Stop(I2C1_MESSAGE_COMPLETE);
 15467  0977  3000               	movlw	0
 15468  0978  319B  23E1         	fcall	_I2C1_Stop
 15469                           
 15470                           ;i2c1.c: 550: break;
 15471  097A  0008               	return
 15472  097B                     i1l5011:	
 15473                           ;i2c1.c: 552: default:
 15474                           
 15475                           
 15476                           ;i2c1.c: 556: i2c1_object.i2cErrors++;
 15477  097B  3001               	movlw	1
 15478  097C  00F3               	movwf	??_I2C1_ISR
 15479  097D  0873               	movf	??_I2C1_ISR,w
 15480  097E  0022               	movlb	2	; select bank2
 15481  097F  07A4               	addwf	(_i2c1_object^(0+256)+4),f
 15482                           
 15483                           ;i2c1.c: 557: I2C1_Stop(I2C1_LOST_STATE);
 15484  0980  3006               	movlw	6
 15485  0981  319B  23E1         	fcall	_I2C1_Stop
 15486                           
 15487                           ;i2c1.c: 560: }
 15488                           
 15489                           ;i2c1.c: 558: break;
 15490  0983  0008               	return
 15491  0984                     i1l5017:	
 15492  0984  0022               	movlb	2	; select bank2
 15493  0985  085E               	movf	_i2c1_state^(0+256),w
 15494                           
 15495                           ; Switch size 1, requested type "space"
 15496                           ; Number of cases is 11, Range of values is 0 to 11
 15497                           ; switch strategies available:
 15498                           ; Name         Instructions Cycles
 15499                           ; direct_byte           30     6 (fixed)
 15500                           ; simple_byte           34    18 (average)
 15501                           ; jumptable            260     6 (fixed)
 15502                           ;	Chosen strategy is direct_byte
 15503  0986  0084               	movwf	4
 15504  0987  300C               	movlw	12
 15505  0988  0204               	subwf	4,w
 15506  0989  1803               	skipnc
 15507  098A  297B               	goto	i1l5011
 15508  098B  3198               	movlp	high i1S6081
 15509  098C  3504               	lslf	4,w
 15510  098D  3E00               	addlw	low i1S6081
 15511  098E  0082               	movwf	2
 15512  098F  0008               	return
 15513  0990                     __end_of_I2C1_ISR:	
 15514                           
 15515                           	psect	swtext1
 15516  1800                     __pswtext1:	
 15517  1800                     i1S6081:	
 15518  1800  3188  2858         	ljmp	i1l60
 15519  1802  3188  2886         	ljmp	i1l65
 15520  1804  3188  28DA         	ljmp	i1l4939
 15521  1806  3189  2906         	ljmp	i1l82
 15522  1808  3189  2977         	ljmp	i1l5009
 15523  180A  3189  293B         	ljmp	i1l89
 15524  180C  3189  2950         	ljmp	i1l4991
 15525  180E  3189  2977         	ljmp	i1l5009
 15526  1810  3189  2957         	ljmp	i1l4995
 15527  1812  3189  297B         	ljmp	i1l5011
 15528  1814  3188  288E         	ljmp	i1l66
 15529  1816  3188  28B1         	ljmp	i1l71
 15530                           
 15531                           	psect	text70
 15532  1BE1                     __ptext70:	
 15533 ;; *************** function _I2C1_Stop *****************
 15534 ;; Defined at:
 15535 ;;		line 581 in file "mcc_generated_files/i2c1.c"
 15536 ;; Parameters:    Size  Location     Type
 15537 ;;  completion_c    1    wreg     enum E2972
 15538 ;; Auto vars:     Size  Location     Type
 15539 ;;  completion_c    1    2[COMMON] enum E2972
 15540 ;; Return value:  Size  Location     Type
 15541 ;;                  1    wreg      void 
 15542 ;; Registers used:
 15543 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 15544 ;; Tracked objects:
 15545 ;;		On entry : 0/0
 15546 ;;		On exit  : 0/0
 15547 ;;		Unchanged: 0/0
 15548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15549 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15550 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15551 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15552 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15553 ;;Total ram usage:        3 bytes
 15554 ;; Hardware stack levels used:    1
 15555 ;; This function calls:
 15556 ;;		Nothing
 15557 ;; This function is called by:
 15558 ;;		_I2C1_ISR
 15559 ;; This function uses a non-reentrant model
 15560 ;;
 15561                           
 15562                           
 15563                           ;psect for function _I2C1_Stop
 15564  1BE1                     _I2C1_Stop:	
 15565                           
 15566                           ;incstack = 0
 15567                           ; Regs used in _I2C1_Stop: [wreg+fsr1l+fsr1h+status,2+status,0]
 15568                           ;I2C1_Stop@completion_code stored from wreg
 15569  1BE1  00F2               	movwf	I2C1_Stop@completion_code
 15570                           
 15571                           ;i2c1.c: 584: SSP1CON2bits.PEN = 1;
 15572  1BE2  0024               	movlb	4	; select bank4
 15573  1BE3  1516               	bsf	22,2	;volatile
 15574                           
 15575                           ;i2c1.c: 587: if (p_i2c1_current->pTrFlag != (0))
 15576  1BE4  0022               	movlb	2	; select bank2
 15577  1BE5  085B               	movf	_p_i2c1_current^(0+256),w
 15578  1BE6  3E02               	addlw	2
 15579  1BE7  0086               	movwf	6
 15580  1BE8  3001               	movlw	1	; select bank2/3
 15581  1BE9  0087               	movwf	7
 15582  1BEA  0016               	moviw fsr1++
 15583  1BEB  0401               	iorwf	1,w
 15584  1BEC  1903               	btfsc	3,2
 15585  1BED  2BFD               	goto	i1l4713
 15586                           
 15587                           ;i2c1.c: 588: {
 15588                           ;i2c1.c: 590: *(p_i2c1_current->pTrFlag) = completion_code;
 15589  1BEE  085B               	movf	_p_i2c1_current^(0+256),w
 15590  1BEF  3E02               	addlw	2
 15591  1BF0  0086               	movwf	6
 15592  1BF1  3001               	movlw	1	; select bank2/3
 15593  1BF2  0087               	movwf	7
 15594  1BF3  3F40               	moviw [0]fsr1
 15595  1BF4  00F0               	movwf	??_I2C1_Stop
 15596  1BF5  3F41               	moviw [1]fsr1
 15597  1BF6  00F1               	movwf	??_I2C1_Stop+1
 15598  1BF7  0870               	movf	??_I2C1_Stop,w
 15599  1BF8  0086               	movwf	6
 15600  1BF9  0871               	movf	??_I2C1_Stop+1,w
 15601  1BFA  0087               	movwf	7
 15602  1BFB  0872               	movf	I2C1_Stop@completion_code,w
 15603  1BFC  0081               	movwf	1
 15604  1BFD                     i1l4713:	
 15605                           
 15606                           ;i2c1.c: 591: }
 15607                           ;i2c1.c: 594: i2c1_state = S_MASTER_IDLE;
 15608  1BFD  01DE               	clrf	_i2c1_state^(0+256)
 15609  1BFE  0008               	return
 15610  1BFF                     __end_of_I2C1_Stop:	
 15611                           
 15612                           	psect	text71
 15613  1AAB                     __ptext71:	
 15614 ;; *************** function _I2C1_FunctionComplete *****************
 15615 ;; Defined at:
 15616 ;;		line 563 in file "mcc_generated_files/i2c1.c"
 15617 ;; Parameters:    Size  Location     Type
 15618 ;;		None
 15619 ;; Auto vars:     Size  Location     Type
 15620 ;;		None
 15621 ;; Return value:  Size  Location     Type
 15622 ;;                  1    wreg      void 
 15623 ;; Registers used:
 15624 ;;		wreg, status,2, status,0
 15625 ;; Tracked objects:
 15626 ;;		On entry : 0/0
 15627 ;;		On exit  : 0/0
 15628 ;;		Unchanged: 0/0
 15629 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15630 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15631 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15632 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15633 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15634 ;;Total ram usage:        1 bytes
 15635 ;; Hardware stack levels used:    1
 15636 ;; This function calls:
 15637 ;;		Nothing
 15638 ;; This function is called by:
 15639 ;;		_I2C1_ISR
 15640 ;; This function uses a non-reentrant model
 15641 ;;
 15642                           
 15643                           
 15644                           ;psect for function _I2C1_FunctionComplete
 15645  1AAB                     _I2C1_FunctionComplete:	
 15646                           
 15647                           ;i2c1.c: 567: p_i2c1_trb_current++;
 15648                           
 15649                           ;incstack = 0
 15650                           ; Regs used in _I2C1_FunctionComplete: [wreg+status,2+status,0]
 15651  1AAB  3005               	movlw	5
 15652  1AAC  00F0               	movwf	??_I2C1_FunctionComplete
 15653  1AAD  0870               	movf	??_I2C1_FunctionComplete,w
 15654  1AAE  0022               	movlb	2	; select bank2
 15655  1AAF  07DC               	addwf	_p_i2c1_trb_current^(0+256),f
 15656                           
 15657                           ;i2c1.c: 570: if(--i2c1_trb_count == 0)
 15658  1AB0  3001               	movlw	1
 15659  1AB1  02DD               	subwf	_i2c1_trb_count^(0+256),f
 15660  1AB2  1D03               	btfss	3,2
 15661  1AB3  2AB9               	goto	i1l101
 15662                           
 15663                           ;i2c1.c: 571: {
 15664                           ;i2c1.c: 572: i2c1_state = S_MASTER_SEND_STOP;
 15665  1AB4  3004               	movlw	4
 15666  1AB5  00F0               	movwf	??_I2C1_FunctionComplete
 15667  1AB6  0870               	movf	??_I2C1_FunctionComplete,w
 15668  1AB7  00DE               	movwf	_i2c1_state^(0+256)
 15669                           
 15670                           ;i2c1.c: 573: }
 15671  1AB8  0008               	return
 15672  1AB9                     i1l101:	
 15673                           
 15674                           ;i2c1.c: 574: else
 15675                           ;i2c1.c: 575: {
 15676                           ;i2c1.c: 576: i2c1_state = S_MASTER_RESTART;
 15677  1AB9  01DE               	clrf	_i2c1_state^(0+256)
 15678  1ABA  0ADE               	incf	_i2c1_state^(0+256),f
 15679  1ABB  0008               	return
 15680  1ABC                     __end_of_I2C1_FunctionComplete:	
 15681                           
 15682                           	psect	text72
 15683  0003                     __ptext72:	
 15684 ;; *************** function _I2C1_BusCollisionISR *****************
 15685 ;; Defined at:
 15686 ;;		line 728 in file "mcc_generated_files/i2c1.c"
 15687 ;; Parameters:    Size  Location     Type
 15688 ;;		None
 15689 ;; Auto vars:     Size  Location     Type
 15690 ;;		None
 15691 ;; Return value:  Size  Location     Type
 15692 ;;                  1    wreg      void 
 15693 ;; Registers used:
 15694 ;;		None
 15695 ;; Tracked objects:
 15696 ;;		On entry : 0/0
 15697 ;;		On exit  : 0/0
 15698 ;;		Unchanged: 0/0
 15699 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15700 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15701 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15702 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15703 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15704 ;;Total ram usage:        0 bytes
 15705 ;; Hardware stack levels used:    1
 15706 ;; This function calls:
 15707 ;;		Nothing
 15708 ;; This function is called by:
 15709 ;;		_INTERRUPT_InterruptManager
 15710 ;; This function uses a non-reentrant model
 15711 ;;
 15712                           
 15713                           
 15714                           ;psect for function _I2C1_BusCollisionISR
 15715  0003                     _I2C1_BusCollisionISR:	
 15716                           
 15717                           ;incstack = 0
 15718                           ; Regs used in _I2C1_BusCollisionISR: []
 15719  0003  0008               	return
 15720  0004                     __end_of_I2C1_BusCollisionISR:	
 15721                           
 15722                           	psect	text73
 15723  1BC3                     __ptext73:	
 15724 ;; *************** function _EUSART_Transmit_ISR *****************
 15725 ;; Defined at:
 15726 ;;		line 165 in file "mcc_generated_files/eusart.c"
 15727 ;; Parameters:    Size  Location     Type
 15728 ;;		None
 15729 ;; Auto vars:     Size  Location     Type
 15730 ;;		None
 15731 ;; Return value:  Size  Location     Type
 15732 ;;                  1    wreg      void 
 15733 ;; Registers used:
 15734 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 15735 ;; Tracked objects:
 15736 ;;		On entry : 0/0
 15737 ;;		On exit  : 0/0
 15738 ;;		Unchanged: 0/0
 15739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15742 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15743 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15744 ;;Total ram usage:        1 bytes
 15745 ;; Hardware stack levels used:    1
 15746 ;; This function calls:
 15747 ;;		Nothing
 15748 ;; This function is called by:
 15749 ;;		_INTERRUPT_InterruptManager
 15750 ;; This function uses a non-reentrant model
 15751 ;;
 15752                           
 15753                           
 15754                           ;psect for function _EUSART_Transmit_ISR
 15755  1BC3                     _EUSART_Transmit_ISR:	
 15756                           
 15757                           ;eusart.c: 169: if(sizeof(eusartTxBuffer) > eusartTxBufferRemaining)
 15758                           
 15759                           ;incstack = 0
 15760                           ; Regs used in _EUSART_Transmit_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 15761  1BC3  3040               	movlw	64
 15762  1BC4  0022               	movlb	2	; select bank2
 15763  1BC5  0258               	subwf	_eusartTxBufferRemaining^(0+256),w	;volatile
 15764  1BC6  1803               	skipnc
 15765  1BC7  2BDE               	goto	i1l256
 15766                           
 15767                           ;eusart.c: 170: {
 15768                           ;eusart.c: 171: TXREG = eusartTxBuffer[eusartTxTail++];
 15769  1BC8  087A               	movf	_eusartTxTail,w
 15770  1BC9  3EA0               	addlw	(low (_eusartTxBuffer| (0+512)))& (0+255)
 15771  1BCA  0086               	movwf	6
 15772  1BCB  3002               	movlw	2	; select bank5/6
 15773  1BCC  0087               	movwf	7
 15774  1BCD  0801               	movf	1,w
 15775  1BCE  0023               	movlb	3	; select bank3
 15776  1BCF  009A               	movwf	26	;volatile
 15777  1BD0  3001               	movlw	1
 15778  1BD1  00F0               	movwf	??_EUSART_Transmit_ISR
 15779  1BD2  0870               	movf	??_EUSART_Transmit_ISR,w
 15780  1BD3  07FA               	addwf	_eusartTxTail,f	;volatile
 15781                           
 15782                           ;eusart.c: 172: if(sizeof(eusartTxBuffer) <= eusartTxTail)
 15783  1BD4  3040               	movlw	64
 15784  1BD5  027A               	subwf	_eusartTxTail,w	;volatile
 15785  1BD6  1803               	btfsc	3,0
 15786                           
 15787                           ;eusart.c: 173: {
 15788                           ;eusart.c: 174: eusartTxTail = 0;
 15789  1BD7  01FA               	clrf	_eusartTxTail	;volatile
 15790                           
 15791                           ;eusart.c: 175: }
 15792                           ;eusart.c: 176: eusartTxBufferRemaining++;
 15793  1BD8  3001               	movlw	1
 15794  1BD9  00F0               	movwf	??_EUSART_Transmit_ISR
 15795  1BDA  0870               	movf	??_EUSART_Transmit_ISR,w
 15796  1BDB  0022               	movlb	2	; select bank2
 15797  1BDC  07D8               	addwf	_eusartTxBufferRemaining^(0+256),f	;volatile
 15798                           
 15799                           ;eusart.c: 177: }
 15800  1BDD  0008               	return
 15801  1BDE                     i1l256:	
 15802                           
 15803                           ;eusart.c: 178: else
 15804                           ;eusart.c: 179: {
 15805                           ;eusart.c: 180: PIE1bits.TXIE = 0;
 15806  1BDE  0021               	movlb	1	; select bank1
 15807  1BDF  1211               	bcf	17,4	;volatile
 15808  1BE0  0008               	return
 15809  1BE1                     __end_of_EUSART_Transmit_ISR:	
 15810                           
 15811                           	psect	text74
 15812  1B6F                     __ptext74:	
 15813 ;; *************** function _EUSART_Receive_ISR *****************
 15814 ;; Defined at:
 15815 ;;		line 184 in file "mcc_generated_files/eusart.c"
 15816 ;; Parameters:    Size  Location     Type
 15817 ;;		None
 15818 ;; Auto vars:     Size  Location     Type
 15819 ;;		None
 15820 ;; Return value:  Size  Location     Type
 15821 ;;                  1    wreg      void 
 15822 ;; Registers used:
 15823 ;;		wreg, fsr1l, fsr1h, status,2, status,0
 15824 ;; Tracked objects:
 15825 ;;		On entry : 0/0
 15826 ;;		On exit  : 0/0
 15827 ;;		Unchanged: 0/0
 15828 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12
 15829 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15831 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15832 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0
 15833 ;;Total ram usage:        1 bytes
 15834 ;; Hardware stack levels used:    1
 15835 ;; This function calls:
 15836 ;;		Nothing
 15837 ;; This function is called by:
 15838 ;;		_INTERRUPT_InterruptManager
 15839 ;; This function uses a non-reentrant model
 15840 ;;
 15841                           
 15842                           
 15843                           ;psect for function _EUSART_Receive_ISR
 15844  1B6F                     _EUSART_Receive_ISR:	
 15845                           
 15846                           ;eusart.c: 187: if(1 == RCSTAbits.OERR)
 15847                           
 15848                           ;incstack = 0
 15849                           ; Regs used in _EUSART_Receive_ISR: [wreg+fsr1l+fsr1h+status,2+status,0]
 15850  1B6F  0023               	movlb	3	; select bank3
 15851  1B70  1C9D               	btfss	29,1	;volatile
 15852  1B71  2B74               	goto	i1l5039
 15853                           
 15854                           ;eusart.c: 188: {
 15855                           ;eusart.c: 191: RCSTAbits.CREN = 0;
 15856  1B72  121D               	bcf	29,4	;volatile
 15857                           
 15858                           ;eusart.c: 192: RCSTAbits.CREN = 1;
 15859  1B73  161D               	bsf	29,4	;volatile
 15860  1B74                     i1l5039:	
 15861                           
 15862                           ;eusart.c: 193: }
 15863                           ;eusart.c: 196: eusartRxBuffer[eusartRxHead++] = RCREG;
 15864  1B74  0819               	movf	25,w	;volatile
 15865  1B75  00F0               	movwf	??_EUSART_Receive_ISR
 15866  1B76  0022               	movlb	2	; select bank2
 15867  1B77  0857               	movf	_eusartRxHead^(0+256),w
 15868  1B78  3E20               	addlw	(low (_eusartRxBuffer| (0+768)))& (0+255)
 15869  1B79  0086               	movwf	6
 15870  1B7A  3003               	movlw	3	; select bank6/7
 15871  1B7B  0087               	movwf	7
 15872  1B7C  0870               	movf	??_EUSART_Receive_ISR,w
 15873  1B7D  0081               	movwf	1
 15874  1B7E  3001               	movlw	1
 15875  1B7F  00F0               	movwf	??_EUSART_Receive_ISR
 15876  1B80  0870               	movf	??_EUSART_Receive_ISR,w
 15877  1B81  07D7               	addwf	_eusartRxHead^(0+256),f	;volatile
 15878                           
 15879                           ;eusart.c: 197: if(sizeof(eusartRxBuffer) <= eusartRxHead)
 15880  1B82  3040               	movlw	64
 15881  1B83  0257               	subwf	_eusartRxHead^(0+256),w	;volatile
 15882  1B84  1803               	btfsc	3,0
 15883                           
 15884                           ;eusart.c: 198: {
 15885                           ;eusart.c: 199: eusartRxHead = 0;
 15886  1B85  01D7               	clrf	_eusartRxHead^(0+256)	;volatile
 15887                           
 15888                           ;eusart.c: 200: }
 15889                           ;eusart.c: 201: eusartRxCount++;
 15890  1B86  3001               	movlw	1
 15891  1B87  00F0               	movwf	??_EUSART_Receive_ISR
 15892  1B88  0870               	movf	??_EUSART_Receive_ISR,w
 15893  1B89  07D5               	addwf	_eusartRxCount^(0+256),f	;volatile
 15894  1B8A  0008               	return
 15895  1B8B                     __end_of_EUSART_Receive_ISR:	
 15896  007E                     btemp	set	126	;btemp
 15897  007E                     int$flags	set	126
 15898  007E                     wtemp0	set	126


Data Sizes:
    Strings     526
    Constant    17
    Data        6
    BSS         333
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      14
    BANK0            80     80      80
    BANK1            80     80      80
    BANK2            80      5      79
    BANK3            80      0      67
    BANK4            80      0      64
    BANK5            80      0      64
    BANK6            80      0      64
    BANK7            80      0       0
    BANK8            80      0       0
    BANK9            80      0       0
    BANK10           16      0       0
    BANK11            0      0       0
    BANK12            0      0       0

Pointer List with Targets:

    i2c1_tr_queue.ptrb_list.pbuffer	PTR unsigned char  size(2) Largest target is 50
		 -> i2c1_write_no_data@buf(BANK0[1]), i2c1_read@reg(BANK0[1]), sen@length(BANK0[1]), sen@type(BANK0[1]), 
		 -> read_buf(BANK3[16]), exec_remote_cmd@send_buf(BANK1[50]), exec_remote_cmd@data(BANK1[1]), 

    i2c1_tr_queue.pTrFlag	PTR enum E2972 size(1) Largest target is 1
		 -> i2c1_write_no_data@status(BANK0[1]), i2c1_read@status(BANK0[1]), i2c1_write@status(BANK0[1]), 

    i2c1_tr_queue.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK3[5]), I2C1_MasterWrite@trBlock(BANK3[5]), 

    Absolute function$3	PTR unsigned char  size(1) Largest target is 16
		 -> read_buf(BANK3[16]), NULL(NULL[0]), 

    PROTOCOL_Extension_Handler$0	PTR unsigned char  size(2) Largest target is 48
		 -> buf(BANK4[48]), edge_meter@buf(BANK1[48]), 

    edge_func$3	PTR unsigned char  size(1) Largest target is 16
		 -> read_buf(BANK3[16]), NULL(NULL[0]), 

    data	PTR unsigned char  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 192
		 -> buf(BANK4[48]), edge_meter@buf(BANK1[48]), cmd_buf(BIGRAM[192]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_54(CODE[4]), STR_53(CODE[4]), STR_51(CODE[4]), STR_50(CODE[4]), 
		 -> STR_47(CODE[4]), STR_46(CODE[4]), STR_45(CODE[4]), STR_43(CODE[4]), 
		 -> STR_38(CODE[4]), STR_37(CODE[4]), STR_36(CODE[4]), STR_31(CODE[4]), 
		 -> STR_29(CODE[4]), STR_27(CODE[4]), STR_26(CODE[4]), STR_25(CODE[4]), 
		 -> STR_24(CODE[4]), STR_10(CODE[4]), STR_9(CODE[4]), STR_6(CODE[4]), 
		 -> STR_5(CODE[4]), STR_4(CODE[4]), STR_1(CODE[4]), 

    strcpy@from	PTR const unsigned char  size(2) Largest target is 48
		 -> buf(BANK4[48]), edge_meter@buf(BANK1[48]), 

    strcpy@to	PTR unsigned char  size(2) Largest target is 192
		 -> cmd_buf(BIGRAM[192]), 

    strcpy@cp	PTR unsigned char  size(2) Largest target is 192
		 -> cmd_buf(BIGRAM[192]), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 35
		 -> STR_23(CODE[35]), STR_22(CODE[5]), STR_21(CODE[23]), STR_20(CODE[17]), 
		 -> STR_19(CODE[5]), STR_18(CODE[8]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), 

    sprintf@wh	PTR unsigned char  size(1) Largest target is 48
		 -> edge_meter@buf(BANK1[48]), 

    pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), putch(), 

    pb.ptr	PTR unsigned char  size(1) Largest target is 48
		 -> edge_meter@buf(BANK1[48]), NULL(NULL[0]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 30
		 -> STR_87(CODE[10]), STR_86(CODE[9]), STR_85(CODE[10]), STR_84(CODE[9]), 
		 -> STR_83(CODE[4]), STR_82(CODE[4]), STR_81(CODE[4]), STR_80(CODE[4]), 
		 -> STR_79(CODE[4]), STR_78(CODE[4]), STR_77(CODE[4]), STR_76(CODE[4]), 
		 -> STR_75(CODE[14]), STR_74(CODE[9]), STR_73(CODE[10]), STR_72(CODE[9]), 
		 -> STR_71(CODE[10]), STR_70(CODE[9]), STR_69(CODE[7]), STR_68(CODE[4]), 
		 -> STR_67(CODE[4]), STR_66(CODE[9]), STR_65(CODE[4]), STR_64(CODE[4]), 
		 -> STR_63(CODE[10]), STR_62(CODE[4]), STR_61(CODE[4]), STR_60(CODE[8]), 
		 -> STR_59(CODE[4]), STR_58(CODE[4]), STR_57(CODE[9]), STR_56(CODE[6]), 
		 -> STR_55(CODE[10]), STR_52(CODE[10]), STR_48(CODE[10]), STR_44(CODE[10]), 
		 -> STR_42(CODE[5]), STR_39(CODE[30]), STR_35(CODE[4]), STR_34(CODE[4]), 
		 -> STR_33(CODE[4]), STR_32(CODE[7]), STR_30(CODE[26]), STR_28(CODE[26]), 
		 -> STR_17(CODE[22]), STR_16(CODE[22]), STR_15(CODE[4]), STR_14(CODE[4]), 
		 -> STR_13(CODE[7]), STR_12(CODE[25]), STR_11(CODE[10]), STR_8(CODE[12]), 
		 -> STR_7(CODE[11]), STR_3(CODE[3]), STR_2(CODE[10]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), 

    pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), putch(), 

    pb.ptr	PTR unsigned char  size(1) Largest target is 48
		 -> edge_meter@buf(BANK1[48]), NULL(NULL[0]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 192
		 -> buf(BANK4[48]), edge_meter@buf(BANK1[48]), cmd_buf(BIGRAM[192]), 

    sp__PROTOCOL_I2C_SEN	PTR unsigned char  size(2) Largest target is 16
		 -> type_no_data(BANK2[1]), PROTOCOL_Send_uint8_t@pbuf(BANK2[1]), sendbuf(BANK4[16]), readbuf.length(BANK3[1]), 
		 -> readbuf.type(BANK3[1]), readbuf(BANK3[6]), 

    PROTOCOL_Print_TLV@pbuffer	PTR unsigned char  size(1) Largest target is 16
		 -> read_buf(BANK3[16]), NULL(NULL[0]), 

    PROTOCOL_EXT@char_buf	PTR unsigned char  size(1) Largest target is 48
		 -> buf(BANK4[48]), 

    PROTOCOL_Set_Extension_Handler@extension_handler	PTR void  size(2) Largest target is 1
		 -> command_handler(), 

    PROTOCOL_Extension_Handler	PTR FTN(PTR unsigned char ,)void  size(2) Largest target is 1
		 -> command_handler(), Absolute function(), 

    PROTOCOL_Loop_Func	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    PROTOCOL_Initialize@inv_handler	PTR void  size(2) Largest target is 1
		 -> inv_handler(), 

    PROTOCOL_Inv_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> inv_handler(), Absolute function(), 

    PROTOCOL_Initialize@set_handler	PTR void  size(1) Largest target is 0
		 -> NULL(NULL[0]), 

    PROTOCOL_Set_Handler	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), NULL(NULL[0]), 

    PROTOCOL_Initialize@stop_handler	PTR void  size(2) Largest target is 1
		 -> stop_handler(), 

    PROTOCOL_Stop_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> stop_handler(), Absolute function(), 

    PROTOCOL_Initialize@start_handler	PTR void  size(2) Largest target is 1
		 -> start_handler(), 

    PROTOCOL_Start_Handler	PTR FTN()void  size(2) Largest target is 1
		 -> start_handler(), Absolute function(), 

    PROTOCOL_Initialize@device_id	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_40(CODE[17]), 

    device_id_	PTR const unsigned char  size(2) Largest target is 8192
		 -> ROM(CODE[8192]), STR_40(CODE[17]), 

    S1105$pbuffer	PTR unsigned char  size(2) Largest target is 16
		 -> PROTOCOL_Send_uint8_t@pbuf(BANK2[1]), sendbuf(BANK4[16]), 

    readbuf.pbuffer	PTR unsigned char  size(2) Largest target is 16
		 -> PROTOCOL_Send_uint8_t@pbuf(BANK2[1]), sendbuf(BANK4[16]), 

    _doprnt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), printf@ap(BANK0[1]), 

    _doprnt@cp	PTR const unsigned char  size(2) Largest target is 8192
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), STR_49(CODE[4]), buf(BANK4[48]), 
		 -> STR_41(CODE[7]), ROM(CODE[8192]), _doprnt@c(BANK0[1]), STR_40(CODE[17]), 
		 -> edge_meter@buf(BANK1[48]), WHEEL_RADIUS(CODE[3]), I2C1_ISR@i2c_address(COMMON[2]), NULL(NULL[0]), 

    _doprnt@f	PTR const unsigned char  size(2) Largest target is 35
		 -> STR_87(CODE[10]), STR_86(CODE[9]), STR_85(CODE[10]), STR_84(CODE[9]), 
		 -> STR_83(CODE[4]), STR_82(CODE[4]), STR_81(CODE[4]), STR_80(CODE[4]), 
		 -> STR_79(CODE[4]), STR_78(CODE[4]), STR_77(CODE[4]), STR_76(CODE[4]), 
		 -> STR_75(CODE[14]), STR_74(CODE[9]), STR_73(CODE[10]), STR_72(CODE[9]), 
		 -> STR_71(CODE[10]), STR_70(CODE[9]), STR_69(CODE[7]), STR_68(CODE[4]), 
		 -> STR_67(CODE[4]), STR_66(CODE[9]), STR_65(CODE[4]), STR_64(CODE[4]), 
		 -> STR_63(CODE[10]), STR_62(CODE[4]), STR_61(CODE[4]), STR_60(CODE[8]), 
		 -> STR_59(CODE[4]), STR_58(CODE[4]), STR_57(CODE[9]), STR_56(CODE[6]), 
		 -> STR_55(CODE[10]), STR_52(CODE[10]), STR_48(CODE[10]), STR_44(CODE[10]), 
		 -> STR_42(CODE[5]), STR_39(CODE[30]), STR_35(CODE[4]), STR_34(CODE[4]), 
		 -> STR_33(CODE[4]), STR_32(CODE[7]), STR_30(CODE[26]), STR_28(CODE[26]), 
		 -> STR_23(CODE[35]), STR_22(CODE[5]), STR_21(CODE[23]), STR_20(CODE[17]), 
		 -> STR_19(CODE[5]), STR_18(CODE[8]), STR_17(CODE[22]), STR_16(CODE[22]), 
		 -> STR_15(CODE[4]), STR_14(CODE[4]), STR_13(CODE[7]), STR_12(CODE[25]), 
		 -> STR_11(CODE[10]), STR_8(CODE[12]), STR_7(CODE[11]), STR_3(CODE[3]), 
		 -> STR_2(CODE[10]), 

    S1055__prbuf$func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), putch(), 

    _doprnt@pb.func	PTR FTN(unsigned char ,)void  size(2) Largest target is 1
		 -> Absolute function(), putch(), 

    S1055__prbuf$ptr	PTR unsigned char  size(1) Largest target is 48
		 -> edge_meter@buf(BANK1[48]), NULL(NULL[0]), 

    _doprnt@pb.ptr	PTR unsigned char  size(1) Largest target is 48
		 -> edge_meter@buf(BANK1[48]), NULL(NULL[0]), 

    _doprnt@pb	PTR struct __prbuf size(1) Largest target is 4
		 -> sprintf@pb(BANK0[3]), printf@pb(BANK0[3]), 

    i2c1_read@pbuf	PTR unsigned char  size(2) Largest target is 16
		 -> sen@length(BANK0[1]), sen@type(BANK0[1]), read_buf(BANK3[16]), exec_remote_cmd@data(BANK1[1]), 

    i2c1_write@pbuf	PTR unsigned char  size(1) Largest target is 50
		 -> exec_remote_cmd@send_buf(BANK1[50]), 

    command_handler@buf	PTR unsigned char  size(2) Largest target is 48
		 -> buf(BANK4[48]), edge_meter@buf(BANK1[48]), 

    edge_meter@pbuf	PTR unsigned char  size(1) Largest target is 16
		 -> read_buf(BANK3[16]), NULL(NULL[0]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 192
		 -> cmd_buf(BIGRAM[192]), 

    put_cmd@buf	PTR unsigned char  size(2) Largest target is 48
		 -> buf(BANK4[48]), edge_meter@buf(BANK1[48]), 

    fetch@sch	PTR unsigned char  size(1) Largest target is 28
		 -> schedule(BANK3[28]), 

    edge_func	PTR FTN(unsigned char ,unsigned char ,unsigned char ,PTR unsigned char ,)void  size(2) Largest target is 1
		 -> edge_meter(), Absolute function(), 

    exec_remote_cmd@buf	PTR unsigned char  size(2) Largest target is 192
		 -> cmd_buf(BIGRAM[192]), 

    I2C1_MasterWriteTRBBuild@pdata	PTR unsigned char  size(1) Largest target is 50
		 -> i2c1_write_no_data@buf(BANK0[1]), i2c1_read@reg(BANK0[1]), exec_remote_cmd@send_buf(BANK1[50]), 

    I2C1_MasterWriteTRBBuild@ptrb.pbuffer	PTR unsigned char  size(2) Largest target is 50
		 -> i2c1_write_no_data@buf(BANK0[1]), i2c1_read@reg(BANK0[1]), sen@length(BANK0[1]), sen@type(BANK0[1]), 
		 -> read_buf(BANK3[16]), exec_remote_cmd@send_buf(BANK1[50]), exec_remote_cmd@data(BANK1[1]), 

    I2C1_MasterWriteTRBBuild@ptrb	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterWrite@trBlock(BANK3[5]), 

    I2C1_MasterReadTRBBuild@pdata	PTR unsigned char  size(2) Largest target is 16
		 -> sen@length(BANK0[1]), sen@type(BANK0[1]), read_buf(BANK3[16]), exec_remote_cmd@data(BANK1[1]), 

    I2C1_MasterReadTRBBuild@ptrb.pbuffer	PTR unsigned char  size(2) Largest target is 50
		 -> i2c1_write_no_data@buf(BANK0[1]), i2c1_read@reg(BANK0[1]), sen@length(BANK0[1]), sen@type(BANK0[1]), 
		 -> read_buf(BANK3[16]), exec_remote_cmd@send_buf(BANK1[50]), exec_remote_cmd@data(BANK1[1]), 

    I2C1_MasterReadTRBBuild@ptrb	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK3[5]), 

    i2c1_object.pTrTail.ptrb_list.pbuffer	PTR unsigned char  size(2) Largest target is 50
		 -> i2c1_write_no_data@buf(BANK0[1]), i2c1_read@reg(BANK0[1]), sen@length(BANK0[1]), sen@type(BANK0[1]), 
		 -> read_buf(BANK3[16]), exec_remote_cmd@send_buf(BANK1[50]), exec_remote_cmd@data(BANK1[1]), 

    i2c1_object.pTrTail.pTrFlag	PTR enum E2972 size(1) Largest target is 1
		 -> i2c1_write_no_data@status(BANK0[1]), i2c1_read@status(BANK0[1]), i2c1_write@status(BANK0[1]), 

    i2c1_object.pTrTail.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK3[5]), I2C1_MasterWrite@trBlock(BANK3[5]), 

    I2C1_MasterTRBInsert@ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK3[5]), I2C1_MasterWrite@trBlock(BANK3[5]), 

    I2C1_MasterTRBInsert@pflag	PTR enum E2972 size(1) Largest target is 1
		 -> i2c1_write_no_data@status(BANK0[1]), i2c1_read@status(BANK0[1]), i2c1_write@status(BANK0[1]), 

    I2C1_MasterRead@pflag	PTR enum E2972 size(1) Largest target is 1
		 -> i2c1_read@status(BANK0[1]), 

    I2C1_MasterRead@pdata	PTR unsigned char  size(2) Largest target is 16
		 -> sen@length(BANK0[1]), sen@type(BANK0[1]), read_buf(BANK3[16]), exec_remote_cmd@data(BANK1[1]), 

    F3084.pbuffer	PTR unsigned char  size(2) Largest target is 50
		 -> i2c1_write_no_data@buf(BANK0[1]), i2c1_read@reg(BANK0[1]), sen@length(BANK0[1]), sen@type(BANK0[1]), 
		 -> read_buf(BANK3[16]), exec_remote_cmd@send_buf(BANK1[50]), exec_remote_cmd@data(BANK1[1]), 

    I2C1_MasterWrite@pflag	PTR enum E2972 size(1) Largest target is 1
		 -> i2c1_write_no_data@status(BANK0[1]), i2c1_read@status(BANK0[1]), i2c1_write@status(BANK0[1]), 

    I2C1_MasterWrite@pdata	PTR unsigned char  size(1) Largest target is 50
		 -> i2c1_write_no_data@buf(BANK0[1]), i2c1_read@reg(BANK0[1]), exec_remote_cmd@send_buf(BANK1[50]), 

    F3079.pbuffer	PTR unsigned char  size(2) Largest target is 50
		 -> i2c1_write_no_data@buf(BANK0[1]), i2c1_read@reg(BANK0[1]), sen@length(BANK0[1]), sen@type(BANK0[1]), 
		 -> read_buf(BANK3[16]), exec_remote_cmd@send_buf(BANK1[50]), exec_remote_cmd@data(BANK1[1]), 

    I2C1_ISR@pi2c_buf_ptr	PTR unsigned char  size(2) Largest target is 8192
		 -> ?_sprintf(BANK0[2]), ?_printf(BANK0[2]), STR_49(CODE[4]), buf(BANK4[48]), 
		 -> ROM(CODE[8192]), i2c1_write_no_data@buf(BANK0[1]), i2c1_read@reg(BANK0[1]), STR_40(CODE[17]), 
		 -> edge_meter@buf(BANK1[48]), sen@length(BANK0[1]), sen@type(BANK0[1]), read_buf(BANK3[16]), 
		 -> exec_remote_cmd@send_buf(BANK1[50]), exec_remote_cmd@data(BANK1[1]), WHEEL_RADIUS(CODE[3]), I2C1_ISR@i2c_address(COMMON[2]), 
		 -> NULL(NULL[0]), 

    S19$pbuffer	PTR unsigned char  size(2) Largest target is 50
		 -> i2c1_write_no_data@buf(BANK0[1]), i2c1_read@reg(BANK0[1]), sen@length(BANK0[1]), sen@type(BANK0[1]), 
		 -> read_buf(BANK3[16]), exec_remote_cmd@send_buf(BANK1[50]), exec_remote_cmd@data(BANK1[1]), 

    p_i2c1_trb_current.pbuffer	PTR unsigned char  size(2) Largest target is 50
		 -> i2c1_write_no_data@buf(BANK0[1]), i2c1_read@reg(BANK0[1]), sen@length(BANK0[1]), sen@type(BANK0[1]), 
		 -> read_buf(BANK3[16]), exec_remote_cmd@send_buf(BANK1[50]), exec_remote_cmd@data(BANK1[1]), 

    p_i2c1_trb_current	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK3[5]), I2C1_MasterWrite@trBlock(BANK3[5]), NULL(NULL[0]), 

    i2c1_object.pTrHead.pTrFlag	PTR enum E2972 size(1) Largest target is 1
		 -> i2c1_write_no_data@status(BANK0[1]), i2c1_read@status(BANK0[1]), i2c1_write@status(BANK0[1]), 

    i2c1_object.pTrHead.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK3[5]), I2C1_MasterWrite@trBlock(BANK3[5]), 

    S31$pTrFlag	PTR enum E2972 size(1) Largest target is 1
		 -> i2c1_write_no_data@status(BANK0[1]), i2c1_read@status(BANK0[1]), i2c1_write@status(BANK0[1]), 

    p_i2c1_current.pTrFlag	PTR enum E2972 size(1) Largest target is 1
		 -> i2c1_write_no_data@status(BANK0[1]), i2c1_read@status(BANK0[1]), i2c1_write@status(BANK0[1]), 

    S31$ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK3[5]), I2C1_MasterWrite@trBlock(BANK3[5]), 

    p_i2c1_current.ptrb_list	PTR struct . size(1) Largest target is 5
		 -> I2C1_MasterRead@trBlock(BANK3[5]), I2C1_MasterWrite@trBlock(BANK3[5]), 

    p_i2c1_current	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK2[3]), NULL(NULL[0]), 

    S42$pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK2[3]), 

    i2c1_object.pTrHead	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK2[3]), 

    S42$pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK2[3]), 

    i2c1_object.pTrTail	PTR struct . size(1) Largest target is 5
		 -> i2c1_tr_queue(BANK2[3]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _INTERRUPT_InterruptManager->_I2C1_ISR
    _I2C1_ISR->_I2C1_Stop

Critical Paths under _main in BANK0

    _init->___awdiv
    _SYSTEM_Initialize->_EUSART_Initialize
    _SYSTEM_Initialize->_I2C1_Initialize
    _inv_handler->_fetch
    _fetch->_sen
    _sen->_edge_meter
    _edge_meter->_command_handler
    _sprintf->__doprnt
    ___lbtoft->___ftpack
    ___fttol->___ftmul
    ___ftmul->___lbtoft
    _PROTOCOL_Print_TLV->_printf
    _abs->___awmod
    _detected->___awdiv
    _exec_remote_cmd->_printf
    _i2c1_write->_I2C1_MasterWrite
    _PROTOCOL_Write_Device_Address->_DATAEE_WriteByte
    _PROTOCOL_SAV->_DATAEE_WriteByte
    _PROTOCOL_EXT->_command_handler
    _command_handler->_print_dev_map
    _put_cmd->_strcpy
    _strcpy->___wmul
    _print_dev_map->_printf
    _printf->__doprnt
    __doprnt->___lwmod
    _putch->_EUSART_Write
    ___lwmod->___lwdiv
    _check_plg->_scan_dev
    _scan_dev->_add_dev
    _scan_dev->_del_dev
    _i2c1_read->_I2C1_MasterRead
    _I2C1_MasterRead->_I2C1_MasterReadTRBBuild
    _del_dev->___awdiv
    _add_dev->___awdiv
    ___awdiv->_abs
    _i2c1_write_no_data->_I2C1_MasterWrite
    _I2C1_MasterWrite->_I2C1_MasterWriteTRBBuild
    _atoi->___wmul
    _PROTOCOL_Initialize->_DATAEE_ReadByte

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    _inv_handler->_fetch
    _sen->_edge_meter

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    _main->_PROTOCOL_Loop
    _PROTOCOL_Loop->_inv_handler

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK12

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  352946
                _PROTOCOL_Initialize
                      _PROTOCOL_Loop
     _PROTOCOL_Set_Extension_Handler
                  _SYSTEM_Initialize
                               _init
 ---------------------------------------------------------------------------------
 (1) _init                                                11    11      0    4035
                                             20 BANK0      9     9      0
                    _DATAEE_ReadByte
                            ___awdiv
                             ___wmul
 ---------------------------------------------------------------------------------
 (1) _SYSTEM_Initialize                                    0     0      0       0
                  _EUSART_Initialize
                    _I2C1_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (2) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _TMR0_Initialize                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C1_Initialize                                      1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _EUSART_Initialize                                    1     1      0       0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _PROTOCOL_Set_Extension_Handler                       2     0      2      86
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 (1) _PROTOCOL_Loop                                        4     4      0  348155
                                              1 BANK2      4     4      0
                   Absolute function *
                        _EUSART_Read
                       _PROTOCOL_EXT
       _PROTOCOL_Read_Device_Address
                       _PROTOCOL_SAV
                       _PROTOCOL_SET
                       _PROTOCOL_STA
                       _PROTOCOL_STP
      _PROTOCOL_Write_Device_Address
            _TMR0_HasOverflowOccured
                               _atoi
                    _command_handler *
                        _inv_handler *
                             _printf
                            _strncmp
 ---------------------------------------------------------------------------------
 (2) _inv_handler                                          3     3      0  234756
                                              0 BANK2      1     1      0
                   Absolute function *
                            ___lwmod
                          _check_plg
                         _edge_meter *
                    _exec_remote_cmd
                              _fetch
                           _scan_dev
 ---------------------------------------------------------------------------------
 (3) _fetch                                                7     7      0  112010
                                             77 BANK0      3     3      0
                                             76 BANK1      4     4      0
                           _detected
                 _i2c1_write_no_data
                             _printf
                                _sen
 ---------------------------------------------------------------------------------
 (4) _sen                                                 11    11      0   94879
                                             68 BANK0      9     9      0
                   Absolute function *
                 _PROTOCOL_Print_TLV
                         _edge_meter *
                          _i2c1_read
                 _i2c1_write_no_data
 ---------------------------------------------------------------------------------
 (5) _edge_meter                                          89    85      4   69319
                                             59 BANK0      9     5      4
                                              0 BANK1     76    76      0
                            ___awdiv
                            ___ftmul
                            ___fttol
                           ___lbtoft
                            ___lwdiv
                            ___lwmod
                             ___wmul
                                _abs
                    _command_handler
                            _sprintf
 ---------------------------------------------------------------------------------
 (6) _sprintf                                             20     6     14    7833
                                             33 BANK0     20     6     14
                            __doprnt
 ---------------------------------------------------------------------------------
 (6) ___lbtoft                                             8     5      3    2014
                                              8 BANK0      8     5      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (6) ___fttol                                             14    10      4     469
                                             32 BANK0     14    10      4
                            ___ftmul (ARG)
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (6) ___ftmul                                             16    10      6    2880
                                             16 BANK0     16    10      6
                           ___ftpack
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (7) ___ftpack                                             8     3      5    1992
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (5) _PROTOCOL_Print_TLV                                   9     6      3   17774
                                             44 BANK0      9     6      3
                            ___awdiv
                            ___awmod
                                _abs
                             _concat
                             _printf
 ---------------------------------------------------------------------------------
 (6) _concat                                               8     6      2     428
                                              0 BANK0      8     6      2
 ---------------------------------------------------------------------------------
 (6) _abs                                                  4     2      2     718
                                              7 BANK0      4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___awmod                                              7     3      4    1216
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (4) _detected                                             7     7      0    2742
                                             20 BANK0      7     7      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (3) _exec_remote_cmd                                     62    62      0   28528
                                             44 BANK0      5     5      0
                                              0 BANK1     57    57      0
                             ___wmul
                               _atoi
                          _i2c1_read
                         _i2c1_write
                 _i2c1_write_no_data
                             _printf
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _i2c1_write                                           8     4      4    1877
                                             14 BANK0      8     4      4
                   _I2C1_MasterWrite
 ---------------------------------------------------------------------------------
 (2) _TMR0_HasOverflowOccured                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PROTOCOL_Write_Device_Address                        2     2      0     368
                                              3 BANK0      2     2      0
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (2) _PROTOCOL_STP                                         0     0      0       0
                   Absolute function *
                       _stop_handler *
 ---------------------------------------------------------------------------------
 (2) _PROTOCOL_STA                                         0     0      0       0
                   Absolute function *
                      _start_handler *
 ---------------------------------------------------------------------------------
 (3) _start_handler                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PROTOCOL_SET                                         2     2      0      22
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _PROTOCOL_SAV                                         1     1      0     324
                                              3 BANK0      1     1      0
                   _DATAEE_WriteByte
 ---------------------------------------------------------------------------------
 (2) _PROTOCOL_Read_Device_Address                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PROTOCOL_EXT                                         1     1      0   47578
                                             59 BANK0      1     1      0
                   Absolute function *
                    _command_handler *
 ---------------------------------------------------------------------------------
 (6) _command_handler                                     11     9      2   47514
                                             48 BANK0     11     9      2
                   _DATAEE_WriteByte
                            ___awdiv
                               _atoi
                          _check_plg
                      _print_dev_map
                             _printf
                            _put_cmd
                            _strncmp
 ---------------------------------------------------------------------------------
 (2) _strncmp                                              8     2      6    4550
                                              0 BANK0      8     2      6
 ---------------------------------------------------------------------------------
 (7) _put_cmd                                              6     4      2    1385
                                             12 BANK0      6     4      2
                             ___wmul
                             _strcpy
 ---------------------------------------------------------------------------------
 (8) _strcpy                                               6     2      4     203
                                              6 BANK0      6     2      4
                             ___wmul (ARG)
 ---------------------------------------------------------------------------------
 (7) _print_dev_map                                        4     4      0   11221
                                             44 BANK0      4     4      0
                   _dev_map_iterator
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              11     5      6   11092
                                             33 BANK0     11     5      6
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            __doprnt
                                _abs (ARG)
                             _concat (ARG)
                   _dev_map_iterator (ARG)
 ---------------------------------------------------------------------------------
 (3) __doprnt                                             23    20      3    6823
                                             14 BANK0     19    16      3
                   Absolute function *
                            ___lwdiv
                            ___lwmod
                             ___wmul
                            _isdigit
                              _putch *
 ---------------------------------------------------------------------------------
 (4) _putch                                                1     0      1     410
                                              2 BANK0      1     0      1
                       _EUSART_Write
 ---------------------------------------------------------------------------------
 (5) _EUSART_Write                                         2     2      0      44
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              6     2      4    1439
                                              8 BANK0      6     2      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              8     4      4     802
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (8) _dev_map_iterator                                     8     8      0      24
                                              0 BANK0      8     8      0
 ---------------------------------------------------------------------------------
 (7) _check_plg                                            3     3      0   13098
                                             33 BANK0      3     3      0
                 _i2c1_write_no_data
                           _scan_dev
 ---------------------------------------------------------------------------------
 (3) _scan_dev                                             5     5      0   10362
                                             28 BANK0      5     5      0
                            _add_dev
                            _del_dev
                          _i2c1_read
 ---------------------------------------------------------------------------------
 (4) _i2c1_read                                           11     5      6    4457
                                             16 BANK0     11     5      6
                    _I2C1_MasterRead
                   _I2C1_MasterWrite
 ---------------------------------------------------------------------------------
 (5) _I2C1_MasterRead                                      8     2      6    1097
                                              8 BANK0      8     2      6
            _I2C1_MasterReadTRBBuild
               _I2C1_MasterTRBInsert
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterReadTRBBuild                              8     3      5     376
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (4) _del_dev                                              8     8      0    2874
                                             20 BANK0      8     8      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (4) _add_dev                                              8     8      0    2874
                                             20 BANK0      8     8      0
                            ___awdiv
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4    2628
                                             11 BANK0      9     5      4
                                _abs (ARG)
 ---------------------------------------------------------------------------------
 (5) _i2c1_write_no_data                                   7     4      3    2713
                                             14 BANK0      7     4      3
                   _I2C1_MasterWrite
 ---------------------------------------------------------------------------------
 (5) _I2C1_MasterWrite                                     7     3      4    1518
                                              7 BANK0      7     3      4
               _I2C1_MasterTRBInsert
           _I2C1_MasterWriteTRBBuild
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterWriteTRBBuild                             7     3      4     354
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (6) _I2C1_MasterTRBInsert                                 4     2      2     388
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (7) _atoi                                                 7     5      2    1794
                                              6 BANK0      7     5      2
                             ___wmul
                            _isdigit
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4    1114
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (7) _DATAEE_WriteByte                                     3     2      1     324
                                              0 BANK0      3     2      1
 ---------------------------------------------------------------------------------
 (2) _EUSART_Read                                          2     2      0      24
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (1) _PROTOCOL_Initialize                                 12     2     10     670
                                              1 BANK0     12     2     10
                   Absolute function *
                    _DATAEE_ReadByte
                       _stop_handler *
 ---------------------------------------------------------------------------------
 (3) _stop_handler                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _DATAEE_ReadByte                                      1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (4) Absolute function(Fake)                               4     0      4       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _INTERRUPT_InterruptManager                          1     1      0      22
                                              7 COMMON     1     1      0
                 _EUSART_Receive_ISR
                _EUSART_Transmit_ISR
               _I2C1_BusCollisionISR
                           _I2C1_ISR
 ---------------------------------------------------------------------------------
 (13) _I2C1_ISR                                            4     4      0      22
                                              3 COMMON     4     4      0
              _I2C1_FunctionComplete
                          _I2C1_Stop
 ---------------------------------------------------------------------------------
 (14) _I2C1_Stop                                           3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (14) _I2C1_FunctionComplete                               1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (13) _I2C1_BusCollisionISR                                0     0      0       0
 ---------------------------------------------------------------------------------
 (13) _EUSART_Transmit_ISR                                 1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (13) _EUSART_Receive_ISR                                  1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _PROTOCOL_Initialize
     Absolute function(Fake) *
     _DATAEE_ReadByte *
     _stop_handler *
   _PROTOCOL_Loop
     Absolute function(Fake) *
     _EUSART_Read *
     _PROTOCOL_EXT *
       Absolute function(Fake) *
       _command_handler *
         _DATAEE_WriteByte
         ___awdiv
           _abs (ARG)
             ___awmod (ARG)
         _atoi
           ___wmul
           _isdigit
         _check_plg
           _i2c1_write_no_data
             _I2C1_MasterWrite
               _I2C1_MasterTRBInsert
               _I2C1_MasterWriteTRBBuild
           _scan_dev
             _add_dev
               ___awdiv
                 _abs (ARG)
                   ___awmod (ARG)
             _del_dev
               ___awdiv
                 _abs (ARG)
                   ___awmod (ARG)
             _i2c1_read
               _I2C1_MasterRead
                 _I2C1_MasterReadTRBBuild
                 _I2C1_MasterTRBInsert
               _I2C1_MasterWrite
                 _I2C1_MasterTRBInsert
                 _I2C1_MasterWriteTRBBuild
         _print_dev_map
           _dev_map_iterator
           _printf
             ___awdiv (ARG)
               _abs (ARG)
                 ___awmod (ARG)
             ___awmod (ARG)
             __doprnt (ARG)
               Absolute function(Fake) *
               ___lwdiv *
               ___lwmod *
                 ___lwdiv (ARG)
               ___wmul *
               _isdigit *
               _putch *
                 _EUSART_Write
             _abs (ARG)
               ___awmod (ARG)
             _concat (ARG)
             _dev_map_iterator (ARG)
         _printf
           ___awdiv (ARG)
             _abs (ARG)
               ___awmod (ARG)
           ___awmod (ARG)
           __doprnt (ARG)
             Absolute function(Fake) *
             ___lwdiv *
             ___lwmod *
               ___lwdiv (ARG)
             ___wmul *
             _isdigit *
             _putch *
               _EUSART_Write
           _abs (ARG)
             ___awmod (ARG)
           _concat (ARG)
           _dev_map_iterator (ARG)
         _put_cmd
           ___wmul
           _strcpy
             ___wmul (ARG)
         _strncmp
     _PROTOCOL_Read_Device_Address *
     _PROTOCOL_SAV *
       _DATAEE_WriteByte
     _PROTOCOL_SET *
     _PROTOCOL_STA *
       Absolute function(Fake) *
       _start_handler *
     _PROTOCOL_STP *
       Absolute function(Fake) *
       _stop_handler *
     _PROTOCOL_Write_Device_Address *
       _DATAEE_WriteByte
     _TMR0_HasOverflowOccured *
     _atoi *
       ___wmul
       _isdigit
     _command_handler *
       _DATAEE_WriteByte
       ___awdiv
         _abs (ARG)
           ___awmod (ARG)
       _atoi
         ___wmul
         _isdigit
       _check_plg
         _i2c1_write_no_data
           _I2C1_MasterWrite
             _I2C1_MasterTRBInsert
             _I2C1_MasterWriteTRBBuild
         _scan_dev
           _add_dev
             ___awdiv
               _abs (ARG)
                 ___awmod (ARG)
           _del_dev
             ___awdiv
               _abs (ARG)
                 ___awmod (ARG)
           _i2c1_read
             _I2C1_MasterRead
               _I2C1_MasterReadTRBBuild
               _I2C1_MasterTRBInsert
             _I2C1_MasterWrite
               _I2C1_MasterTRBInsert
               _I2C1_MasterWriteTRBBuild
       _print_dev_map
         _dev_map_iterator
         _printf
           ___awdiv (ARG)
             _abs (ARG)
               ___awmod (ARG)
           ___awmod (ARG)
           __doprnt (ARG)
             Absolute function(Fake) *
             ___lwdiv *
             ___lwmod *
               ___lwdiv (ARG)
             ___wmul *
             _isdigit *
             _putch *
               _EUSART_Write
           _abs (ARG)
             ___awmod (ARG)
           _concat (ARG)
           _dev_map_iterator (ARG)
       _printf
         ___awdiv (ARG)
           _abs (ARG)
             ___awmod (ARG)
         ___awmod (ARG)
         __doprnt (ARG)
           Absolute function(Fake) *
           ___lwdiv *
           ___lwmod *
             ___lwdiv (ARG)
           ___wmul *
           _isdigit *
           _putch *
             _EUSART_Write
         _abs (ARG)
           ___awmod (ARG)
         _concat (ARG)
         _dev_map_iterator (ARG)
       _put_cmd
         ___wmul
         _strcpy
           ___wmul (ARG)
       _strncmp
     _inv_handler *
       Absolute function(Fake) *
       ___lwmod *
         ___lwdiv (ARG)
       _check_plg *
         _i2c1_write_no_data
           _I2C1_MasterWrite
             _I2C1_MasterTRBInsert
             _I2C1_MasterWriteTRBBuild
         _scan_dev
           _add_dev
             ___awdiv
               _abs (ARG)
                 ___awmod (ARG)
           _del_dev
             ___awdiv
               _abs (ARG)
                 ___awmod (ARG)
           _i2c1_read
             _I2C1_MasterRead
               _I2C1_MasterReadTRBBuild
               _I2C1_MasterTRBInsert
             _I2C1_MasterWrite
               _I2C1_MasterTRBInsert
               _I2C1_MasterWriteTRBBuild
       _edge_meter *
         ___awdiv
           _abs (ARG)
             ___awmod (ARG)
         ___ftmul
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___fttol
           ___ftmul (ARG)
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___lbtoft
           ___ftpack
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
         ___wmul
         _abs
           ___awmod (ARG)
         _command_handler
           _DATAEE_WriteByte
           ___awdiv
             _abs (ARG)
               ___awmod (ARG)
           _atoi
             ___wmul
             _isdigit
           _check_plg
             _i2c1_write_no_data
               _I2C1_MasterWrite
                 _I2C1_MasterTRBInsert
                 _I2C1_MasterWriteTRBBuild
             _scan_dev
               _add_dev
                 ___awdiv
                   _abs (ARG)
                     ___awmod (ARG)
               _del_dev
                 ___awdiv
                   _abs (ARG)
                     ___awmod (ARG)
               _i2c1_read
                 _I2C1_MasterRead
                   _I2C1_MasterReadTRBBuild
                   _I2C1_MasterTRBInsert
                 _I2C1_MasterWrite
                   _I2C1_MasterTRBInsert
                   _I2C1_MasterWriteTRBBuild
           _print_dev_map
             _dev_map_iterator
             _printf
               ___awdiv (ARG)
                 _abs (ARG)
                   ___awmod (ARG)
               ___awmod (ARG)
               __doprnt (ARG)
                 Absolute function(Fake) *
                 ___lwdiv *
                 ___lwmod *
                   ___lwdiv (ARG)
                 ___wmul *
                 _isdigit *
                 _putch *
                   _EUSART_Write
               _abs (ARG)
                 ___awmod (ARG)
               _concat (ARG)
               _dev_map_iterator (ARG)
           _printf
             ___awdiv (ARG)
               _abs (ARG)
                 ___awmod (ARG)
             ___awmod (ARG)
             __doprnt (ARG)
               Absolute function(Fake) *
               ___lwdiv *
               ___lwmod *
                 ___lwdiv (ARG)
               ___wmul *
               _isdigit *
               _putch *
                 _EUSART_Write
             _abs (ARG)
               ___awmod (ARG)
             _concat (ARG)
             _dev_map_iterator (ARG)
           _put_cmd
             ___wmul
             _strcpy
               ___wmul (ARG)
           _strncmp
         _sprintf
           __doprnt
             Absolute function(Fake) *
             ___lwdiv *
             ___lwmod *
               ___lwdiv (ARG)
             ___wmul *
             _isdigit *
             _putch *
               _EUSART_Write
       _exec_remote_cmd *
         ___wmul
         _atoi
           ___wmul
           _isdigit
         _i2c1_read
           _I2C1_MasterRead
             _I2C1_MasterReadTRBBuild
             _I2C1_MasterTRBInsert
           _I2C1_MasterWrite
             _I2C1_MasterTRBInsert
             _I2C1_MasterWriteTRBBuild
         _i2c1_write
           _I2C1_MasterWrite
             _I2C1_MasterTRBInsert
             _I2C1_MasterWriteTRBBuild
         _i2c1_write_no_data
           _I2C1_MasterWrite
             _I2C1_MasterTRBInsert
             _I2C1_MasterWriteTRBBuild
         _printf
           ___awdiv (ARG)
             _abs (ARG)
               ___awmod (ARG)
           ___awmod (ARG)
           __doprnt (ARG)
             Absolute function(Fake) *
             ___lwdiv *
             ___lwmod *
               ___lwdiv (ARG)
             ___wmul *
             _isdigit *
             _putch *
               _EUSART_Write
           _abs (ARG)
             ___awmod (ARG)
           _concat (ARG)
           _dev_map_iterator (ARG)
         _strncmp
       _fetch *
         _detected
           ___awdiv
             _abs (ARG)
               ___awmod (ARG)
         _i2c1_write_no_data
           _I2C1_MasterWrite
             _I2C1_MasterTRBInsert
             _I2C1_MasterWriteTRBBuild
         _printf
           ___awdiv (ARG)
             _abs (ARG)
               ___awmod (ARG)
           ___awmod (ARG)
           __doprnt (ARG)
             Absolute function(Fake) *
             ___lwdiv *
             ___lwmod *
               ___lwdiv (ARG)
             ___wmul *
             _isdigit *
             _putch *
               _EUSART_Write
           _abs (ARG)
             ___awmod (ARG)
           _concat (ARG)
           _dev_map_iterator (ARG)
         _sen
           Absolute function(Fake) *
           _PROTOCOL_Print_TLV *
             ___awdiv
               _abs (ARG)
                 ___awmod (ARG)
             ___awmod
             _abs
               ___awmod (ARG)
             _concat
             _printf
               ___awdiv (ARG)
                 _abs (ARG)
                   ___awmod (ARG)
               ___awmod (ARG)
               __doprnt (ARG)
                 Absolute function(Fake) *
                 ___lwdiv *
                 ___lwmod *
                   ___lwdiv (ARG)
                 ___wmul *
                 _isdigit *
                 _putch *
                   _EUSART_Write
               _abs (ARG)
                 ___awmod (ARG)
               _concat (ARG)
               _dev_map_iterator (ARG)
           _edge_meter *
             ___awdiv
               _abs (ARG)
                 ___awmod (ARG)
             ___ftmul
               ___ftpack
               ___lbtoft (ARG)
                 ___ftpack
             ___fttol
               ___ftmul (ARG)
                 ___ftpack
                 ___lbtoft (ARG)
                   ___ftpack
               ___lbtoft (ARG)
                 ___ftpack
             ___lbtoft
               ___ftpack
             ___lwdiv
             ___lwmod
               ___lwdiv (ARG)
             ___wmul
             _abs
               ___awmod (ARG)
             _command_handler
               _DATAEE_WriteByte
               ___awdiv
                 _abs (ARG)
                   ___awmod (ARG)
               _atoi
                 ___wmul
                 _isdigit
               _check_plg
                 _i2c1_write_no_data
                   _I2C1_MasterWrite
                     _I2C1_MasterTRBInsert
                     _I2C1_MasterWriteTRBBuild
                 _scan_dev
                   _add_dev
                     ___awdiv
                       _abs (ARG)
                         ___awmod (ARG)
                   _del_dev
                     ___awdiv
                       _abs (ARG)
                         ___awmod (ARG)
                   _i2c1_read
                     _I2C1_MasterRead
                       _I2C1_MasterReadTRBBuild
                       _I2C1_MasterTRBInsert
                     _I2C1_MasterWrite
                       _I2C1_MasterTRBInsert
                       _I2C1_MasterWriteTRBBuild
               _print_dev_map
                 _dev_map_iterator
                 _printf
                   ___awdiv (ARG)
                     _abs (ARG)
                       ___awmod (ARG)
                   ___awmod (ARG)
                   __doprnt (ARG)
                     Absolute function(Fake) *
                     ___lwdiv *
                     ___lwmod *
                       ___lwdiv (ARG)
                     ___wmul *
                     _isdigit *
                     _putch *
                       _EUSART_Write
                   _abs (ARG)
                     ___awmod (ARG)
                   _concat (ARG)
                   _dev_map_iterator (ARG)
               _printf
                 ___awdiv (ARG)
                   _abs (ARG)
                     ___awmod (ARG)
                 ___awmod (ARG)
                 __doprnt (ARG)
                   Absolute function(Fake) *
                   ___lwdiv *
                   ___lwmod *
                     ___lwdiv (ARG)
                   ___wmul *
                   _isdigit *
                   _putch *
                     _EUSART_Write
                 _abs (ARG)
                   ___awmod (ARG)
                 _concat (ARG)
                 _dev_map_iterator (ARG)
               _put_cmd
                 ___wmul
                 _strcpy
                   ___wmul (ARG)
               _strncmp
             _sprintf
               __doprnt
                 Absolute function(Fake) *
                 ___lwdiv *
                 ___lwmod *
                   ___lwdiv (ARG)
                 ___wmul *
                 _isdigit *
                 _putch *
                   _EUSART_Write
           _i2c1_read *
             _I2C1_MasterRead
               _I2C1_MasterReadTRBBuild
               _I2C1_MasterTRBInsert
             _I2C1_MasterWrite
               _I2C1_MasterTRBInsert
               _I2C1_MasterWriteTRBBuild
           _i2c1_write_no_data *
             _I2C1_MasterWrite
               _I2C1_MasterTRBInsert
               _I2C1_MasterWriteTRBBuild
       _scan_dev *
         _add_dev
           ___awdiv
             _abs (ARG)
               ___awmod (ARG)
         _del_dev
           ___awdiv
             _abs (ARG)
               ___awmod (ARG)
         _i2c1_read
           _I2C1_MasterRead
             _I2C1_MasterReadTRBBuild
             _I2C1_MasterTRBInsert
           _I2C1_MasterWrite
             _I2C1_MasterTRBInsert
             _I2C1_MasterWriteTRBBuild
     _printf *
       ___awdiv (ARG)
         _abs (ARG)
           ___awmod (ARG)
       ___awmod (ARG)
       __doprnt (ARG)
         Absolute function(Fake) *
         ___lwdiv *
         ___lwmod *
           ___lwdiv (ARG)
         ___wmul *
         _isdigit *
         _putch *
           _EUSART_Write
       _abs (ARG)
         ___awmod (ARG)
       _concat (ARG)
       _dev_map_iterator (ARG)
     _strncmp *
   _PROTOCOL_Set_Extension_Handler
   _SYSTEM_Initialize
     _EUSART_Initialize
     _I2C1_Initialize
     _OSCILLATOR_Initialize
     _PIN_MANAGER_Initialize
     _TMR0_Initialize
     _WDT_Initialize
   _init
     _DATAEE_ReadByte
     ___awdiv
       _abs (ARG)
         ___awmod (ARG)
     ___wmul

 _INTERRUPT_InterruptManager (ROOT)
   _EUSART_Receive_ISR
   _EUSART_Transmit_ISR
   _I2C1_BusCollisionISR
   _I2C1_ISR
     _I2C1_FunctionComplete
     _I2C1_Stop

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             3F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      8       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BANK1               50     50      50       7      100.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BITBANK2            50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BANK2               50      5      4F       9       98.8%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BITBANK3            50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BANK3               50      0      43      11       83.8%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
BITBANK4            50      0       0      12        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BANK4               50      0      40      13       80.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITBANK5            50      0       0      14        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BANK5               50      0      40      15       80.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITBANK6            50      0       0      16        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BANK6               50      0      40      17       80.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITBANK7            50      0       0      18        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BANK7               50      0       0      19        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
ABS                  0      0     200      20        0.0%
BITBANK8            50      0       0      21        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BANK8               50      0       0      22        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITBANK9            50      0       0      23        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BANK9               50      0       0      24        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITBANK10           50      0       0      25        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BANK10              10      0       0      26        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITBANK11           50      0       0      27        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BANK11               0      0       0      28        0.0%
BITBANK12           30      0       0      29        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BANK12               0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
DATA                 0      0     200      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Thu Jul 13 20:52:05 2017

                                              _i 0078                                                _j 0140  
                                              pc 0002                  __end_of_TMR0_HasOverflowOccured 1A14  
                                    __CFG_CP$OFF 0000                                     ___awdiv@sign 0031  
                            ___wmul@multiplicand 0022                                  _timer0ReloadVal 0154  
                                    __CFG_LVP$ON 0000                                              l244 1C95  
                                            l355 0804                                              l188 1C5A  
                                            l723 024F                                              l716 01D7  
                                            l653 12E0                                              l645 1CFA  
                                            l666 1D4F                                              l595 0627  
                                            l684 00DE                                              l696 01F7  
                                            l874 0628                                     __CFG_CPD$OFF 0000  
                                            _abs 1A8C                                              _buf 0220  
                                            _cnt 0149                                              _sen 172E  
         __end_of_PROTOCOL_Set_Extension_Handler 1A34          __size_of_PROTOCOL_Set_Extension_Handler 0009  
                 _PROTOCOL_Set_Extension_Handler 1A2B                                     ___awmod@sign 0026  
                                   __CFG_BORV$LO 0000                                              wreg 0009  
                                   __CFG_IESO$ON 0000                      __size_of_i2c1_write_no_data 002B  
                               detected@dev_addr 003A                            __end_of_CIRCUMFERENCE 100E  
                               exec_remote_cmd@i 00D4                                 exec_remote_cmd@j 00D3  
                                   ?_EUSART_Read 0070                         i2c1_write_no_data@status 0034  
                               __end_of_I2C1_ISR 0990                                 ?_command_handler 0050  
                                           ?_abs 0027                                             l1144 1B94  
                                           l1331 1432                                             l1332 143A  
                                           l1324 141F                                             l1415 15A9  
                                           l4021 07BE                                             l4101 13F5  
                                           l4031 1451                                             l4023 07FD  
                                           l4015 07DC                                             l4033 1460  
                                           l4105 13FC                                             l4051 1484  
                                           l4043 1478                                             l4019 07F4  
                                           l4115 1424                                             l4107 1406  
                                           l4053 14AD                                             l4029 145A  
                                           l4117 142C                                             l4109 140B  
                                           l3511 1326                                             l4311 164F  
                                   _tmr_overflow 0143                                             l4049 1480  
                                           l3513 132C                                             l4241 1E46  
                                           l4059 14BD                                             l3507 131F  
                                           l3611 1FEA                                             l3603 1FCC  
                                           l3523 1C89                                             l4307 1647  
                                           l6011 06C1                                             l3517 1334  
                                           l3605 1FD8                                             l5301 0128  
                                           l4253 1E53                                             l4245 1E4D  
                                           l3543 1D21                                             l3615 1FF3  
                                           l5311 013F                                             l4255 1E5F  
                                           l4263 1E74                                             l4327 1555  
                                           l6015 06DA                                             l6007 069C  
                                           l5063 14DE                                             l3561 1A8A  
                                           l3641 1E2D                                             l3633 1E0F  
                                           l3537 1CAB                                             l5401 02B3  
                                           l5313 014D                                             l4353 15A0  
                                           l4345 1585                                             l6033 0762  
                                           l6025 0718                                             l5057 14CC  
                                           l3619 1FFB                                             l3635 1E1B  
                                           l5323 017A                                             l5307 013D  
                                           l4531 1CF5                                             l4267 1E7C  
                                           l4259 1E6B                                             l4283 15F0  
                                           l4355 15AC                                             l4347 1593  
                                           l6019 06F3                                             l5075 1505  
                                           l3549 1CCF                                             l3645 1E36  
                                           l5413 02E3                                             l5405 02C5  
                                           l5341 01C3                                             l5317 015A  
                                           l4277 15DA                                             l6045 07B9  
                                           l6029 073A                                             l5069 14E3  
                                           l3567 1B8E                                             l3663 1DC9  
                                           l5407 02CB                                             l5343 01CE  
                                           l5335 01AA                                             l5327 015C  
                                           l5511 0BDA                                             l5503 0BAA  
                                           l4535 1CFC                                             l4295 162B  
                                           l4359 15BA                                             l6039 0789  
                                           l3593 1FC4                                             l3657 1DB1  
                                           l5441 032D                                             l5425 0316  
                                           l5417 02F5                                             l5409 02CF  
                                           l5361 021E                                             l5329 018D  
                                           l5281 00DA                                             l4529 1CEB  
                                           l3931 1D40                                             l3587 1FB9  
                                           l3659 1DBD                                             l3667 1DD2  
                                           l5419 02FE                                             l5443 009C  
                                           l5531 0C6D                                             l5507 0BC2  
                                           l5611 0E04                                             l4299 1633  
                                           l3933 1D4A                                             l3693 12DB  
                                           l3677 12A7                                             l5437 0371  
                                           l5429 0328                                             l5381 026B  
                                           l5373 0243                                             l5445 0384  
                                           l5293 00F9                                             l5349 01D9  
                                           l5277 00C7                                             l5541 0C8F  
                                           l4549 1E04                                             l5613 0E17  
                                           l3695 12E2                                             l3687 12CC  
                                           l3679 12B1                                             l3951 13A3  
                                           l5391 0288                                             l5383 026E  
                                           l5367 0224                                             l5359 0212  
                                           l5287 00E3                                             l5551 0CE6  
                                           l5519 0C0C                                             l5623 0E26  
                                           l3937 1D51                                             l3689 12D6  
                                           l3945 1398                                             l3961 13E9  
                                           l5289 00EC                                             l5473 1E95  
                                           l5545 0CAE                                             l5553 0CF6  
                                           l5529 0C66                                             l5801 0A48  
                                           l5641 0ED7                                             l5625 0E54  
                                           l5609 0DE5                                             l3955 13AD  
                                           l5395 029A                                             l5475 1EB0  
                                           l5811 0A83                                             l5627 0E77  
                                           l5731 058A                                             l4749 1C20  
                                           l5477 1EC1                                             l5821 0B14  
                                           l5661 0F50                                             l5653 0F14  
                                           l5637 0E86                                             l3959 13E2  
                                           l5575 0D71                                             l5815 0AD6  
                                           l5671 0FDA                                             l5655 0F19  
                                           l5639 0EB4                                             l5735 061B  
                                           l5911 1728                                             l5903 1708  
                                           l3977 0834                                             l5577 0D79  
                                           l5569 0D3D                                             l5825 0B1C  
                                           l5809 0A7E                                             l5673 0FE2  
                                           l5585 0D99                                             l5729 057C  
                                           l3979 0839                                             l3987 1B23  
                                           l5923 1A6C                                             l5667 0F7A  
                                           l5659 0EE6                                             l5595 0DA4  
                                           l5755 178E                                             l5917 1A79  
                                           l5669 0FAA                                             l5597 0DC5  
                                           l5677 0FEA                                             l5773 17FD  
                                           l5839 0B7B                                             l5791 09F0  
                                           l5599 0DDA                                             l5945 1269  
                                           l5793 09F5                                             l5689 03D2  
                                           l5865 138B                                             l5875 1682  
                                           ?_sen 0070                                             l5797 0A19  
                                           l5893 16DB                                             l5879 169B  
                                           l5975 064D                                             l5889 16C2  
                                           l5977 064E                                             l5987 065C  
                                           STR_1 11F8                                             STR_2 1165  
                                           STR_3 121C                                             STR_4 1214  
                                           STR_5 11DC                                             STR_6 1200  
                                           STR_7 111E                                             STR_8 1112  
                                           STR_9 1210                                             _LATA 010C  
                                           _LATB 010D                                             _LATC 010E  
                                           u3105 1B9A                                             u3305 1DB4  
                                           u4105 1401                                             u3155 1FCF  
                                           u3235 1E12                                             u3325 1DC3  
                                           u4125 141A                                             u3414 1F94  
                                           u3095 1B95                                             u3175 1FD9  
                                           u3415 1F93                                             u3255 1E1C  
                                           u3335 1DCA                                             u3185 1FE3  
                                           u3265 1E26                                             u4145 1427  
                                           u3195 1FEB                                             u3275 1E2E  
                                           u3454 1F47                                             u3455 1F46  
                                           u4185 1441                                             u6035 025E  
                                           u4605 1650                                             u4455 1E56  
                                           u4615 1656                                             u4535 15FC  
                                           u4545 160C                                             u4705 15A1  
                                           u4475 1E65                                             u7107 1778  
                                           i1l60 0858                                             u4485 1E6C  
                                           u4565 1634                                             u4645 155C  
                                           u7117 17A8                                             u5525 1527  
                                           u3854 13C0                                             i1l71 08B1  
                                           u7207 1D46                                             u3855 13BE  
                                           u6335 0CAA                                             u4575 163A  
                                           u7127 17CA                                             i1l72 08BD  
                                           i1l65 0886                                             u6345 0CC5  
                                           u7137 1CD7                                             i1l90 0949  
                                           i1l82 0906                                             i1l66 088E  
                                           u3875 13D1                                             u7147 1CF1  
                                           u6515 0F75                                             u4675 1586  
                                           u7157 1295                                             i1l94 0970  
                                           i1l86 0926                                             u7167 12AD  
                                           u6295 0C55                                             u7087 1743  
                                           i1l89 093B                                             u7177 12B5  
                                           u6385 0D29                                             u7097 1759  
                                           u4874 1DFC                                             u7187 12D2  
                                           u5915 0153                                             u4875 1DFB  
                                           u7197 1D2E                                             u6485 0F0F  
                                           u5995 0239                                             _PLLR 04D6  
                                           _TMR0 0015                                             _WPUA 020C  
                                           _WPUB 020D                                             _WPUC 020E  
                __end_of_I2C1_MasterReadTRBBuild 1DAA                                     __CFG_WRT$OFF 0000  
                                  __CFG_FCMEN$ON 0000                                             abs@a 0027  
                                           _data 013F                                             _devs 0150  
                                           _atoi 1451                                             _main 1D53  
                                   ___ftpack@arg 0020                                             _init 14C2  
                                   ___ftpack@exp 0023                            exec_remote_cmd@status 00D5  
                                           fsr0h 0005                                             fsr1h 0007  
                                           indf0 0000                                             fsr0l 0004  
                                           indf1 0001                                             fsr1l 0006  
                         ??_I2C1_MasterTRBInsert 0022                                             btemp 007E  
                                  __CFG_BOREN$ON 0000                                             start 003C  
                 i2c1_write_no_data@write_status 0032                          command_handler@dev_addr 0059  
                                  __CFG_MCLRE$ON 0000                                     ___ftmul@cntr 003E  
                                   ___ftmul@sign 003F                   I2C1_MasterWriteTRBBuild@length 0021  
                          __size_of_stop_handler 0003                                     ___fttol@exp1 004D  
                                          ??_abs 0029                        __size_of_DATAEE_WriteByte 0023  
                                   ___fttol@lval 0049                                            ??_sen 0064  
                        __end_of_TMR0_Initialize 1A49                                       _i2c1_state 015E  
                                  __CFG_PLLEN$ON 0000                                       _i2c1_write 1CD6  
                                  ?_EUSART_Write 0070                   __size_of_OSCILLATOR_Initialize 0007  
                      I2C1_MasterTRBInsert@count 0023                    __end_of_OSCILLATOR_Initialize 0807  
                      I2C1_MasterTRBInsert@pflag 0021                              PROTOCOL_Print_TLV@v 0053  
                                          ?_atoi 0026                                            ?_main 0070  
                                          ?_init 0070                                  __end_of___awdiv 2000  
                              __end_of_I2C1_Stop 1BFF                                            STR_10 120C  
                                          STR_11 116F                                            STR_20 10E2  
                                          STR_12 1086                                            STR_13 11A8  
                                          STR_21 109F                                            STR_14 11D8  
                                          STR_22 11BA                                            STR_30 1052  
                                          STR_15 112F                                            STR_31 11E8  
                                          STR_23 1011                                            STR_24 11E0  
                                          STR_32 11A1                                            STR_40 10F3  
                                          STR_16 10B6                                            STR_33 1218  
                                          STR_25 11FC                                            STR_41 119A  
                                          STR_17 10CC                                    __CFG_WDTE$OFF 0000  
                                          STR_34 11D8                                            STR_50 1210  
                                          STR_26 11F4                                            STR_42 11B5  
                                          STR_18 118B                                            STR_35 112F  
                                          STR_43 11F8                                            STR_51 120C  
                                          STR_27 1208                                            STR_19 11BF  
                                          STR_52 116F                                            STR_60 1183  
                                          STR_36 11E4                                            STR_44 113D  
                                          STR_28 106C                                  __end_of___awmod 1E81  
                                          STR_61 11D8                                            STR_45 1214  
                                          STR_37 11F0                                            STR_29 11EC  
                                          STR_53 11D0                                            STR_62 112F  
                                          STR_70 1152                                            STR_46 11DC  
                                          STR_38 1204                                            STR_54 11CC  
                                          STR_47 1200                                            STR_63 115B  
                                          STR_71 1151                                            STR_55 1129  
                                          STR_39 1034                                            STR_72 1134  
                                          STR_64 11C8                                            STR_56 11AF  
                                          STR_48 1147                                            STR_65 11C4  
                                          STR_49 11D4                                            STR_57 1182  
                                          STR_73 1133                                            STR_66 115C  
                                          STR_58 11C8                                            STR_74 1179  
                                          STR_67 11D8                                            STR_59 11C4  
                                          STR_75 1104                                            STR_68 112F  
                                          STR_69 1193                                  __end_of___ftmul 1677  
                                ___awdiv@divisor 002B                                  __end_of___fttol 15C3  
                                __end_of_add_dev 1FAE                                  __end_of___lwdiv 1E3B  
                                          i1l101 1AB9                                            i1l321 0015  
                                          i1l323 0021                                            i1l325 002D  
                                          i1l256 1BDE                                            i1l329 0037  
                                __end_of___lwmod 1DD7                                  ___awdiv@counter 0030  
                                          _MAX_Y 100A                                            _RCREG 0199  
                                          _RCSTA 019D                                  __end_of__doprnt 0388  
                                          _TRISA 008C                                            _TRISB 008D  
                                          _TRISC 008E                                            _TXREG 019A  
                                __end_of_del_dev 1F60                                            _TXSTA 019E  
                                  _start_handler 1A0C                     __end_of_I2C1_BusCollisionISR 0004  
                   __size_of_PROTOCOL_Initialize 0053                                ??_I2C1_MasterRead 002E  
                              ??_I2C1_Initialize 0020                                  _DATAEE_ReadByte 1A55  
                                          _fetch 133B                  ??_PROTOCOL_Write_Device_Address 0023  
                                __end_of_dpowers 100A                                   _WDT_Initialize 1A14  
                 PROTOCOL_Initialize@inv_handler 0028                                  __end_of_isdigit 1A8C  
                                   ?_inv_handler 0070                                    ___ftpack@sign 0024  
                                          _value 0148                                            atoi@a 002B  
                                          atoi@s 0026                                            _putch 1A18  
                                          init@i 003C                                            init@y 003B  
                                 i2c1_write@pbuf 0030                                            pclath 000A  
                                ??_print_dev_map 004C                                  __end_of_put_cmd 1F13  
                                          status 0003                                            wtemp0 007E  
                                __end_of_sprintf 123C                                     _stop_handler 1A06  
                                __end_of_strncmp 0800                  I2C1_MasterWriteTRBBuild@address 0022  
                             exec_remote_cmd@buf 00D7                               exec_remote_cmd@idx 00D2  
                                __initialization 003E                            I2C1_MasterWrite@pdata 002D  
                          I2C1_MasterWrite@pflag 002A                                     __end_of_atoi 14C2  
                                   __end_of_main 1D7E                                     __end_of_init 153C  
                                 ??_EUSART_Write 0020                                  _edge_meter$1920 00D3  
                                _edge_meter$1921 00E8                                  _edge_meter$1922 00EA  
                                _edge_meter$1923 00D6                                  _edge_meter$1924 00D8  
                                _edge_meter$1925 00DA                                  _edge_meter$1926 00DC  
                    ?_INTERRUPT_InterruptManager 0070                 PROTOCOL_Initialize@start_handler 0023  
                                    _i2c1_object 0120                                           ??_atoi 0028  
                                         ??_main 0070                                    ___fttol@sign1 0048  
                                         ??_init 0034                               __size_of_i2c1_read 0055  
                                 ?_start_handler 0070                                   scan_dev@status 003F  
                         __end_of_WDT_Initialize 1A18                                           ?_fetch 0070  
                                         i1S6081 1800                                           _EEADRH 0192  
                                         _EEADRL 0191                                           _EEDATH 0194  
                                         _EEDATL 0193                                           _EECON2 0196  
                               ___awdiv@dividend 002D                                           _ANSELA 018C  
                                         ?_putch 0022                                           _ANSELB 018D  
                                         _ANSELC 018E                                 __end_of___ftpack 1451  
                               __end_of___lbtoft 1B54                               _PROTOCOL_Loop_Func 0131  
                                         i1l5011 097B                                           i1l5007 0974  
                                         i1l5009 0977                                           i1l5017 0984  
                                         i1l5039 1B74                                           i1l4713 1BFD  
                                         i1l4907 0879                                           i1l4925 08AB  
                                         i1l4919 089A                                           i1l4971 0914  
                                         i1l4963 0900                                           i1l4939 08DA  
                                         i1l4957 08F5                                           i1l4991 0950  
                                         i1l4995 0957                                           i1l4979 092E  
                                         _OSCCON 0099                 __size_of_TMR0_HasOverflowOccured 0004  
                                         _TMR0IF 005A                                           _SPBRGH 019C  
                                         _SPBRGL 019B                                           _WDTCON 0097  
                 PROTOCOL_Initialize@set_handler 0027                                ?_I2C1_MasterWrite 0027  
                                 __CFG_PWRTE$OFF 0000                                 __end_of_detected 1E06  
                             ??_I2C1_MasterWrite 002B                          exec_remote_cmd@send_buf 00A0  
                             _PROTOCOL_Print_TLV 0D85                        PROTOCOL_Initialize@scaler 002A  
                                 _p_i2c1_current 015B                                           ___wmul 1B8B  
                                      ??___awdiv 002F                                   __CFG_STVREN$ON 0000  
                                      ??___awmod 0024                                        ??___ftmul 0036  
                                      ??___fttol 0044                                        ??_add_dev 0034  
                                      ??___lwdiv 0024                                        ??___lwmod 002C  
                                         _concat 1ABC                                   add_dev@old_map 0038  
                                 add_dev@new_map 0039                                     _type_no_data 0169  
                            _EUSART_Transmit_ISR 1BC3                       ??_I2C1_MasterWriteTRBBuild 0024  
                                      ??__doprnt 0031                                 ?_TMR0_Initialize 0070  
                                    ?_i2c1_write 002E                                           _locked 0147  
                                      ?_I2C1_ISR 0070                                        ??_del_dev 0034  
                               ___awdiv@quotient 0032                                  check_plg@status 0043  
                                ___awmod@divisor 0020                              ?_PROTOCOL_Print_TLV 004C  
                               __end_of_scan_dev 083F                                     __doprnt@flag 003C  
                                ___awmod@counter 0025                                           _printf 1B08  
                                   __doprnt@prec 0035                          __end_of_DATAEE_ReadByte 1A62  
                                         _strcpy 1B1E                 __size_of_I2C1_MasterReadTRBBuild 002C  
                          ___ftmul@f3_as_product 003B                                        ??_isdigit 0020  
                       __end_of_dev_map_iterator 13EC                                  ?_WDT_Initialize 0070  
                                    sen@dev_addr 006C                                        ??_put_cmd 002E  
                                 print_dev_map@i 004E                                        ??_sprintf 004F  
                  I2C1_MasterWriteTRBBuild@pdata 0020                                        ??_strncmp 0026  
                      PROTOCOL_Send_uint8_t@pbuf 0163                             ?_EUSART_Transmit_ISR 0070  
                           ??_PROTOCOL_Print_TLV 004F                             __size_of_EUSART_Read 0023  
                              _SYSTEM_Initialize 1ACE                          __end_of__initialization 0096  
PROTOCOL_Set_Extension_Handler@extension_handler 0020                               ?_SYSTEM_Initialize 0070  
                              __end_of_i2c1_read 12E4                              exec_remote_cmd@data 00D6  
                                  __end_of_MAX_Y 100B                                   _i2c1_trb_count 015D  
                                     ___lbtoft@c 002F                                       ___ftmul@f1 0030  
                                     ___ftmul@f2 0033                            _I2C1_FunctionComplete 1AAB  
                           _I2C1_BusCollisionISR 0003                                       ___fttol@f1 0040  
                                 __pcstackCOMMON 0070                           I2C1_MasterWrite@length 0027  
                                   __pidataBANK2 1A1D                              ??_SYSTEM_Initialize 0021  
                                  __end_of_fetch 1392                                 _DATAEE_WriteByte 1C41  
                             __size_of_check_plg 0015                                    __end_of_putch 1A1D  
                                     ??_I2C1_ISR 0073                               edge_meter@dev_addr 005B  
                             command_handler@buf 0050                                  ??_start_handler 0020  
                             command_handler@pos 0079                            __end_of_PROTOCOL_Loop 07BE  
                 I2C1_MasterReadTRBBuild@address 0023                                   _OPTION_REGbits 0095  
                     i2c1_write_no_data@dev_addr 002E                                     init@dev_addr 003A  
                                     __doprnt@ap 0030                                       __doprnt@cp 003A  
                                     __doprnt@pb 0040                                          ??_fetch 006D  
                        PROTOCOL_Send_float@pbuf 01DC                        __end_of_SYSTEM_Initialize 1AE0  
                          ??_EUSART_Transmit_ISR 0070                             i2c1_read@read_status 0038  
                                        ??_putch 0023                                       __pbssBANK2 0120  
                                     __pbssBANK3 01A0                                       __pbssBANK4 0220  
                                     __pbssBANK5 02A0                                       __pbssBANK6 0320  
                           __end_of_EUSART_Write 1CAE                       i2c1_write_no_data@reg_addr 0030  
                                     _edge_meter 0388                             __size_of_inv_handler 00B7  
                            __size_of_i2c1_write 0028                                 command_handler@i 005A  
               ??_PROTOCOL_Set_Extension_Handler 0022                  ?_PROTOCOL_Set_Extension_Handler 0020  
                       __size_of_exec_remote_cmd 01F2                      __size_of_EUSART_Receive_ISR 001C  
                            _PROTOCOL_Initialize 123C                            ?_I2C1_BusCollisionISR 0070  
                                     __pmaintext 1D53                                          ?___wmul 0020  
                                _I2C1_MasterRead 1CAE                                       __pintentry 0004  
                                        ?_concat 0020                                  _I2C1_Initialize 1BA7  
                                        _BAUDCON 019F                                       _device_id_ 012B  
                                      ?___ftpack 0020                                        ?___lbtoft 0028  
                                        _APFCON0 011D                                          _APFCON1 011E  
                                        ?_printf 0041                                    edge_meter@buf 00A0  
                                  edge_meter@sec 014C                                    edge_meter@rpm 00DE  
                                        ?_strcpy 0026                       __end_of_i2c1_write_no_data 1D53  
                               ?_DATAEE_ReadByte 0070                                    _eusartRxCount 0155  
                     PROTOCOL_Send_uint16_t@pbuf 01E1                             ?_PROTOCOL_Initialize 0021  
                                      _I2C1_Stop 1BE1                                          _OSCTUNE 0098  
                                      ?_detected 0070                                          _SSP1ADD 0212  
                                        _SSP1BUF 0211                           _PROTOCOL_Start_Handler 0137  
                              __end_of_check_plg 1B08                                  del_dev@dev_addr 003B  
                        _TMR0_HasOverflowOccured 1A10                    I2C1_MasterTRBInsert@ptrb_list 0020  
                           DATAEE_WriteByte@bAdd 0021                                        ?_scan_dev 0070  
                         ?_I2C1_FunctionComplete 0070                         __size_of_command_handler 0203  
                  __size_of_I2C1_MasterTRBInsert 0057                                  add_dev@dev_addr 003B  
                             _p_i2c1_trb_current 015C                                          ___awdiv 1FAE  
                                        ___awmod 1E3B                                    ?_PROTOCOL_EXT 0070  
                                  ?_PROTOCOL_SAV 0070                                    ?_PROTOCOL_SET 0070  
                                  ?_PROTOCOL_STA 0070                                    ?_PROTOCOL_STP 0070  
                                __size_of___wmul 001C                                          ___ftmul 15C3  
                                        ___fttol 153C                                          _add_dev 1F60  
                                        ___lwdiv 1E06                                          ___lwmod 1DAA  
                                __size_of_concat 0012                                  edge_meter@rms10 00D0  
                                        __doprnt 009A                                          _del_dev 1F13  
                                     ??___ftpack 0025                                       ??___lbtoft 002B  
                                        _cmd_buf 2330                          _I2C1_MasterReadTRBBuild 1D7E  
                                        _dev_map 0125                                          _do_func 0151  
                                        __ptext1 14C2                                          __ptext2 1ACE  
                                        __ptext3 1A14                                          __ptext4 1A3E  
                                        __ptext5 1BFF                                          __ptext6 0800  
                                        __ptext7 1BA7                                          __ptext8 1B54  
                                        __ptext9 1A2B                                  __size_of_printf 0016  
                                __size_of_strcpy 001B                                          _dpowers 1000  
                          _OSCILLATOR_Initialize 0800                                     __size_of_abs 000F  
                         i2c1_write@write_status 0034                            edge_meter@initialized 014B  
     PROTOCOL_Write_Device_Address@device_id_i2c 0024                            ??_PROTOCOL_Initialize 002B  
                                        _isdigit 1A7D                                     __size_of_sen 00D2  
                                        _readbuf 01CC                     I2C1_MasterReadTRBBuild@pdata 0020  
                           I2C1_MasterRead@pdata 0028                                          _sec_cnt 0145  
                           I2C1_MasterRead@pflag 002D                                 ___awmod@dividend 0022  
                                        _invoked 0146                         ??_PIN_MANAGER_Initialize 0020  
                                        _sendbuf 0250                                       ?_I2C1_Stop 0070  
                                     ??_detected 0034                                          _tmr_cnt 0144  
                                        _put_cmd 1EC9                       __size_of_SYSTEM_Initialize 0012  
                                        _sprintf 121F                             I2C1_ISR@pi2c_buf_ptr 013D  
                                        clrloop0 1A4A                                    __doprnt@width 003D  
                                        _running 0153                                          _strncmp 07BE  
                           end_of_initialization 0096                                      ?_edge_meter 005B  
                          __end_of_print_dev_map 1EC9                                          sen@type 0069  
                                     ??_scan_dev 003C                       _PROTOCOL_Extension_Handler 012F  
                               i2c1_write@status 0035                          __end_of_I2C1_MasterRead 1CD6  
                         ??_I2C1_BusCollisionISR 0070                                _EUSART_Initialize 1B54  
                        __end_of_I2C1_Initialize 1BC3                               ?_EUSART_Initialize 0070  
                                      _RCSTAbits 019D                                          printf@f 0041  
                                 ??_PROTOCOL_EXT 005B                                   ??_PROTOCOL_SAV 0023  
                                 ??_PROTOCOL_SET 0020                                   ??_PROTOCOL_STA 0020  
                                 ??_PROTOCOL_STP 0020                                ??_exec_remote_cmd 004C  
                                   __pstringtext 1000                                     ??_i2c1_write 0032  
                            ??_EUSART_Initialize 0020                                 ??_WDT_Initialize 0020  
                                  i2c1_read@pbuf 0033                        __size_of_I2C1_MasterWrite 002A  
                              __size_of_I2C1_ISR 0151                                 __CFG_FOSC$INTOSC 0000  
                              ?_dev_map_iterator 0070                            __size_of_EUSART_Write 0027  
                      ??_TMR0_HasOverflowOccured 0020                                    _CIRCUMFERENCE 100B  
                          i2c1_write_no_data@buf 0033                                     inv_handler@t 0139  
                             ??_dev_map_iterator 0020                                       _tmr_scaler 0164  
                       __end_of_DATAEE_WriteByte 1C64                I2C1_ISR@i2c_10bit_address_restart 0159  
                      __end_of_EUSART_Initialize 1B6F                               __end_of_i2c1_write 1CFE  
                        I2C1_MasterWrite@address 0028                                      ___ftmul@exp 003A  
                                      _i2c1_read 128F                        ??_I2C1_MasterReadTRBBuild 0025  
                                 __end_of___wmul 1BA7                                ??_command_handler 0052  
                        I2C1_MasterWrite@trBlock 01D7                                     _EUSART_Write 1C87  
                                 __end_of_concat 1ACE                         I2C1_Stop@completion_code 0072  
                         ?_OSCILLATOR_Initialize 0070                              __size_of_edge_meter 02A0  
                                  i2c1_write@len 0031                                   __end_of_printf 1B1E  
                                 __end_of_strcpy 1B39                                   PROTOCOL_Loop@c 016D  
                            start_initialization 003E                                      ??_I2C1_Stop 0070  
                       __size_of_TMR0_Initialize 000B                  __size_of_PIN_MANAGER_Initialize 001F  
                                    __end_of_abs 1A9B                                      __end_of_sen 1800  
                                  ??_EUSART_Read 0020                __size_of_I2C1_MasterWriteTRBBuild 0023  
                                    putch@txData 0022                        ?_I2C1_MasterWriteTRBBuild 0020  
                           __end_of_WHEEL_RADIUS 1011                         dev_map_iterator@dev_addr 0027  
                    __size_of_PROTOCOL_Print_TLV 027B                               dev_map_iterator@xx 014F  
                             dev_map_iterator@yy 014E                              DATAEE_ReadByte@bAdd 0020  
                               ?_I2C1_MasterRead 0028                                 ?_I2C1_Initialize 0070  
                                     ?_i2c1_read 0030                                         ??___wmul 0024  
                       PROTOCOL_Send_int8_t@pbuf 0162                              inv_handler@cmd_next 0166  
           __end_of_PROTOCOL_Read_Device_Address 1A0C            __size_of_PROTOCOL_Read_Device_Address 0003  
                   _PROTOCOL_Read_Device_Address 1A09                                      __doprnt@len 0038  
                                    __doprnt@val 0036                                         ??_concat 0022  
                               scan_dev@dev_addr 0040                                      __pdataBANK2 0164  
                                       ??_printf 0047                                         ??_strcpy 002A  
                   I2C1_MasterWriteTRBBuild@ptrb 0026                            __end_of_start_handler 1A10  
                              __size_of___ftpack 0065                                __size_of___lbtoft 001B  
                                    __pbssBIGRAM 2330                      __end_of_EUSART_Transmit_ISR 1BE1  
                                    __pbssCOMMON 0078                                        ___latbits 0002  
                                  __pcstackBANK0 0020                                    __pcstackBANK1 00A0  
                                  __pcstackBANK2 016A                                    _i2c1_tr_queue 015F  
                           _PROTOCOL_Inv_Handler 012D                                     _isdigit$1500 0020  
                                  ??_inv_handler 016A                             __end_of_PROTOCOL_EXT 1AF3  
                           __end_of_PROTOCOL_SAV 1A3E                             __end_of_PROTOCOL_SET 1A2B  
                           __end_of_PROTOCOL_STA 1A7D                             __end_of_PROTOCOL_STP 1A6F  
                              __size_of_detected 002F                               _i2c1_write_no_data 1D28  
                     __end_of_EUSART_Receive_ISR 1B8B                  PROTOCOL_Initialize@stop_handler 0025  
                        ??_I2C1_FunctionComplete 0070                       __size_of_EUSART_Initialize 001B  
                                      __doprnt@c 003F                                        __doprnt@f 002E  
                                  ?_stop_handler 0070                              __end_of_EUSART_Read 1C41  
                         __size_of_PROTOCOL_Loop 0196                                edge_meter@speed10 00E6  
                                      _check_plg 1AF3                                        _edge_func 013B  
          __end_of_PROTOCOL_Write_Device_Address 1AAB           __size_of_PROTOCOL_Write_Device_Address 0010  
                  _PROTOCOL_Write_Device_Address 1A9B                              ?_i2c1_write_no_data 002E  
                               ___lwdiv@dividend 0022                           _PIN_MANAGER_Initialize 1BFF  
                              __size_of_scan_dev 0038                             EUSART_Read@readValue 0021  
                                       ?___awdiv 002B                                         ?___awmod 0020  
                                       ?___ftmul 0030                           PROTOCOL_Print_TLV@type 004C  
                                       ?___fttol 0040                                         ?_add_dev 0070  
                                       ?___lwdiv 0020                                         ?___lwmod 0028  
                                   _eusartRxHead 0157                                     _eusartTxHead 007B  
                                   _eusartRxTail 0156                                         ?__doprnt 002E  
                                   _eusartTxTail 007A                                         _I2C1_ISR 083F  
                                       ?_del_dev 0070                    ?_PROTOCOL_Read_Device_Address 0070  
                   ??_INTERRUPT_InterruptManager 0077                        PROTOCOL_Send_int16_t@pbuf 01DF  
                                      __pswtext1 1800                                 _I2C1_MasterWrite 1CFE  
                        _eusartTxBufferRemaining 0158                     __end_of_I2C1_MasterTRBInsert 133B  
                       PROTOCOL_Print_TLV@length 004D                                         ?_isdigit 0070  
                           ??_i2c1_write_no_data 0031                           I2C1_MasterRead@address 002B  
                          dev_map_iterator@exist 0026                                   del_dev@old_map 0038  
                                 del_dev@new_map 0039                            dev_map_iterator@start 0167  
                                       ?_put_cmd 002C                                 ___lwdiv@quotient 0025  
                                 __size_of_fetch 0057                                   edge_meter@pbuf 005E  
                                       ?_sprintf 0041                                   edge_meter@type 005C  
                       __size_of_DATAEE_ReadByte 000D                                         ?_strncmp 0020  
                                 __size_of_putch 0005                                   _eusartRxBuffer 0320  
                    I2C1_MasterReadTRBBuild@ptrb 0027                                   ??_stop_handler 0020  
                                   ??_edge_meter 005F                           I2C1_MasterRead@trBlock 01D2  
                              ??_TMR0_Initialize 0020                                   _eusartTxBuffer 02A0  
                                _exec_remote_cmd 0990                                   ___wmul@product 0024  
                                       _LATCbits 010E                             _PROTOCOL_Set_Handler 0133  
                                     ?_check_plg 0070                                        clear_ram0 1A49  
                            __end_of_inv_handler 172E                                         _PIE1bits 0091  
                                       _PIE2bits 0092              __size_of_INTERRUPT_InterruptManager 0038  
                                       _PIR1bits 0011                                         _PIR2bits 0012  
                                      detected@x 0038                                        detected@y 0037  
                                    ??_i2c1_read 0036                                         _SSP1CON1 0215  
                                       _SSP1CON3 0217                     PROTOCOL_Initialize@device_id 0021  
                                      _timer_cnt 0152                                         _SSP1STAT 0214  
                                   i2c1_read@len 0035                                     i2c1_read@reg 0039  
                                 _readbuf_status 0142                            _PROTOCOL_Stop_Handler 0135  
                    __end_of_PROTOCOL_Initialize 128F                                        concat@lsb 0020  
                                      concat@msb 0027                                ___wmul@multiplier 0020  
                                  _PROTOCOL_Loop 0628                                    detected@exist 0039  
                             __end_of_edge_meter 0628                            DATAEE_WriteByte@bData 0020  
                              i2c1_read@dev_addr 0030                                      _EUSART_Read 1C1E  
                              ?_DATAEE_WriteByte 0020                               i2c1_write@dev_addr 002E  
                             ??_DATAEE_WriteByte 0021                                    _slave_address 014A  
                                     put_cmd@buf 002C                                i2c1_read@reg_addr 0032  
                                     put_cmd@idx 0165                                  _command_handler 0B82  
                                     _EECON1bits 0195                               PROTOCOL_SET@value_ 0021  
                      __size_of_dev_map_iterator 005A                    __size_of_I2C1_BusCollisionISR 0001  
                         I2C1_ISR@i2c_bytes_left 015A                          ??_OSCILLATOR_Initialize 0020  
                 ?_PROTOCOL_Write_Device_Address 0070                                 __size_of___awdiv 0052  
                               __size_of___awmod 0046                                 __size_of___ftmul 00B4  
                               __size_of___fttol 0087                                        sen@length 006A  
                               __size_of_add_dev 004E                                     _WHEEL_RADIUS 100E  
                               __size_of___lwdiv 0035                                 __size_of___lwmod 002D  
                                       ___ftpack 13EC                                         ___lbtoft 1B39  
               __end_of_I2C1_MasterWriteTRBBuild 1C87                                 __size_of__doprnt 02EE  
                                 ?_PROTOCOL_Loop 0070                                 __size_of_del_dev 004D  
                                      sen@status 006B                                 edge_meter@length 005D  
                         __size_of_print_dev_map 0048                            __size_of_PROTOCOL_EXT 0013  
                          __size_of_PROTOCOL_SAV 000A                            __size_of_PROTOCOL_SET 0008  
                          __size_of_PROTOCOL_STA 000E                            __size_of_PROTOCOL_STP 000D  
                 ??_PROTOCOL_Read_Device_Address 0020                                         add_dev@x 0037  
                                       add_dev@y 003A                                 edge_meter@pulses 014D  
                               __size_of_isdigit 000F                                  ___lwdiv@divisor 0020  
                        __end_of_exec_remote_cmd 0B82                              I2C1_ISR@i2c_address 007C  
                                ___lwdiv@counter 0027                                         _detected 1DD7  
                                       __ptext10 0628                                         __ptext11 1677  
                                       __ptext20 0D85                                         __ptext12 133B  
                                       __ptext21 1ABC                                         __ptext13 172E  
                                       __ptext30 1A6F                                         __ptext22 1A8C  
                                       __ptext14 0388                                         __ptext31 1A0C  
                                       __ptext23 1E3B                                         __ptext15 121F  
                                       __ptext40 1E81                                         __ptext32 1A23  
                                       __ptext24 1DD7                                         __ptext16 1B39  
                                       __ptext41 1B08                                         __ptext33 1A34  
                                       __ptext25 0990                                         __ptext17 153C  
                                       __ptext50 128F                                         __ptext42 009A  
                                       __ptext34 1A09                                         __ptext26 1CD6  
                                       __ptext18 15C3                                         __ptext51 1CAE  
                                       __ptext43 1A18                                         __ptext35 1AE0  
                                       __ptext27 1A10                                         __ptext19 13EC  
                                       __ptext60 1451                                         __ptext52 1D7E  
                                       __ptext44 1C87                                         __ptext36 0B82  
                                       __ptext28 1A9B                                         __ptext61 1A7D  
                                       __ptext53 1F13                                         __ptext45 1DAA  
                                       __ptext37 07BE                                         __ptext29 1A62  
                                       __ptext70 1BE1                                         __ptext62 1B8B  
                                       __ptext54 1F60                                         __ptext46 1E06  
                                       __ptext38 1EC9                                         __ptext71 1AAB  
                                       __ptext63 1C41                                         __ptext55 1FAE  
                                       __ptext47 1392                                         __ptext39 1B1E  
                                       __ptext72 0003                                         __ptext64 1C1E  
                                       __ptext56 1D28                                         __ptext48 1AF3  
                                       __ptext73 1BC3                                         __ptext65 123C  
                                       __ptext57 1CFE                                         __ptext49 0807  
                                       __ptext74 1B6F                                         __ptext66 1A06  
                                       __ptext58 1C64                                         __ptext67 1A55  
                                       __ptext59 12E4                                         __ptext69 083F  
                                  fetch@dev_addr 00EF                                      edge_meter@x 00E0  
                                    edge_meter@y 00E2                                      edge_meter@z 00E4  
                                   _SSP1CON1bits 0215                                     _SSP1CON2bits 0216  
                                       _float100 0129                                      _inv_handler 1677  
                               __size_of_put_cmd 004A                                 __size_of_sprintf 001D  
                    DATAEE_WriteByte@GIEBitValue 0022                                 __size_of_strncmp 0042  
                                     strcpy@from 0028                                    __size_of_atoi 0071  
                                  __size_of_main 002B                                    __size_of_init 007A  
                                       _read_buf 01BC                                         del_dev@x 0037  
                                       del_dev@y 003A                    I2C1_MasterReadTRBBuild@length 0022  
                          I2C1_MasterRead@length 002A                                         _scan_dev 0807  
                                    ??_check_plg 0041                                       strncmp@len 0024  
                              ??_DATAEE_ReadByte 0020                                         _schedule 01A0  
                           _I2C1_MasterTRBInsert 12E4                          _BACKPLANE_SLAVE_ADDRESS 0168  
                                       fetch@sch 00ED                                         fetch@pos 00EE  
                                       int$flags 007E                                         atoi@sign 002A  
                                   _PROTOCOL_EXT 1AE0                                     _PROTOCOL_SAV 1A34  
                                   _PROTOCOL_SET 1A23                                     _PROTOCOL_STA 1A6F  
                                   _PROTOCOL_STP 1A62               __end_of_INTERRUPT_InterruptManager 003C  
                     _INTERRUPT_InterruptManager 0004                             __end_of_stop_handler 1A09  
                       ?_TMR0_HasOverflowOccured 0070                                       _INTCONbits 000B  
                                       isdigit@c 0021                       __end_of_PROTOCOL_Print_TLV 1000  
                        __end_of_command_handler 0D85                          __size_of_WDT_Initialize 0004  
                                       intlevel1 0000                                        sprintf@ap 0051  
                                      sprintf@pb 0052                                        sprintf@wh 0050  
                               ___lwmod@dividend 002A                          ?_PIN_MANAGER_Initialize 0070  
                       __end_of_I2C1_MasterWrite 1D28                                __CFG_CLKOUTEN$OFF 0000  
                 __size_of_I2C1_FunctionComplete 0011                    __end_of_I2C1_FunctionComplete 1ABC  
                                  _print_dev_map 1E81                            ?_I2C1_MasterTRBInsert 0020  
                                      strncmp@s1 0020                                        strncmp@s2 0022  
                       ?_I2C1_MasterReadTRBBuild 0020                       PROTOCOL_Print_TLV@dev_addr 0052  
                        _backplane_slave_enabled 0141                                         printf@ap 0048  
                                       printf@pb 0049                               _EUSART_Receive_ISR 1B6F  
                                ??_PROTOCOL_Loop 016B                         __size_of_I2C1_MasterRead 0028  
                       __size_of_I2C1_Initialize 001C                                  i2c1_read@status 003A  
                                     _OPTION_REG 0095                                         sprintf@f 0041  
                            ?_EUSART_Receive_ISR 0070                                 print_dev_map@len 004F  
                                ___lwmod@divisor 0028                                  _TMR0_Initialize 1A3E  
                                       strcpy@cp 002A                                         strcpy@to 0026  
                                ___lwmod@counter 002D                         _I2C1_MasterWriteTRBBuild 1C64  
                    PROTOCOL_Loop@device_address 016E                                 ?_exec_remote_cmd 0070  
                                    fetch@status 00EC                             PROTOCOL_EXT@char_buf 005B  
                             EUSART_Write@txData 0021                     __size_of_EUSART_Transmit_ISR 001E  
                      PROTOCOL_Print_TLV@pbuffer 004E                   __end_of_PIN_MANAGER_Initialize 1C1E  
                             __size_of_I2C1_Stop 001E                                   ?_print_dev_map 0070  
                           ??_EUSART_Receive_ISR 0070                                 _dev_map_iterator 1392  
                         __size_of_start_handler 0004  
